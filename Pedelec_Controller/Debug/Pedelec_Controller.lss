
Pedelec_Controller.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        0000200c  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  8000200c  8000200c  0000240c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .init         0000001a  8000200c  8000200c  0000240c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text         00007e88  80002028  80002028  00002428  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .exception    00000200  8000a000  8000a000  0000a400  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .fini         00000018  8000a200  8000a200  0000a600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .rodata       000005d4  8000a218  8000a218  0000a618  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .lalign       00000004  8000a7ec  8000a7ec  0000abec  2**0
                  ALLOC
  8 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  9 .ctors        00000008  00000008  8000a7f0  0000ac08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .dtors        00000008  00000010  8000a7f8  0000ac10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .jcr          00000004  00000018  8000a800  0000ac18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .got          00000000  0000001c  8000a804  0000ac1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .data         00000998  0000001c  8000a804  0000ac1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00004c30  000009d0  000009d0  00000000  2**2
                  ALLOC
 15 .heap         00009a00  00005600  00005600  00000000  2**0
                  ALLOC
 16 .comment      00000030  00000000  00000000  0000b5b4  2**0
                  CONTENTS, READONLY
 17 .debug_aranges 00001518  00000000  00000000  0000b5e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_pubnames 00002fa9  00000000  00000000  0000cb00  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_info   00028a84  00000000  00000000  0000faa9  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_abbrev 00006aad  00000000  00000000  0003852d  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_line   0001a560  00000000  00000000  0003efda  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_frame  00003238  00000000  00000000  0005953c  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_str    00007f01  00000000  00000000  0005c774  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_loc    0000a556  00000000  00000000  00064675  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .debug_macinfo 02376469  00000000  00000000  0006ebcb  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 27 .debug_ranges 00001638  00000000  00000000  023e5034  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:
80000000:	48 1f       	lddpc	pc,80000004 <_start+0x4>
80000002:	d7 03       	nop
80000004:	80 00       	ld.sh	r0,r0[0x0]
80000006:	20 28       	sub	r8,2

80000008 <_trampoline>:
80000008:	e0 8f 10 00 	bral	80002008 <program_start>
	...

80002008 <program_start>:
80002008:	fe cf ff e0 	sub	pc,pc,-32

Disassembly of section .init:

8000200c <_init>:
8000200c:	eb cd 40 40 	pushm	r6,lr
80002010:	48 26       	lddpc	r6,80002018 <_init+0xc>
80002012:	1e 26       	rsub	r6,pc
80002014:	c0 48       	rjmp	8000201c <_init+0x10>
80002016:	d7 03       	nop
80002018:	80 00       	ld.sh	r0,r0[0x0]
8000201a:	1f f6       	ld.ub	r6,pc[0x7]
8000201c:	c5 6c       	rcall	800020c8 <frame_dummy>
8000201e:	e0 a0 3f 3f 	rcall	80009e9c <__do_global_ctors_aux>
80002022:	e3 cd 80 40 	ldm	sp++,r6,pc

Disassembly of section .text:

80002028 <_stext>:
80002028:	30 07       	mov	r7,0
8000202a:	e0 7a 00 00 	mov	r10,65536
8000202e:	5b fa       	cp.w	r10,-1
80002030:	f4 0d 17 10 	movne	sp,r10
80002034:	49 4b       	lddpc	r11,80002084 <_stext+0x5c>
80002036:	30 8c       	mov	r12,8
80002038:	18 3b       	cp.w	r11,r12
8000203a:	c0 70       	breq	80002048 <_stext+0x20>
8000203c:	e0 6a 09 b8 	mov	r10,2488
80002040:	b7 09       	ld.d	r8,r11++
80002042:	b9 28       	st.d	r12++,r8
80002044:	14 3c       	cp.w	r12,r10
80002046:	cf d5       	brlt	80002040 <_stext+0x18>
80002048:	e0 6a 56 00 	mov	r10,22016
8000204c:	e0 6c 09 b8 	mov	r12,2488
80002050:	30 08       	mov	r8,0
80002052:	30 09       	mov	r9,0
80002054:	b9 28       	st.d	r12++,r8
80002056:	14 3c       	cp.w	r12,r10
80002058:	cf e5       	brlt	80002054 <_stext+0x2c>
8000205a:	e0 a0 19 ab 	rcall	800053b0 <_init_startup>
8000205e:	48 bc       	lddpc	r12,80002088 <_stext+0x60>
80002060:	e0 a0 2c 20 	rcall	800078a0 <atexit>
80002064:	cd 4f       	rcall	8000200c <_init>
80002066:	1a 9c       	mov	r12,sp
80002068:	30 0b       	mov	r11,0
8000206a:	e0 a0 35 97 	rcall	80008b98 <_init_argv>
8000206e:	5b fc       	cp.w	r12,-1
80002070:	f9 bc 00 00 	moveq	r12,0
80002074:	f9 ba 00 00 	moveq	r10,0
80002078:	14 1d       	sub	sp,r10
8000207a:	e0 a0 12 4f 	rcall	80004518 <main>
8000207e:	e0 a0 2c 25 	rcall	800078c8 <exit>
80002082:	d7 03       	nop
80002084:	80 00       	ld.sh	r0,r0[0x0]
80002086:	a7 f0       	*unknown*
80002088:	80 00       	ld.sh	r0,r0[0x0]
8000208a:	a2 00       	st.h	r1[0x0],r0

8000208c <__do_global_dtors_aux>:
8000208c:	d4 21       	pushm	r4-r7,lr
8000208e:	e0 68 09 d0 	mov	r8,2512
80002092:	11 89       	ld.ub	r9,r8[0x0]
80002094:	30 08       	mov	r8,0
80002096:	f0 09 18 00 	cp.b	r9,r8
8000209a:	c1 61       	brne	800020c6 <__do_global_dtors_aux+0x3a>
8000209c:	31 08       	mov	r8,16
8000209e:	31 46       	mov	r6,20
800020a0:	10 95       	mov	r5,r8
800020a2:	10 16       	sub	r6,r8
800020a4:	e0 67 09 d4 	mov	r7,2516
800020a8:	a3 46       	asr	r6,0x2
800020aa:	20 16       	sub	r6,1
800020ac:	c0 68       	rjmp	800020b8 <__do_global_dtors_aux+0x2c>
800020ae:	2f f8       	sub	r8,-1
800020b0:	8f 08       	st.w	r7[0x0],r8
800020b2:	ea 08 03 28 	ld.w	r8,r5[r8<<0x2]
800020b6:	5d 18       	icall	r8
800020b8:	6e 08       	ld.w	r8,r7[0x0]
800020ba:	0c 38       	cp.w	r8,r6
800020bc:	cf 93       	brcs	800020ae <__do_global_dtors_aux+0x22>
800020be:	30 19       	mov	r9,1
800020c0:	e0 68 09 d0 	mov	r8,2512
800020c4:	b0 89       	st.b	r8[0x0],r9
800020c6:	d8 22       	popm	r4-r7,pc

800020c8 <frame_dummy>:
800020c8:	d4 01       	pushm	lr
800020ca:	31 8c       	mov	r12,24
800020cc:	78 08       	ld.w	r8,r12[0x0]
800020ce:	58 08       	cp.w	r8,0
800020d0:	c0 50       	breq	800020da <frame_dummy+0x12>
800020d2:	48 38       	lddpc	r8,800020dc <frame_dummy+0x14>
800020d4:	58 08       	cp.w	r8,0
800020d6:	c0 20       	breq	800020da <frame_dummy+0x12>
800020d8:	5d 18       	icall	r8
800020da:	d8 02       	popm	pc
800020dc:	00 00       	add	r0,r0
	...

800020e0 <canif_clear_all_mob>:
800020e0:	eb cd 40 fc 	pushm	r2-r7,lr
800020e4:	58 0b       	cp.w	r11,0
800020e6:	c1 f0       	breq	80002124 <canif_clear_all_mob+0x44>
800020e8:	f6 c3 00 01 	sub	r3,r11,1
800020ec:	5c 53       	castu.b	r3
800020ee:	2f f3       	sub	r3,-1
800020f0:	a5 63       	lsl	r3,0x4
800020f2:	30 08       	mov	r8,0
800020f4:	fc 7a 1c 00 	mov	r10,-189440
800020f8:	a7 6c       	lsl	r12,0x6
800020fa:	f8 c9 ff ff 	sub	r9,r12,-1
800020fe:	10 9b       	mov	r11,r8
80002100:	30 04       	mov	r4,0
80002102:	30 05       	mov	r5,0
80002104:	f4 09 03 3e 	ld.w	lr,r10[r9<<0x3]
80002108:	fc 08 09 0b 	st.w	lr[r8],r11
8000210c:	f4 09 03 3e 	ld.w	lr,r10[r9<<0x3]
80002110:	10 0e       	add	lr,r8
80002112:	9d 1b       	st.w	lr[0x4],r11
80002114:	f4 09 03 3e 	ld.w	lr,r10[r9<<0x3]
80002118:	10 0e       	add	lr,r8
8000211a:	fc e5 00 08 	st.d	lr[8],r4
8000211e:	2f 08       	sub	r8,-16
80002120:	06 38       	cp.w	r8,r3
80002122:	cf 11       	brne	80002104 <canif_clear_all_mob+0x24>
80002124:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc

80002128 <canif_fixed_baudrate>:
80002128:	a9 7c       	lsl	r12,0x9
8000212a:	e2 2c e3 f4 	sub	r12,189428
8000212e:	78 08       	ld.w	r8,r12[0x0]
80002130:	e4 18 ff e7 	andh	r8,0xffe7
80002134:	99 08       	st.w	r12[0x0],r8
80002136:	78 08       	ld.w	r8,r12[0x0]
80002138:	b3 b8       	sbr	r8,0x13
8000213a:	99 08       	st.w	r12[0x0],r8
8000213c:	78 08       	ld.w	r8,r12[0x0]
8000213e:	e4 18 ff f8 	andh	r8,0xfff8
80002142:	99 08       	st.w	r12[0x0],r8
80002144:	78 08       	ld.w	r8,r12[0x0]
80002146:	b1 b8       	sbr	r8,0x11
80002148:	99 08       	st.w	r12[0x0],r8
8000214a:	78 08       	ld.w	r8,r12[0x0]
8000214c:	e0 18 ff c0 	andl	r8,0xffc0
80002150:	99 08       	st.w	r12[0x0],r8
80002152:	78 08       	ld.w	r8,r12[0x0]
80002154:	e8 18 00 03 	orl	r8,0x3
80002158:	99 08       	st.w	r12[0x0],r8
8000215a:	78 08       	ld.w	r8,r12[0x0]
8000215c:	e0 18 c7 ff 	andl	r8,0xc7ff
80002160:	99 08       	st.w	r12[0x0],r8
80002162:	78 08       	ld.w	r8,r12[0x0]
80002164:	ab b8       	sbr	r8,0xb
80002166:	99 08       	st.w	r12[0x0],r8
80002168:	78 08       	ld.w	r8,r12[0x0]
8000216a:	e0 18 f8 ff 	andl	r8,0xf8ff
8000216e:	99 08       	st.w	r12[0x0],r8
80002170:	78 08       	ld.w	r8,r12[0x0]
80002172:	a9 a8       	sbr	r8,0x8
80002174:	99 08       	st.w	r12[0x0],r8
80002176:	5e ff       	retal	1

80002178 <getBaudDiv>:
80002178:	f8 c8 00 01 	sub	r8,r12,1
8000217c:	f0 0b 00 0b 	add	r11,r8,r11
80002180:	f6 0c 0d 0a 	divu	r10,r11,r12
80002184:	14 9c       	mov	r12,r10
80002186:	f4 c8 00 01 	sub	r8,r10,1
8000218a:	e0 48 00 fe 	cp.w	r8,254
8000218e:	e0 88 00 03 	brls	80002194 <getBaudDiv+0x1c>
80002192:	5e fe       	retal	-1
80002194:	5c 8c       	casts.h	r12
80002196:	5e fc       	retal	r12

80002198 <spi_initMaster>:
80002198:	f7 39 00 0d 	ld.ub	r9,r11[13]
8000219c:	30 18       	mov	r8,1
8000219e:	f0 09 18 00 	cp.b	r9,r8
800021a2:	e0 88 00 04 	brls	800021aa <spi_initMaster+0x12>
800021a6:	30 2c       	mov	r12,2
800021a8:	5e fc       	retal	r12
800021aa:	e0 68 00 80 	mov	r8,128
800021ae:	99 08       	st.w	r12[0x0],r8
800021b0:	78 18       	ld.w	r8,r12[0x4]
800021b2:	30 19       	mov	r9,1
800021b4:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
800021b8:	f7 39 00 0d 	ld.ub	r9,r11[13]
800021bc:	f1 d9 d0 81 	bfins	r8,r9,0x4,0x1
800021c0:	30 09       	mov	r9,0
800021c2:	f1 d9 d0 e1 	bfins	r8,r9,0x7,0x1
800021c6:	30 fa       	mov	r10,15
800021c8:	f1 da d2 04 	bfins	r8,r10,0x10,0x4
800021cc:	99 18       	st.w	r12[0x4],r8
800021ce:	5e f9       	retal	r9

800021d0 <spi_selectionMode>:
800021d0:	eb cd 40 80 	pushm	r7,lr
800021d4:	30 1e       	mov	lr,1
800021d6:	f6 0e 18 00 	cp.b	lr,r11
800021da:	f9 be 02 00 	movhs	lr,0
800021de:	30 18       	mov	r8,1
800021e0:	f4 08 18 00 	cp.b	r8,r10
800021e4:	f9 b8 02 00 	movhs	r8,0
800021e8:	fd e8 10 08 	or	r8,lr,r8
800021ec:	30 07       	mov	r7,0
800021ee:	ee 08 18 00 	cp.b	r8,r7
800021f2:	c0 40       	breq	800021fa <spi_selectionMode+0x2a>
800021f4:	30 2c       	mov	r12,2
800021f6:	e3 cd 80 80 	ldm	sp++,r7,pc
800021fa:	78 18       	ld.w	r8,r12[0x4]
800021fc:	f1 db d0 21 	bfins	r8,r11,0x1,0x1
80002200:	f1 da d0 41 	bfins	r8,r10,0x2,0x1
80002204:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80002208:	99 18       	st.w	r12[0x4],r8
8000220a:	e3 cf 80 80 	ldm	sp++,r7,pc,r12=0

8000220e <spi_selectChip>:
8000220e:	78 18       	ld.w	r8,r12[0x4]
80002210:	ea 18 00 0f 	orh	r8,0xf
80002214:	99 18       	st.w	r12[0x4],r8
80002216:	78 18       	ld.w	r8,r12[0x4]
80002218:	e2 18 00 04 	andl	r8,0x4,COH
8000221c:	c0 f0       	breq	8000223a <spi_selectChip+0x2c>
8000221e:	30 e8       	mov	r8,14
80002220:	f0 0b 18 00 	cp.b	r11,r8
80002224:	e0 8b 00 19 	brhi	80002256 <spi_selectChip+0x48>
80002228:	78 18       	ld.w	r8,r12[0x4]
8000222a:	b1 6b       	lsl	r11,0x10
8000222c:	ea 1b ff f0 	orh	r11,0xfff0
80002230:	e8 1b ff ff 	orl	r11,0xffff
80002234:	10 6b       	and	r11,r8
80002236:	99 1b       	st.w	r12[0x4],r11
80002238:	5e fd       	retal	0
8000223a:	30 38       	mov	r8,3
8000223c:	f0 0b 18 00 	cp.b	r11,r8
80002240:	e0 8b 00 0b 	brhi	80002256 <spi_selectChip+0x48>
80002244:	78 18       	ld.w	r8,r12[0x4]
80002246:	2f 0b       	sub	r11,-16
80002248:	30 19       	mov	r9,1
8000224a:	f2 0b 09 4b 	lsl	r11,r9,r11
8000224e:	5c db       	com	r11
80002250:	10 6b       	and	r11,r8
80002252:	99 1b       	st.w	r12[0x4],r11
80002254:	5e fd       	retal	0
80002256:	30 2c       	mov	r12,2
80002258:	5e fc       	retal	r12

8000225a <spi_unselectChip>:
8000225a:	e0 68 3a 98 	mov	r8,15000
8000225e:	c0 58       	rjmp	80002268 <spi_unselectChip+0xe>
80002260:	58 08       	cp.w	r8,0
80002262:	c0 21       	brne	80002266 <spi_unselectChip+0xc>
80002264:	5e ff       	retal	1
80002266:	20 18       	sub	r8,1
80002268:	78 49       	ld.w	r9,r12[0x10]
8000226a:	e2 19 02 00 	andl	r9,0x200,COH
8000226e:	cf 90       	breq	80002260 <spi_unselectChip+0x6>
80002270:	78 18       	ld.w	r8,r12[0x4]
80002272:	ea 18 00 0f 	orh	r8,0xf
80002276:	99 18       	st.w	r12[0x4],r8
80002278:	fc 18 01 00 	movh	r8,0x100
8000227c:	99 08       	st.w	r12[0x0],r8
8000227e:	5e fd       	retal	0

80002280 <spi_setupChipReg>:
80002280:	eb cd 40 f8 	pushm	r3-r7,lr
80002284:	18 95       	mov	r5,r12
80002286:	16 97       	mov	r7,r11
80002288:	f7 36 00 0c 	ld.ub	r6,r11[12]
8000228c:	30 38       	mov	r8,3
8000228e:	f0 06 18 00 	cp.b	r6,r8
80002292:	e0 8b 00 4d 	brhi	8000232c <spi_setupChipReg+0xac>
80002296:	f7 34 00 0b 	ld.ub	r4,r11[11]
8000229a:	30 18       	mov	r8,1
8000229c:	f0 04 18 00 	cp.b	r4,r8
800022a0:	e0 8b 00 46 	brhi	8000232c <spi_setupChipReg+0xac>
800022a4:	f7 33 00 08 	ld.ub	r3,r11[8]
800022a8:	30 78       	mov	r8,7
800022aa:	f0 03 18 00 	cp.b	r3,r8
800022ae:	e0 88 00 3f 	brls	8000232c <spi_setupChipReg+0xac>
800022b2:	31 08       	mov	r8,16
800022b4:	f0 03 18 00 	cp.b	r3,r8
800022b8:	e0 8b 00 3a 	brhi	8000232c <spi_setupChipReg+0xac>
800022bc:	14 9b       	mov	r11,r10
800022be:	6e 1c       	ld.w	r12,r7[0x4]
800022c0:	f0 1f 00 1d 	mcall	80002334 <spi_setupChipReg+0xb4>
800022c4:	c3 45       	brlt	8000232c <spi_setupChipReg+0xac>
800022c6:	30 08       	mov	r8,0
800022c8:	ec 09 16 01 	lsr	r9,r6,0x1
800022cc:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
800022d0:	ec 16 00 01 	eorl	r6,0x1
800022d4:	f1 d6 d0 21 	bfins	r8,r6,0x1,0x1
800022d8:	f1 d4 d0 61 	bfins	r8,r4,0x3,0x1
800022dc:	20 83       	sub	r3,8
800022de:	f1 d3 d0 84 	bfins	r8,r3,0x4,0x4
800022e2:	f1 dc d1 08 	bfins	r8,r12,0x8,0x8
800022e6:	ef 39 00 09 	ld.ub	r9,r7[9]
800022ea:	f1 d9 d2 08 	bfins	r8,r9,0x10,0x8
800022ee:	ef 39 00 0a 	ld.ub	r9,r7[10]
800022f2:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
800022f6:	0f 89       	ld.ub	r9,r7[0x0]
800022f8:	30 1a       	mov	r10,1
800022fa:	f4 09 18 00 	cp.b	r9,r10
800022fe:	c0 e0       	breq	8000231a <spi_setupChipReg+0x9a>
80002300:	c0 a3       	brcs	80002314 <spi_setupChipReg+0x94>
80002302:	30 2a       	mov	r10,2
80002304:	f4 09 18 00 	cp.b	r9,r10
80002308:	c0 c0       	breq	80002320 <spi_setupChipReg+0xa0>
8000230a:	30 3a       	mov	r10,3
8000230c:	f4 09 18 00 	cp.b	r9,r10
80002310:	c0 e1       	brne	8000232c <spi_setupChipReg+0xac>
80002312:	c0 a8       	rjmp	80002326 <spi_setupChipReg+0xa6>
80002314:	8b c8       	st.w	r5[0x30],r8
80002316:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
8000231a:	8b d8       	st.w	r5[0x34],r8
8000231c:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002320:	8b e8       	st.w	r5[0x38],r8
80002322:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002326:	8b f8       	st.w	r5[0x3c],r8
80002328:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
8000232c:	30 2c       	mov	r12,2
8000232e:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002332:	00 00       	add	r0,r0
80002334:	80 00       	ld.sh	r0,r0[0x0]
80002336:	21 78       	sub	r8,23

80002338 <spi_enable>:
80002338:	30 18       	mov	r8,1
8000233a:	99 08       	st.w	r12[0x0],r8
8000233c:	5e fc       	retal	r12

8000233e <spi_write>:
8000233e:	e0 68 3a 98 	mov	r8,15000
80002342:	c0 58       	rjmp	8000234c <spi_write+0xe>
80002344:	58 08       	cp.w	r8,0
80002346:	c0 21       	brne	8000234a <spi_write+0xc>
80002348:	5e ff       	retal	1
8000234a:	20 18       	sub	r8,1
8000234c:	78 49       	ld.w	r9,r12[0x10]
8000234e:	e2 19 00 02 	andl	r9,0x2,COH
80002352:	cf 90       	breq	80002344 <spi_write+0x6>
80002354:	5c 7b       	castu.h	r11
80002356:	99 3b       	st.w	r12[0xc],r11
80002358:	5e fd       	retal	0

8000235a <spi_read>:
8000235a:	e0 68 3a 98 	mov	r8,15000
8000235e:	c0 58       	rjmp	80002368 <spi_read+0xe>
80002360:	58 08       	cp.w	r8,0
80002362:	c0 21       	brne	80002366 <spi_read+0xc>
80002364:	5e ff       	retal	1
80002366:	20 18       	sub	r8,1
80002368:	78 49       	ld.w	r9,r12[0x10]
8000236a:	e2 19 02 01 	andl	r9,0x201,COH
8000236e:	e0 49 02 01 	cp.w	r9,513
80002372:	cf 71       	brne	80002360 <spi_read+0x6>
80002374:	78 28       	ld.w	r8,r12[0x8]
80002376:	b6 08       	st.h	r11[0x0],r8
80002378:	5e fd       	retal	0
8000237a:	d7 03       	nop

8000237c <can0_int_tx_handler>:
8000237c:	d4 01       	pushm	lr
8000237e:	fc 78 1c 00 	mov	r8,-189440
80002382:	70 cc       	ld.w	r12,r8[0x30]
80002384:	f9 dc c2 06 	bfextu	r12,r12,0x10,0x6
80002388:	32 08       	mov	r8,32
8000238a:	f0 0c 18 00 	cp.b	r12,r8
8000238e:	c0 f0       	breq	800023ac <can0_int_tx_handler+0x30>
80002390:	30 19       	mov	r9,1
80002392:	f2 0c 09 49 	lsl	r9,r9,r12
80002396:	fc 78 1c 00 	mov	r8,-189440
8000239a:	f1 49 00 54 	st.w	r8[84],r9
8000239e:	f8 0c 00 18 	add	r8,r12,r12<<0x1
800023a2:	a3 68       	lsl	r8,0x2
800023a4:	e2 28 e3 a0 	sub	r8,189344
800023a8:	30 f9       	mov	r9,15
800023aa:	91 09       	st.w	r8[0x0],r9
800023ac:	48 38       	lddpc	r8,800023b8 <can0_int_tx_handler+0x3c>
800023ae:	70 08       	ld.w	r8,r8[0x0]
800023b0:	30 0b       	mov	r11,0
800023b2:	5d 18       	icall	r8
800023b4:	d4 02       	popm	lr
800023b6:	d6 03       	rete
800023b8:	00 00       	add	r0,r0
800023ba:	09 e0       	ld.ub	r0,r4[0x6]

800023bc <can0_int_rx_handler>:
800023bc:	d4 01       	pushm	lr
800023be:	fc 78 1c 00 	mov	r8,-189440
800023c2:	70 cc       	ld.w	r12,r8[0x30]
800023c4:	f9 dc c1 06 	bfextu	r12,r12,0x8,0x6
800023c8:	32 08       	mov	r8,32
800023ca:	f0 0c 18 00 	cp.b	r12,r8
800023ce:	c0 f0       	breq	800023ec <can0_int_rx_handler+0x30>
800023d0:	30 19       	mov	r9,1
800023d2:	f2 0c 09 49 	lsl	r9,r9,r12
800023d6:	fc 78 1c 00 	mov	r8,-189440
800023da:	f1 49 00 4c 	st.w	r8[76],r9
800023de:	f8 0c 00 18 	add	r8,r12,r12<<0x1
800023e2:	a3 68       	lsl	r8,0x2
800023e4:	e2 28 e3 a0 	sub	r8,189344
800023e8:	30 f9       	mov	r9,15
800023ea:	91 09       	st.w	r8[0x0],r9
800023ec:	48 38       	lddpc	r8,800023f8 <can0_int_rx_handler+0x3c>
800023ee:	70 08       	ld.w	r8,r8[0x0]
800023f0:	30 0b       	mov	r11,0
800023f2:	5d 18       	icall	r8
800023f4:	d4 02       	popm	lr
800023f6:	d6 03       	rete
800023f8:	00 00       	add	r0,r0
800023fa:	09 e0       	ld.ub	r0,r4[0x6]

800023fc <can0_int_busoff_handler>:
800023fc:	d4 01       	pushm	lr
800023fe:	fc 78 1c 00 	mov	r8,-189440
80002402:	70 b9       	ld.w	r9,r8[0x2c]
80002404:	91 a9       	st.w	r8[0x28],r9
80002406:	48 58       	lddpc	r8,80002418 <can0_int_busoff_handler+0x1c>
80002408:	70 08       	ld.w	r8,r8[0x0]
8000240a:	30 4b       	mov	r11,4
8000240c:	e0 6c 00 ff 	mov	r12,255
80002410:	5d 18       	icall	r8
80002412:	d4 02       	popm	lr
80002414:	d6 03       	rete
80002416:	00 00       	add	r0,r0
80002418:	00 00       	add	r0,r0
8000241a:	09 e0       	ld.ub	r0,r4[0x6]

8000241c <can0_int_cerr_handler>:
8000241c:	d4 01       	pushm	lr
8000241e:	fc 78 1c 00 	mov	r8,-189440
80002422:	70 b9       	ld.w	r9,r8[0x2c]
80002424:	91 a9       	st.w	r8[0x28],r9
80002426:	48 58       	lddpc	r8,80002438 <can0_int_cerr_handler+0x1c>
80002428:	70 08       	ld.w	r8,r8[0x0]
8000242a:	30 2b       	mov	r11,2
8000242c:	e0 6c 00 ff 	mov	r12,255
80002430:	5d 18       	icall	r8
80002432:	d4 02       	popm	lr
80002434:	d6 03       	rete
80002436:	00 00       	add	r0,r0
80002438:	00 00       	add	r0,r0
8000243a:	09 e0       	ld.ub	r0,r4[0x6]

8000243c <can0_int_wakeup_handler>:
8000243c:	d4 01       	pushm	lr
8000243e:	fc 78 1c 00 	mov	r8,-189440
80002442:	70 b9       	ld.w	r9,r8[0x2c]
80002444:	91 a9       	st.w	r8[0x28],r9
80002446:	48 58       	lddpc	r8,80002458 <can0_int_wakeup_handler+0x1c>
80002448:	70 08       	ld.w	r8,r8[0x0]
8000244a:	30 3b       	mov	r11,3
8000244c:	e0 6c 00 ff 	mov	r12,255
80002450:	5d 18       	icall	r8
80002452:	d4 02       	popm	lr
80002454:	d6 03       	rete
80002456:	00 00       	add	r0,r0
80002458:	00 00       	add	r0,r0
8000245a:	09 e0       	ld.ub	r0,r4[0x6]

8000245c <can1_int_tx_handler>:
8000245c:	d4 01       	pushm	lr
8000245e:	fc 78 1c 00 	mov	r8,-189440
80002462:	f0 fc 02 30 	ld.w	r12,r8[560]
80002466:	f9 dc c2 06 	bfextu	r12,r12,0x10,0x6
8000246a:	32 08       	mov	r8,32
8000246c:	f0 0c 18 00 	cp.b	r12,r8
80002470:	c0 f0       	breq	8000248e <can1_int_tx_handler+0x32>
80002472:	30 19       	mov	r9,1
80002474:	f2 0c 09 49 	lsl	r9,r9,r12
80002478:	fc 78 1c 00 	mov	r8,-189440
8000247c:	f1 49 02 54 	st.w	r8[596],r9
80002480:	f8 0c 00 18 	add	r8,r12,r12<<0x1
80002484:	a3 68       	lsl	r8,0x2
80002486:	e2 28 e1 a0 	sub	r8,188832
8000248a:	30 f9       	mov	r9,15
8000248c:	91 09       	st.w	r8[0x0],r9
8000248e:	48 48       	lddpc	r8,8000249c <can1_int_tx_handler+0x40>
80002490:	70 18       	ld.w	r8,r8[0x4]
80002492:	30 0b       	mov	r11,0
80002494:	5d 18       	icall	r8
80002496:	d4 02       	popm	lr
80002498:	d6 03       	rete
8000249a:	00 00       	add	r0,r0
8000249c:	00 00       	add	r0,r0
8000249e:	09 e0       	ld.ub	r0,r4[0x6]

800024a0 <can1_int_rx_handler>:
800024a0:	d4 01       	pushm	lr
800024a2:	fc 78 1c 00 	mov	r8,-189440
800024a6:	f0 fc 02 30 	ld.w	r12,r8[560]
800024aa:	f9 dc c1 06 	bfextu	r12,r12,0x8,0x6
800024ae:	32 08       	mov	r8,32
800024b0:	f0 0c 18 00 	cp.b	r12,r8
800024b4:	c0 f0       	breq	800024d2 <can1_int_rx_handler+0x32>
800024b6:	30 19       	mov	r9,1
800024b8:	f2 0c 09 49 	lsl	r9,r9,r12
800024bc:	fc 78 1c 00 	mov	r8,-189440
800024c0:	f1 49 02 4c 	st.w	r8[588],r9
800024c4:	f8 0c 00 18 	add	r8,r12,r12<<0x1
800024c8:	a3 68       	lsl	r8,0x2
800024ca:	e2 28 e1 a0 	sub	r8,188832
800024ce:	30 f9       	mov	r9,15
800024d0:	91 09       	st.w	r8[0x0],r9
800024d2:	48 48       	lddpc	r8,800024e0 <can1_int_rx_handler+0x40>
800024d4:	70 18       	ld.w	r8,r8[0x4]
800024d6:	30 0b       	mov	r11,0
800024d8:	5d 18       	icall	r8
800024da:	d4 02       	popm	lr
800024dc:	d6 03       	rete
800024de:	00 00       	add	r0,r0
800024e0:	00 00       	add	r0,r0
800024e2:	09 e0       	ld.ub	r0,r4[0x6]

800024e4 <can1_int_busoff_handler>:
800024e4:	d4 01       	pushm	lr
800024e6:	fc 78 1c 00 	mov	r8,-189440
800024ea:	f0 f9 02 2c 	ld.w	r9,r8[556]
800024ee:	f1 49 02 28 	st.w	r8[552],r9
800024f2:	48 58       	lddpc	r8,80002504 <can1_int_busoff_handler+0x20>
800024f4:	70 18       	ld.w	r8,r8[0x4]
800024f6:	30 4b       	mov	r11,4
800024f8:	e0 6c 00 ff 	mov	r12,255
800024fc:	5d 18       	icall	r8
800024fe:	d4 02       	popm	lr
80002500:	d6 03       	rete
80002502:	00 00       	add	r0,r0
80002504:	00 00       	add	r0,r0
80002506:	09 e0       	ld.ub	r0,r4[0x6]

80002508 <can1_int_cerr_handler>:
80002508:	d4 01       	pushm	lr
8000250a:	fc 78 1c 00 	mov	r8,-189440
8000250e:	f0 f9 02 2c 	ld.w	r9,r8[556]
80002512:	f1 49 02 28 	st.w	r8[552],r9
80002516:	48 58       	lddpc	r8,80002528 <can1_int_cerr_handler+0x20>
80002518:	70 18       	ld.w	r8,r8[0x4]
8000251a:	30 2b       	mov	r11,2
8000251c:	e0 6c 00 ff 	mov	r12,255
80002520:	5d 18       	icall	r8
80002522:	d4 02       	popm	lr
80002524:	d6 03       	rete
80002526:	00 00       	add	r0,r0
80002528:	00 00       	add	r0,r0
8000252a:	09 e0       	ld.ub	r0,r4[0x6]

8000252c <can1_int_wakeup_handler>:
8000252c:	d4 01       	pushm	lr
8000252e:	fc 78 1c 00 	mov	r8,-189440
80002532:	f0 f9 02 2c 	ld.w	r9,r8[556]
80002536:	f1 49 02 28 	st.w	r8[552],r9
8000253a:	48 58       	lddpc	r8,8000254c <can1_int_wakeup_handler+0x20>
8000253c:	70 18       	ld.w	r8,r8[0x4]
8000253e:	30 3b       	mov	r11,3
80002540:	e0 6c 00 ff 	mov	r12,255
80002544:	5d 18       	icall	r8
80002546:	d4 02       	popm	lr
80002548:	d6 03       	rete
8000254a:	00 00       	add	r0,r0
8000254c:	00 00       	add	r0,r0
8000254e:	09 e0       	ld.ub	r0,r4[0x6]

80002550 <can_mob_alloc>:
80002550:	30 18       	mov	r8,1
80002552:	f0 0c 18 00 	cp.b	r12,r8
80002556:	e0 8b 00 5e 	brhi	80002612 <can_mob_alloc+0xc2>
8000255a:	58 0c       	cp.w	r12,0
8000255c:	c0 80       	breq	8000256c <can_mob_alloc+0x1c>
8000255e:	4a f8       	lddpc	r8,80002618 <can_mob_alloc+0xc8>
80002560:	70 09       	ld.w	r9,r8[0x0]
80002562:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
80002566:	c2 f1       	brne	800025c4 <can_mob_alloc+0x74>
80002568:	30 0c       	mov	r12,0
8000256a:	c3 38       	rjmp	800025d0 <can_mob_alloc+0x80>
8000256c:	4a c8       	lddpc	r8,8000261c <can_mob_alloc+0xcc>
8000256e:	70 09       	ld.w	r9,r8[0x0]
80002570:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
80002574:	c0 31       	brne	8000257a <can_mob_alloc+0x2a>
80002576:	30 0c       	mov	r12,0
80002578:	c0 78       	rjmp	80002586 <can_mob_alloc+0x36>
8000257a:	30 1c       	mov	r12,1
8000257c:	f2 0c 0a 48 	lsr	r8,r9,r12
80002580:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80002584:	c1 c1       	brne	800025bc <can_mob_alloc+0x6c>
80002586:	30 18       	mov	r8,1
80002588:	f0 0c 09 48 	lsl	r8,r8,r12
8000258c:	f1 e9 10 09 	or	r9,r8,r9
80002590:	4a 38       	lddpc	r8,8000261c <can_mob_alloc+0xcc>
80002592:	91 09       	st.w	r8[0x0],r9
80002594:	f8 08 15 04 	lsl	r8,r12,0x4
80002598:	fc 79 1c 00 	mov	r9,-189440
8000259c:	72 2b       	ld.w	r11,r9[0x8]
8000259e:	30 0a       	mov	r10,0
800025a0:	f0 0b 09 0a 	st.w	r8[r11],r10
800025a4:	72 2b       	ld.w	r11,r9[0x8]
800025a6:	f0 0b 00 0b 	add	r11,r8,r11
800025aa:	97 1a       	st.w	r11[0x4],r10
800025ac:	72 29       	ld.w	r9,r9[0x8]
800025ae:	12 08       	add	r8,r9
800025b0:	30 0a       	mov	r10,0
800025b2:	30 0b       	mov	r11,0
800025b4:	f0 eb 00 08 	st.d	r8[8],r10
800025b8:	5c 5c       	castu.b	r12
800025ba:	5e fc       	retal	r12
800025bc:	2f fc       	sub	r12,-1
800025be:	59 0c       	cp.w	r12,16
800025c0:	cd e1       	brne	8000257c <can_mob_alloc+0x2c>
800025c2:	c2 88       	rjmp	80002612 <can_mob_alloc+0xc2>
800025c4:	30 1c       	mov	r12,1
800025c6:	f2 0c 0a 48 	lsr	r8,r9,r12
800025ca:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800025ce:	c1 f1       	brne	8000260c <can_mob_alloc+0xbc>
800025d0:	30 18       	mov	r8,1
800025d2:	f0 0c 09 48 	lsl	r8,r8,r12
800025d6:	f1 e9 10 09 	or	r9,r8,r9
800025da:	49 08       	lddpc	r8,80002618 <can_mob_alloc+0xc8>
800025dc:	91 09       	st.w	r8[0x0],r9
800025de:	f8 08 15 04 	lsl	r8,r12,0x4
800025e2:	fc 79 1c 00 	mov	r9,-189440
800025e6:	f2 fb 02 08 	ld.w	r11,r9[520]
800025ea:	30 0a       	mov	r10,0
800025ec:	f0 0b 09 0a 	st.w	r8[r11],r10
800025f0:	f2 fb 02 08 	ld.w	r11,r9[520]
800025f4:	f0 0b 00 0b 	add	r11,r8,r11
800025f8:	97 1a       	st.w	r11[0x4],r10
800025fa:	f2 f9 02 08 	ld.w	r9,r9[520]
800025fe:	12 08       	add	r8,r9
80002600:	30 0a       	mov	r10,0
80002602:	30 0b       	mov	r11,0
80002604:	f0 eb 00 08 	st.d	r8[8],r10
80002608:	5c 5c       	castu.b	r12
8000260a:	5e fc       	retal	r12
8000260c:	2f fc       	sub	r12,-1
8000260e:	59 0c       	cp.w	r12,16
80002610:	cd b1       	brne	800025c6 <can_mob_alloc+0x76>
80002612:	e0 6c 00 ff 	mov	r12,255
80002616:	5e fc       	retal	r12
80002618:	00 00       	add	r0,r0
8000261a:	09 dc       	ld.ub	r12,r4[0x5]
8000261c:	00 00       	add	r0,r0
8000261e:	09 d8       	ld.ub	r8,r4[0x5]

80002620 <can_mob_free>:
80002620:	30 18       	mov	r8,1
80002622:	f8 08 18 00 	cp.b	r8,r12
80002626:	f9 b8 02 00 	movhs	r8,0
8000262a:	30 19       	mov	r9,1
8000262c:	30 fa       	mov	r10,15
8000262e:	f6 0a 18 00 	cp.b	r10,r11
80002632:	f9 b9 02 00 	movhs	r9,0
80002636:	12 48       	or	r8,r9
80002638:	30 0a       	mov	r10,0
8000263a:	f4 08 18 00 	cp.b	r8,r10
8000263e:	c0 40       	breq	80002646 <can_mob_free+0x26>
80002640:	e0 6c 00 ff 	mov	r12,255
80002644:	5e fc       	retal	r12
80002646:	58 0c       	cp.w	r12,0
80002648:	c0 60       	breq	80002654 <can_mob_free+0x34>
8000264a:	30 18       	mov	r8,1
8000264c:	f0 0c 18 00 	cp.b	r12,r8
80002650:	c0 b0       	breq	80002666 <can_mob_free+0x46>
80002652:	5e fd       	retal	0
80002654:	48 98       	lddpc	r8,80002678 <can_mob_free+0x58>
80002656:	30 19       	mov	r9,1
80002658:	f2 0b 09 4b 	lsl	r11,r9,r11
8000265c:	5c db       	com	r11
8000265e:	70 09       	ld.w	r9,r8[0x0]
80002660:	12 6b       	and	r11,r9
80002662:	91 0b       	st.w	r8[0x0],r11
80002664:	5e fd       	retal	0
80002666:	48 68       	lddpc	r8,8000267c <can_mob_free+0x5c>
80002668:	30 19       	mov	r9,1
8000266a:	f2 0b 09 4b 	lsl	r11,r9,r11
8000266e:	5c db       	com	r11
80002670:	70 09       	ld.w	r9,r8[0x0]
80002672:	12 6b       	and	r11,r9
80002674:	91 0b       	st.w	r8[0x0],r11
80002676:	5e fd       	retal	0
80002678:	00 00       	add	r0,r0
8000267a:	09 d8       	ld.ub	r8,r4[0x5]
8000267c:	00 00       	add	r0,r0
8000267e:	09 dc       	ld.ub	r12,r4[0x5]

80002680 <can_tx>:
80002680:	eb cd 40 f8 	pushm	r3-r7,lr
80002684:	30 1e       	mov	lr,1
80002686:	f8 0e 18 00 	cp.b	lr,r12
8000268a:	f9 be 02 00 	movhs	lr,0
8000268e:	30 17       	mov	r7,1
80002690:	30 f6       	mov	r6,15
80002692:	f6 06 18 00 	cp.b	r6,r11
80002696:	f9 b7 02 00 	movhs	r7,0
8000269a:	0e 96       	mov	r6,r7
8000269c:	0c 4e       	or	lr,r6
8000269e:	30 06       	mov	r6,0
800026a0:	ec 0e 18 00 	cp.b	lr,r6
800026a4:	c7 d1       	brne	8000279e <can_tx+0x11e>
800026a6:	30 8e       	mov	lr,8
800026a8:	fc 0a 18 00 	cp.b	r10,lr
800026ac:	e0 8b 00 79 	brhi	8000279e <can_tx+0x11e>
800026b0:	70 0e       	ld.w	lr,r8[0x0]
800026b2:	e6 1e 20 00 	andh	lr,0x2000,COH
800026b6:	c1 40       	breq	800026de <can_tx+0x5e>
800026b8:	f6 0e 15 04 	lsl	lr,r11,0x4
800026bc:	fc 77 1c 00 	mov	r7,-189440
800026c0:	f8 06 15 06 	lsl	r6,r12,0x6
800026c4:	2f f6       	sub	r6,-1
800026c6:	ee 06 03 35 	ld.w	r5,r7[r6<<0x3]
800026ca:	70 04       	ld.w	r4,r8[0x0]
800026cc:	bd b4       	sbr	r4,0x1d
800026ce:	fc 05 09 04 	st.w	lr[r5],r4
800026d2:	ee 06 03 37 	ld.w	r7,r7[r6<<0x3]
800026d6:	0e 0e       	add	lr,r7
800026d8:	70 17       	ld.w	r7,r8[0x4]
800026da:	9d 17       	st.w	lr[0x4],r7
800026dc:	c1 28       	rjmp	80002700 <can_tx+0x80>
800026de:	f6 0e 15 04 	lsl	lr,r11,0x4
800026e2:	fc 77 1c 00 	mov	r7,-189440
800026e6:	f8 06 15 06 	lsl	r6,r12,0x6
800026ea:	2f f6       	sub	r6,-1
800026ec:	ee 06 03 35 	ld.w	r5,r7[r6<<0x3]
800026f0:	70 04       	ld.w	r4,r8[0x0]
800026f2:	fc 05 09 04 	st.w	lr[r5],r4
800026f6:	ee 06 03 37 	ld.w	r7,r7[r6<<0x3]
800026fa:	0e 0e       	add	lr,r7
800026fc:	70 17       	ld.w	r7,r8[0x4]
800026fe:	9d 17       	st.w	lr[0x4],r7
80002700:	16 97       	mov	r7,r11
80002702:	f8 0e 15 09 	lsl	lr,r12,0x9
80002706:	2f 8e       	sub	lr,-8
80002708:	f6 0b 00 16 	add	r6,r11,r11<<0x1
8000270c:	fc 06 00 2e 	add	lr,lr,r6<<0x2
80002710:	e2 2e e3 ac 	sub	lr,189356
80002714:	7c 06       	ld.w	r6,lr[0x0]
80002716:	e0 16 ff f0 	andl	r6,0xfff0
8000271a:	9d 06       	st.w	lr[0x0],r6
8000271c:	7c 06       	ld.w	r6,lr[0x0]
8000271e:	ed ea 10 0a 	or	r10,r6,r10
80002722:	9d 0a       	st.w	lr[0x0],r10
80002724:	30 1a       	mov	r10,1
80002726:	f4 09 18 00 	cp.b	r9,r10
8000272a:	c1 b1       	brne	80002760 <can_tx+0xe0>
8000272c:	f6 09 15 04 	lsl	r9,r11,0x4
80002730:	fc 7a 1c 00 	mov	r10,-189440
80002734:	f8 05 15 06 	lsl	r5,r12,0x6
80002738:	2f f5       	sub	r5,-1
8000273a:	f4 05 03 34 	ld.w	r4,r10[r5<<0x3]
8000273e:	f2 04 03 03 	ld.w	r3,r9[r4]
80002742:	30 16       	mov	r6,1
80002744:	e7 d6 d3 c1 	bfins	r3,r6,0x1e,0x1
80002748:	f2 04 09 03 	st.w	r9[r4],r3
8000274c:	f4 05 03 3a 	ld.w	r10,r10[r5<<0x3]
80002750:	14 09       	add	r9,r10
80002752:	72 1a       	ld.w	r10,r9[0x4]
80002754:	f5 d6 d3 c1 	bfins	r10,r6,0x1e,0x1
80002758:	93 1a       	st.w	r9[0x4],r10
8000275a:	7c 09       	ld.w	r9,lr[0x0]
8000275c:	a5 b9       	sbr	r9,0x5
8000275e:	9d 09       	st.w	lr[0x0],r9
80002760:	fc 79 1c 00 	mov	r9,-189440
80002764:	f8 0a 15 06 	lsl	r10,r12,0x6
80002768:	2f fa       	sub	r10,-1
8000276a:	f2 0a 03 3a 	ld.w	r10,r9[r10<<0x3]
8000276e:	a5 6b       	lsl	r11,0x4
80002770:	14 0b       	add	r11,r10
80002772:	f0 e4 00 08 	ld.d	r4,r8[8]
80002776:	f6 e5 00 08 	st.d	r11[8],r4
8000277a:	7c 08       	ld.w	r8,lr[0x0]
8000277c:	a5 a8       	sbr	r8,0x4
8000277e:	9d 08       	st.w	lr[0x0],r8
80002780:	30 18       	mov	r8,1
80002782:	f0 07 09 48 	lsl	r8,r8,r7
80002786:	f8 0a 15 09 	lsl	r10,r12,0x9
8000278a:	f2 0a 00 0a 	add	r10,r9,r10
8000278e:	2c ca       	sub	r10,-52
80002790:	95 08       	st.w	r10[0x0],r8
80002792:	a9 7c       	lsl	r12,0x9
80002794:	2c 0c       	sub	r12,-64
80002796:	18 09       	add	r9,r12
80002798:	93 08       	st.w	r9[0x0],r8
8000279a:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
8000279e:	e0 6c 00 ff 	mov	r12,255
800027a2:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc

800027a6 <can_rx>:
800027a6:	eb cd 40 e0 	pushm	r5-r7,lr
800027aa:	30 18       	mov	r8,1
800027ac:	f8 08 18 00 	cp.b	r8,r12
800027b0:	f9 b8 02 00 	movhs	r8,0
800027b4:	30 1e       	mov	lr,1
800027b6:	30 f7       	mov	r7,15
800027b8:	f6 07 18 00 	cp.b	r7,r11
800027bc:	f9 be 02 00 	movhs	lr,0
800027c0:	1c 48       	or	r8,lr
800027c2:	30 07       	mov	r7,0
800027c4:	ee 08 18 00 	cp.b	r8,r7
800027c8:	c0 50       	breq	800027d2 <can_rx+0x2c>
800027ca:	e0 6c 00 ff 	mov	r12,255
800027ce:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
800027d2:	72 08       	ld.w	r8,r9[0x0]
800027d4:	e6 18 20 00 	andh	r8,0x2000,COH
800027d8:	c1 40       	breq	80002800 <can_rx+0x5a>
800027da:	f6 08 15 04 	lsl	r8,r11,0x4
800027de:	fc 7e 1c 00 	mov	lr,-189440
800027e2:	f8 07 15 06 	lsl	r7,r12,0x6
800027e6:	2f f7       	sub	r7,-1
800027e8:	fc 07 03 36 	ld.w	r6,lr[r7<<0x3]
800027ec:	72 05       	ld.w	r5,r9[0x0]
800027ee:	bd b5       	sbr	r5,0x1d
800027f0:	f0 06 09 05 	st.w	r8[r6],r5
800027f4:	fc 07 03 3e 	ld.w	lr,lr[r7<<0x3]
800027f8:	1c 08       	add	r8,lr
800027fa:	72 1e       	ld.w	lr,r9[0x4]
800027fc:	91 1e       	st.w	r8[0x4],lr
800027fe:	c1 28       	rjmp	80002822 <can_rx+0x7c>
80002800:	f6 08 15 04 	lsl	r8,r11,0x4
80002804:	fc 7e 1c 00 	mov	lr,-189440
80002808:	f8 07 15 06 	lsl	r7,r12,0x6
8000280c:	2f f7       	sub	r7,-1
8000280e:	fc 07 03 36 	ld.w	r6,lr[r7<<0x3]
80002812:	72 05       	ld.w	r5,r9[0x0]
80002814:	f0 06 09 05 	st.w	r8[r6],r5
80002818:	fc 07 03 3e 	ld.w	lr,lr[r7<<0x3]
8000281c:	1c 08       	add	r8,lr
8000281e:	72 1e       	ld.w	lr,r9[0x4]
80002820:	91 1e       	st.w	r8[0x4],lr
80002822:	30 18       	mov	r8,1
80002824:	f0 0a 18 00 	cp.b	r10,r8
80002828:	c2 a1       	brne	8000287c <can_rx+0xd6>
8000282a:	f6 08 15 04 	lsl	r8,r11,0x4
8000282e:	fc 7e 1c 00 	mov	lr,-189440
80002832:	f8 0a 15 06 	lsl	r10,r12,0x6
80002836:	2f fa       	sub	r10,-1
80002838:	fc 0a 03 37 	ld.w	r7,lr[r10<<0x3]
8000283c:	f0 07 03 06 	ld.w	r6,r8[r7]
80002840:	30 15       	mov	r5,1
80002842:	ed d5 d3 c1 	bfins	r6,r5,0x1e,0x1
80002846:	f0 07 09 06 	st.w	r8[r7],r6
8000284a:	fc 0a 03 37 	ld.w	r7,lr[r10<<0x3]
8000284e:	f0 07 00 07 	add	r7,r8,r7
80002852:	6e 16       	ld.w	r6,r7[0x4]
80002854:	ed d5 d3 c1 	bfins	r6,r5,0x1e,0x1
80002858:	8f 16       	st.w	r7[0x4],r6
8000285a:	f6 0b 00 17 	add	r7,r11,r11<<0x1
8000285e:	a3 67       	lsl	r7,0x2
80002860:	ee 0a 00 37 	add	r7,r7,r10<<0x3
80002864:	e2 27 e3 ac 	sub	r7,189356
80002868:	6e 06       	ld.w	r6,r7[0x0]
8000286a:	a5 b6       	sbr	r6,0x5
8000286c:	8f 06       	st.w	r7[0x0],r6
8000286e:	fc 0a 03 3a 	ld.w	r10,lr[r10<<0x3]
80002872:	14 08       	add	r8,r10
80002874:	f2 e6 00 08 	ld.d	r6,r9[8]
80002878:	f0 e7 00 08 	st.d	r8[8],r6
8000287c:	f8 08 15 09 	lsl	r8,r12,0x9
80002880:	2f 88       	sub	r8,-8
80002882:	f6 0b 00 19 	add	r9,r11,r11<<0x1
80002886:	f0 09 00 28 	add	r8,r8,r9<<0x2
8000288a:	e2 28 e3 ac 	sub	r8,189356
8000288e:	70 09       	ld.w	r9,r8[0x0]
80002890:	a5 c9       	cbr	r9,0x4
80002892:	91 09       	st.w	r8[0x0],r9
80002894:	30 18       	mov	r8,1
80002896:	f0 0b 09 4b 	lsl	r11,r8,r11
8000289a:	f8 08 15 09 	lsl	r8,r12,0x9
8000289e:	e2 28 e3 cc 	sub	r8,189388
800028a2:	91 0b       	st.w	r8[0x0],r11
800028a4:	a9 7c       	lsl	r12,0x9
800028a6:	e2 2c e3 c0 	sub	r12,189376
800028aa:	99 0b       	st.w	r12[0x0],r11
800028ac:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0

800028b0 <can_get_mob_data>:
800028b0:	a7 6c       	lsl	r12,0x6
800028b2:	2f fc       	sub	r12,-1
800028b4:	fc 78 1c 00 	mov	r8,-189440
800028b8:	f0 0c 03 38 	ld.w	r8,r8[r12<<0x3]
800028bc:	a5 6b       	lsl	r11,0x4
800028be:	f6 08 00 08 	add	r8,r11,r8
800028c2:	70 2b       	ld.w	r11,r8[0x8]
800028c4:	70 3a       	ld.w	r10,r8[0xc]
800028c6:	5e fc       	retal	r12

800028c8 <can_get_mob_dlc>:
800028c8:	a9 7c       	lsl	r12,0x9
800028ca:	2f 8c       	sub	r12,-8
800028cc:	f6 0b 00 1b 	add	r11,r11,r11<<0x1
800028d0:	f8 0b 00 2c 	add	r12,r12,r11<<0x2
800028d4:	e2 2c e3 ac 	sub	r12,189356
800028d8:	78 0c       	ld.w	r12,r12[0x0]
800028da:	f9 dc c0 04 	bfextu	r12,r12,0x0,0x4
800028de:	5e fc       	retal	r12

800028e0 <can_get_mob_id>:
800028e0:	a7 6c       	lsl	r12,0x6
800028e2:	2f fc       	sub	r12,-1
800028e4:	fc 78 1c 00 	mov	r8,-189440
800028e8:	f0 0c 03 38 	ld.w	r8,r8[r12<<0x3]
800028ec:	a5 6b       	lsl	r11,0x4
800028ee:	f6 08 03 0c 	ld.w	r12,r11[r8]
800028f2:	f9 dc c0 1d 	bfextu	r12,r12,0x0,0x1d
800028f6:	5e fc       	retal	r12

800028f8 <can_enable_interrupt>:
800028f8:	d4 01       	pushm	lr
800028fa:	30 18       	mov	r8,1
800028fc:	f0 0c 18 00 	cp.b	r12,r8
80002900:	e0 88 00 05 	brls	8000290a <can_enable_interrupt+0x12>
80002904:	e0 6c 00 ff 	mov	r12,255
80002908:	d8 02       	popm	pc
8000290a:	58 0c       	cp.w	r12,0
8000290c:	c2 51       	brne	80002956 <can_enable_interrupt+0x5e>
8000290e:	30 0a       	mov	r10,0
80002910:	e0 6b 01 23 	mov	r11,291
80002914:	4a 6c       	lddpc	r12,800029ac <can_enable_interrupt+0xb4>
80002916:	f0 1f 00 27 	mcall	800029b0 <can_enable_interrupt+0xb8>
8000291a:	30 0a       	mov	r10,0
8000291c:	e0 6b 01 22 	mov	r11,290
80002920:	4a 5c       	lddpc	r12,800029b4 <can_enable_interrupt+0xbc>
80002922:	f0 1f 00 24 	mcall	800029b0 <can_enable_interrupt+0xb8>
80002926:	30 0a       	mov	r10,0
80002928:	e0 6b 01 20 	mov	r11,288
8000292c:	4a 3c       	lddpc	r12,800029b8 <can_enable_interrupt+0xc0>
8000292e:	f0 1f 00 21 	mcall	800029b0 <can_enable_interrupt+0xb8>
80002932:	30 0a       	mov	r10,0
80002934:	e0 6b 01 21 	mov	r11,289
80002938:	4a 1c       	lddpc	r12,800029bc <can_enable_interrupt+0xc4>
8000293a:	f0 1f 00 1e 	mcall	800029b0 <can_enable_interrupt+0xb8>
8000293e:	30 0a       	mov	r10,0
80002940:	e0 6b 01 24 	mov	r11,292
80002944:	49 fc       	lddpc	r12,800029c0 <can_enable_interrupt+0xc8>
80002946:	f0 1f 00 1b 	mcall	800029b0 <can_enable_interrupt+0xb8>
8000294a:	e0 69 01 c9 	mov	r9,457
8000294e:	fc 78 1c 00 	mov	r8,-189440
80002952:	91 79       	st.w	r8[0x1c],r9
80002954:	d8 0a       	popm	pc,r12=0
80002956:	30 18       	mov	r8,1
80002958:	f0 0c 18 00 	cp.b	r12,r8
8000295c:	c0 20       	breq	80002960 <can_enable_interrupt+0x68>
8000295e:	d8 0a       	popm	pc,r12=0
80002960:	30 0a       	mov	r10,0
80002962:	e0 6b 01 28 	mov	r11,296
80002966:	49 8c       	lddpc	r12,800029c4 <can_enable_interrupt+0xcc>
80002968:	f0 1f 00 12 	mcall	800029b0 <can_enable_interrupt+0xb8>
8000296c:	30 0a       	mov	r10,0
8000296e:	e0 6b 01 27 	mov	r11,295
80002972:	49 6c       	lddpc	r12,800029c8 <can_enable_interrupt+0xd0>
80002974:	f0 1f 00 0f 	mcall	800029b0 <can_enable_interrupt+0xb8>
80002978:	30 0a       	mov	r10,0
8000297a:	e0 6b 01 25 	mov	r11,293
8000297e:	49 4c       	lddpc	r12,800029cc <can_enable_interrupt+0xd4>
80002980:	f0 1f 00 0c 	mcall	800029b0 <can_enable_interrupt+0xb8>
80002984:	30 0a       	mov	r10,0
80002986:	e0 6b 01 26 	mov	r11,294
8000298a:	49 2c       	lddpc	r12,800029d0 <can_enable_interrupt+0xd8>
8000298c:	f0 1f 00 09 	mcall	800029b0 <can_enable_interrupt+0xb8>
80002990:	30 0a       	mov	r10,0
80002992:	e0 6b 01 29 	mov	r11,297
80002996:	49 0c       	lddpc	r12,800029d4 <can_enable_interrupt+0xdc>
80002998:	f0 1f 00 06 	mcall	800029b0 <can_enable_interrupt+0xb8>
8000299c:	e0 69 01 c9 	mov	r9,457
800029a0:	fc 78 1c 00 	mov	r8,-189440
800029a4:	f1 49 02 1c 	st.w	r8[540],r9
800029a8:	d8 0a       	popm	pc,r12=0
800029aa:	00 00       	add	r0,r0
800029ac:	80 00       	ld.sh	r0,r0[0x0]
800029ae:	23 7c       	sub	r12,55
800029b0:	80 00       	ld.sh	r0,r0[0x0]
800029b2:	49 9c       	lddpc	r12,80002a14 <can_init+0x3c>
800029b4:	80 00       	ld.sh	r0,r0[0x0]
800029b6:	23 bc       	sub	r12,59
800029b8:	80 00       	ld.sh	r0,r0[0x0]
800029ba:	23 fc       	sub	r12,63
800029bc:	80 00       	ld.sh	r0,r0[0x0]
800029be:	24 1c       	sub	r12,65
800029c0:	80 00       	ld.sh	r0,r0[0x0]
800029c2:	24 3c       	sub	r12,67
800029c4:	80 00       	ld.sh	r0,r0[0x0]
800029c6:	24 5c       	sub	r12,69
800029c8:	80 00       	ld.sh	r0,r0[0x0]
800029ca:	24 a0       	sub	r0,74
800029cc:	80 00       	ld.sh	r0,r0[0x0]
800029ce:	24 e4       	sub	r4,78
800029d0:	80 00       	ld.sh	r0,r0[0x0]
800029d2:	25 08       	sub	r8,80
800029d4:	80 00       	ld.sh	r0,r0[0x0]
800029d6:	25 2c       	sub	r12,82

800029d8 <can_init>:
800029d8:	d4 21       	pushm	r4-r7,lr
800029da:	18 96       	mov	r6,r12
800029dc:	14 95       	mov	r5,r10
800029de:	12 94       	mov	r4,r9
800029e0:	30 18       	mov	r8,1
800029e2:	f0 0c 18 00 	cp.b	r12,r8
800029e6:	e0 8b 00 87 	brhi	80002af4 <can_init+0x11c>
800029ea:	18 97       	mov	r7,r12
800029ec:	f8 08 15 09 	lsl	r8,r12,0x9
800029f0:	e2 28 e3 f0 	sub	r8,189424
800029f4:	30 19       	mov	r9,1
800029f6:	91 09       	st.w	r8[0x0],r9
800029f8:	f8 09 15 09 	lsl	r9,r12,0x9
800029fc:	e2 29 e3 ec 	sub	r9,189420
80002a00:	72 08       	ld.w	r8,r9[0x0]
80002a02:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80002a06:	cf d1       	brne	80002a00 <can_init+0x28>
80002a08:	ee 08 15 09 	lsl	r8,r7,0x9
80002a0c:	e2 28 e3 f0 	sub	r8,189424
80002a10:	30 09       	mov	r9,0
80002a12:	91 09       	st.w	r8[0x0],r9
80002a14:	ee 09 15 06 	lsl	r9,r7,0x6
80002a18:	2f f9       	sub	r9,-1
80002a1a:	fc 78 1c 00 	mov	r8,-189440
80002a1e:	f0 09 09 3b 	st.w	r8[r9<<0x3],r11
80002a22:	0e 9c       	mov	r12,r7
80002a24:	f0 1f 00 3a 	mcall	80002b0c <can_init+0x134>
80002a28:	c6 80       	breq	80002af8 <can_init+0x120>
80002a2a:	30 18       	mov	r8,1
80002a2c:	f0 05 18 00 	cp.b	r5,r8
80002a30:	c1 50       	breq	80002a5a <can_init+0x82>
80002a32:	c0 63       	brcs	80002a3e <can_init+0x66>
80002a34:	30 28       	mov	r8,2
80002a36:	f0 05 18 00 	cp.b	r5,r8
80002a3a:	c2 d1       	brne	80002a94 <can_init+0xbc>
80002a3c:	c1 e8       	rjmp	80002a78 <can_init+0xa0>
80002a3e:	ee 08 15 09 	lsl	r8,r7,0x9
80002a42:	e2 28 e3 f4 	sub	r8,189428
80002a46:	70 09       	ld.w	r9,r8[0x0]
80002a48:	e4 19 fc ff 	andh	r9,0xfcff
80002a4c:	91 09       	st.w	r8[0x0],r9
80002a4e:	70 09       	ld.w	r9,r8[0x0]
80002a50:	91 09       	st.w	r8[0x0],r9
80002a52:	70 09       	ld.w	r9,r8[0x0]
80002a54:	bb c9       	cbr	r9,0x1a
80002a56:	91 09       	st.w	r8[0x0],r9
80002a58:	c1 e8       	rjmp	80002a94 <can_init+0xbc>
80002a5a:	ee 08 15 09 	lsl	r8,r7,0x9
80002a5e:	e2 28 e3 f4 	sub	r8,189428
80002a62:	70 09       	ld.w	r9,r8[0x0]
80002a64:	e4 19 fc ff 	andh	r9,0xfcff
80002a68:	91 09       	st.w	r8[0x0],r9
80002a6a:	70 09       	ld.w	r9,r8[0x0]
80002a6c:	b9 a9       	sbr	r9,0x18
80002a6e:	91 09       	st.w	r8[0x0],r9
80002a70:	70 09       	ld.w	r9,r8[0x0]
80002a72:	bb a9       	sbr	r9,0x1a
80002a74:	91 09       	st.w	r8[0x0],r9
80002a76:	c0 f8       	rjmp	80002a94 <can_init+0xbc>
80002a78:	ee 08 15 09 	lsl	r8,r7,0x9
80002a7c:	e2 28 e3 f4 	sub	r8,189428
80002a80:	70 09       	ld.w	r9,r8[0x0]
80002a82:	e4 19 fc ff 	andh	r9,0xfcff
80002a86:	91 09       	st.w	r8[0x0],r9
80002a88:	70 09       	ld.w	r9,r8[0x0]
80002a8a:	b9 b9       	sbr	r9,0x19
80002a8c:	91 09       	st.w	r8[0x0],r9
80002a8e:	70 09       	ld.w	r9,r8[0x0]
80002a90:	bb c9       	cbr	r9,0x1a
80002a92:	91 09       	st.w	r8[0x0],r9
80002a94:	31 0b       	mov	r11,16
80002a96:	0e 9c       	mov	r12,r7
80002a98:	f0 1f 00 1e 	mcall	80002b10 <can_init+0x138>
80002a9c:	ee 08 15 09 	lsl	r8,r7,0x9
80002aa0:	e2 28 e3 f0 	sub	r8,189424
80002aa4:	70 09       	ld.w	r9,r8[0x0]
80002aa6:	a1 b9       	sbr	r9,0x1
80002aa8:	91 09       	st.w	r8[0x0],r9
80002aaa:	e1 b8 00 42 	mfsr	r8,0x108
80002aae:	f0 ca f7 30 	sub	r10,r8,-2256
80002ab2:	e1 b9 00 42 	mfsr	r9,0x108
80002ab6:	14 38       	cp.w	r8,r10
80002ab8:	e0 88 00 08 	brls	80002ac8 <can_init+0xf0>
80002abc:	12 38       	cp.w	r8,r9
80002abe:	fe 98 ff fa 	brls	80002ab2 <can_init+0xda>
80002ac2:	12 3a       	cp.w	r10,r9
80002ac4:	c1 b3       	brcs	80002afa <can_init+0x122>
80002ac6:	cf 6b       	rjmp	80002ab2 <can_init+0xda>
80002ac8:	12 38       	cp.w	r8,r9
80002aca:	e0 8b 00 18 	brhi	80002afa <can_init+0x122>
80002ace:	12 3a       	cp.w	r10,r9
80002ad0:	c1 53       	brcs	80002afa <can_init+0x122>
80002ad2:	cf 0b       	rjmp	80002ab2 <can_init+0xda>
80002ad4:	58 06       	cp.w	r6,0
80002ad6:	c0 60       	breq	80002ae2 <can_init+0x10a>
80002ad8:	30 18       	mov	r8,1
80002ada:	f0 06 18 00 	cp.b	r6,r8
80002ade:	c0 71       	brne	80002aec <can_init+0x114>
80002ae0:	c0 48       	rjmp	80002ae8 <can_init+0x110>
80002ae2:	48 d8       	lddpc	r8,80002b14 <can_init+0x13c>
80002ae4:	91 04       	st.w	r8[0x0],r4
80002ae6:	c0 38       	rjmp	80002aec <can_init+0x114>
80002ae8:	48 b8       	lddpc	r8,80002b14 <can_init+0x13c>
80002aea:	91 14       	st.w	r8[0x4],r4
80002aec:	0e 9c       	mov	r12,r7
80002aee:	f0 1f 00 0b 	mcall	80002b18 <can_init+0x140>
80002af2:	d8 2a       	popm	r4-r7,pc,r12=0
80002af4:	e0 6c 00 ff 	mov	r12,255
80002af8:	d8 22       	popm	r4-r7,pc
80002afa:	ee 08 15 09 	lsl	r8,r7,0x9
80002afe:	e2 28 e3 ec 	sub	r8,189420
80002b02:	70 08       	ld.w	r8,r8[0x0]
80002b04:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80002b08:	ce 61       	brne	80002ad4 <can_init+0xfc>
80002b0a:	cf 5b       	rjmp	80002af4 <can_init+0x11c>
80002b0c:	80 00       	ld.sh	r0,r0[0x0]
80002b0e:	21 28       	sub	r8,18
80002b10:	80 00       	ld.sh	r0,r0[0x0]
80002b12:	20 e0       	sub	r0,14
80002b14:	00 00       	add	r0,r0
80002b16:	09 e0       	ld.ub	r0,r4[0x6]
80002b18:	80 00       	ld.sh	r0,r0[0x0]
80002b1a:	28 f8       	sub	r8,-113

80002b1c <print_char>:
80002b1c:	d4 01       	pushm	lr
80002b1e:	f0 1f 00 02 	mcall	80002b24 <print_char+0x8>
80002b22:	d8 02       	popm	pc
80002b24:	80 00       	ld.sh	r0,r0[0x0]
80002b26:	4f b0       	lddpc	r0,80002d10 <ble_aci_read_packet+0x50>

80002b28 <print_dbg_char>:
80002b28:	d4 01       	pushm	lr
80002b2a:	18 9b       	mov	r11,r12
80002b2c:	fe 7c 2c 00 	mov	r12,-54272
80002b30:	f0 1f 00 02 	mcall	80002b38 <print_dbg_char+0x10>
80002b34:	d8 02       	popm	pc
80002b36:	00 00       	add	r0,r0
80002b38:	80 00       	ld.sh	r0,r0[0x0]
80002b3a:	2b 1c       	sub	r12,-79

80002b3c <print>:
80002b3c:	d4 01       	pushm	lr
80002b3e:	f0 1f 00 02 	mcall	80002b44 <print+0x8>
80002b42:	d8 02       	popm	pc
80002b44:	80 00       	ld.sh	r0,r0[0x0]
80002b46:	4f dc       	lddpc	r12,80002d38 <ble_aci_read_packet+0x78>

80002b48 <print_short_hex>:
80002b48:	d4 01       	pushm	lr
80002b4a:	20 2d       	sub	sp,8
80002b4c:	30 08       	mov	r8,0
80002b4e:	ba c8       	st.b	sp[0x4],r8
80002b50:	48 f8       	lddpc	r8,80002b8c <print_short_hex+0x44>
80002b52:	f3 db c0 10 	bfextu	r9,r11,0x0,0x10
80002b56:	f5 d9 c0 04 	bfextu	r10,r9,0x0,0x4
80002b5a:	f0 0a 07 0a 	ld.ub	r10,r8[r10]
80002b5e:	ba ba       	st.b	sp[0x3],r10
80002b60:	a5 89       	lsr	r9,0x4
80002b62:	f5 d9 c0 04 	bfextu	r10,r9,0x0,0x4
80002b66:	f0 0a 07 0a 	ld.ub	r10,r8[r10]
80002b6a:	ba aa       	st.b	sp[0x2],r10
80002b6c:	a5 89       	lsr	r9,0x4
80002b6e:	f5 d9 c0 04 	bfextu	r10,r9,0x0,0x4
80002b72:	f0 0a 07 0a 	ld.ub	r10,r8[r10]
80002b76:	ba 9a       	st.b	sp[0x1],r10
80002b78:	a5 89       	lsr	r9,0x4
80002b7a:	f0 09 07 08 	ld.ub	r8,r8[r9]
80002b7e:	ba 88       	st.b	sp[0x0],r8
80002b80:	1a 9b       	mov	r11,sp
80002b82:	f0 1f 00 04 	mcall	80002b90 <print_short_hex+0x48>
80002b86:	2f ed       	sub	sp,-8
80002b88:	d8 02       	popm	pc
80002b8a:	00 00       	add	r0,r0
80002b8c:	80 00       	ld.sh	r0,r0[0x0]
80002b8e:	a2 18       	st.h	r1[0x2],r8
80002b90:	80 00       	ld.sh	r0,r0[0x0]
80002b92:	2b 3c       	sub	r12,-77

80002b94 <print_dbg_short_hex>:
80002b94:	d4 01       	pushm	lr
80002b96:	f7 dc c0 10 	bfextu	r11,r12,0x0,0x10
80002b9a:	fe 7c 2c 00 	mov	r12,-54272
80002b9e:	f0 1f 00 02 	mcall	80002ba4 <print_dbg_short_hex+0x10>
80002ba2:	d8 02       	popm	pc
80002ba4:	80 00       	ld.sh	r0,r0[0x0]
80002ba6:	2b 48       	sub	r8,-76

80002ba8 <print_char_hex>:
80002ba8:	d4 01       	pushm	lr
80002baa:	20 1d       	sub	sp,4
80002bac:	30 08       	mov	r8,0
80002bae:	ba a8       	st.b	sp[0x2],r8
80002bb0:	48 88       	lddpc	r8,80002bd0 <print_char_hex+0x28>
80002bb2:	f3 db c0 04 	bfextu	r9,r11,0x0,0x4
80002bb6:	f0 09 07 09 	ld.ub	r9,r8[r9]
80002bba:	ba 99       	st.b	sp[0x1],r9
80002bbc:	f7 db c0 84 	bfextu	r11,r11,0x4,0x4
80002bc0:	f0 0b 07 08 	ld.ub	r8,r8[r11]
80002bc4:	ba 88       	st.b	sp[0x0],r8
80002bc6:	1a 9b       	mov	r11,sp
80002bc8:	f0 1f 00 03 	mcall	80002bd4 <print_char_hex+0x2c>
80002bcc:	2f fd       	sub	sp,-4
80002bce:	d8 02       	popm	pc
80002bd0:	80 00       	ld.sh	r0,r0[0x0]
80002bd2:	a2 18       	st.h	r1[0x2],r8
80002bd4:	80 00       	ld.sh	r0,r0[0x0]
80002bd6:	2b 3c       	sub	r12,-77

80002bd8 <print_dbg_char_hex>:
80002bd8:	d4 01       	pushm	lr
80002bda:	18 9b       	mov	r11,r12
80002bdc:	fe 7c 2c 00 	mov	r12,-54272
80002be0:	f0 1f 00 02 	mcall	80002be8 <print_dbg_char_hex+0x10>
80002be4:	d8 02       	popm	pc
80002be6:	00 00       	add	r0,r0
80002be8:	80 00       	ld.sh	r0,r0[0x0]
80002bea:	2b a8       	sub	r8,-70

80002bec <print_dbg>:
80002bec:	d4 01       	pushm	lr
80002bee:	18 9b       	mov	r11,r12
80002bf0:	fe 7c 2c 00 	mov	r12,-54272
80002bf4:	f0 1f 00 02 	mcall	80002bfc <print_dbg+0x10>
80002bf8:	d8 02       	popm	pc
80002bfa:	00 00       	add	r0,r0
80002bfc:	80 00       	ld.sh	r0,r0[0x0]
80002bfe:	2b 3c       	sub	r12,-77

80002c00 <init_dbg_rs232_ex>:
80002c00:	eb cd 40 80 	pushm	r7,lr
80002c04:	20 3d       	sub	sp,12
80002c06:	16 97       	mov	r7,r11
80002c08:	50 0c       	stdsp	sp[0x0],r12
80002c0a:	30 88       	mov	r8,8
80002c0c:	ba c8       	st.b	sp[0x4],r8
80002c0e:	30 48       	mov	r8,4
80002c10:	ba d8       	st.b	sp[0x5],r8
80002c12:	30 08       	mov	r8,0
80002c14:	ba 38       	st.h	sp[0x6],r8
80002c16:	fb 68 00 08 	st.b	sp[8],r8
80002c1a:	30 2b       	mov	r11,2
80002c1c:	48 6c       	lddpc	r12,80002c34 <init_dbg_rs232_ex+0x34>
80002c1e:	f0 1f 00 07 	mcall	80002c38 <init_dbg_rs232_ex+0x38>
80002c22:	0e 9a       	mov	r10,r7
80002c24:	1a 9b       	mov	r11,sp
80002c26:	fe 7c 2c 00 	mov	r12,-54272
80002c2a:	f0 1f 00 05 	mcall	80002c3c <init_dbg_rs232_ex+0x3c>
80002c2e:	2f dd       	sub	sp,-12
80002c30:	e3 cd 80 80 	ldm	sp++,r7,pc
80002c34:	80 00       	ld.sh	r0,r0[0x0]
80002c36:	a2 28       	st.h	r1[0x4],r8
80002c38:	80 00       	ld.sh	r0,r0[0x0]
80002c3a:	47 d0       	lddsp	r0,sp[0x1f4]
80002c3c:	80 00       	ld.sh	r0,r0[0x0]
80002c3e:	50 2c       	stdsp	sp[0x8],r12

80002c40 <init_dbg_rs232>:
80002c40:	d4 01       	pushm	lr
80002c42:	18 9b       	mov	r11,r12
80002c44:	e0 6c e1 00 	mov	r12,57600
80002c48:	f0 1f 00 02 	mcall	80002c50 <init_dbg_rs232+0x10>
80002c4c:	d8 02       	popm	pc
80002c4e:	00 00       	add	r0,r0
80002c50:	80 00       	ld.sh	r0,r0[0x0]
80002c52:	2c 00       	sub	r0,-64

80002c54 <ble_aci_write_packet>:
	
	cpu_irq_restore(irqflags);
}

void ble_aci_write_packet()
{
80002c54:	eb cd 40 e0 	pushm	r5-r7,lr

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags;

	flags = sysreg_read(AVR32_SR);
80002c58:	e1 b5 00 00 	mfsr	r5,0x0
	cpu_irq_disable();
80002c5c:	d3 03       	ssrf	0x10
	
	/*while( ble_spi_has_data() ) {
		ble_aci_receive_packet();
	}*/
	
	ble_spi_selectChip();
80002c5e:	f0 1f 00 14 	mcall	80002cac <ble_aci_write_packet+0x58>
	
	while(!ble_spi_has_data());
80002c62:	f0 1f 00 14 	mcall	80002cb0 <ble_aci_write_packet+0x5c>
80002c66:	cf e0       	breq	80002c62 <ble_aci_write_packet+0xe>
		
	ble_spi_write(ble_aci_packet_tx.len);
80002c68:	49 37       	lddpc	r7,80002cb4 <ble_aci_write_packet+0x60>
80002c6a:	0f 8c       	ld.ub	r12,r7[0x0]
80002c6c:	f0 1f 00 13 	mcall	80002cb8 <ble_aci_write_packet+0x64>
	ble_spi_write((uint8_t) ble_aci_packet_tx.type);
80002c70:	0f cc       	ld.ub	r12,r7[0x4]
80002c72:	f0 1f 00 12 	mcall	80002cb8 <ble_aci_write_packet+0x64>
	for(uint8_t i = 0; i < ble_aci_packet_tx.len; i++) {
80002c76:	0f 89       	ld.ub	r9,r7[0x0]
80002c78:	30 08       	mov	r8,0
80002c7a:	f0 09 18 00 	cp.b	r9,r8
80002c7e:	c0 f0       	breq	80002c9c <ble_aci_write_packet+0x48>
80002c80:	30 07       	mov	r7,0
		ble_spi_write(ble_aci_packet_tx.content.raw[i]);
80002c82:	48 d6       	lddpc	r6,80002cb4 <ble_aci_write_packet+0x60>
80002c84:	ec 07 00 08 	add	r8,r6,r7
80002c88:	11 dc       	ld.ub	r12,r8[0x5]
80002c8a:	f0 1f 00 0c 	mcall	80002cb8 <ble_aci_write_packet+0x64>
	
	while(!ble_spi_has_data());
		
	ble_spi_write(ble_aci_packet_tx.len);
	ble_spi_write((uint8_t) ble_aci_packet_tx.type);
	for(uint8_t i = 0; i < ble_aci_packet_tx.len; i++) {
80002c8e:	2f f7       	sub	r7,-1
80002c90:	5c 57       	castu.b	r7
80002c92:	0d 88       	ld.ub	r8,r6[0x0]
80002c94:	ee 08 18 00 	cp.b	r8,r7
80002c98:	fe 9b ff f6 	brhi	80002c84 <ble_aci_write_packet+0x30>
		ble_spi_write(ble_aci_packet_tx.content.raw[i]);
	}
	
	ble_spi_unselectChip();
80002c9c:	f0 1f 00 08 	mcall	80002cbc <ble_aci_write_packet+0x68>
static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();

   /* Restore the global IRQ mask status flag if it was previously set */
   if ( cpu_irq_is_enabled_flags(flags) ) {
80002ca0:	e6 15 00 01 	andh	r5,0x1,COH
80002ca4:	c0 21       	brne	80002ca8 <ble_aci_write_packet+0x54>
      cpu_irq_enable();
80002ca6:	d5 03       	csrf	0x10
	
	cpu_irq_restore(irqflags);
}
80002ca8:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80002cac:	80 00       	ld.sh	r0,r0[0x0]
80002cae:	30 54       	mov	r4,5
80002cb0:	80 00       	ld.sh	r0,r0[0x0]
80002cb2:	30 24       	mov	r4,2
80002cb4:	00 00       	add	r0,r0
80002cb6:	0d 74       	ld.ub	r4,--r6
80002cb8:	80 00       	ld.sh	r0,r0[0x0]
80002cba:	2f cc       	sub	r12,-4
80002cbc:	80 00       	ld.sh	r0,r0[0x0]
80002cbe:	30 38       	mov	r8,3

80002cc0 <ble_aci_read_packet>:
#include "ble_aci.h"
#include "ble_aci_setup.h"
#include "hmi.h"

void ble_aci_read_packet()
{	
80002cc0:	eb cd 40 e0 	pushm	r5-r7,lr
	while(!ble_spi_has_data());
80002cc4:	f0 1f 00 1b 	mcall	80002d30 <ble_aci_read_packet+0x70>
80002cc8:	cf e0       	breq	80002cc4 <ble_aci_read_packet+0x4>

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags;

	flags = sysreg_read(AVR32_SR);
80002cca:	e1 b5 00 00 	mfsr	r5,0x0
	cpu_irq_disable();
80002cce:	d3 03       	ssrf	0x10
					
	irqflags_t irqflags = cpu_irq_save();
	
	ble_spi_selectChip();
80002cd0:	f0 1f 00 19 	mcall	80002d34 <ble_aci_read_packet+0x74>
	ble_spi_read(); //read debug byte (discard)
80002cd4:	f0 1f 00 19 	mcall	80002d38 <ble_aci_read_packet+0x78>
	ble_aci_packet_rx.len = ble_spi_read(); //read length byte
80002cd8:	f0 1f 00 18 	mcall	80002d38 <ble_aci_read_packet+0x78>
80002cdc:	49 87       	lddpc	r7,80002d3c <ble_aci_read_packet+0x7c>
80002cde:	ae 8c       	st.b	r7[0x0],r12
	ble_aci_packet_rx.type = ble_spi_read(); //read type byte
80002ce0:	f0 1f 00 16 	mcall	80002d38 <ble_aci_read_packet+0x78>
80002ce4:	f8 08 16 18 	lsr	r8,r12,0x18
80002ce8:	ae 98       	st.b	r7[0x1],r8
80002cea:	f8 08 16 10 	lsr	r8,r12,0x10
80002cee:	ae a8       	st.b	r7[0x2],r8
80002cf0:	f8 08 16 08 	lsr	r8,r12,0x8
80002cf4:	ae b8       	st.b	r7[0x3],r8
80002cf6:	ae cc       	st.b	r7[0x4],r12
	for(uint8_t i = 0; i < ble_aci_packet_rx.len; i++) {
80002cf8:	0f 89       	ld.ub	r9,r7[0x0]
80002cfa:	30 08       	mov	r8,0
80002cfc:	f0 09 18 00 	cp.b	r9,r8
80002d00:	c0 f0       	breq	80002d1e <ble_aci_read_packet+0x5e>
80002d02:	30 07       	mov	r7,0
		ble_aci_packet_rx.content.raw[i] = ble_spi_read();
80002d04:	48 e6       	lddpc	r6,80002d3c <ble_aci_read_packet+0x7c>
80002d06:	f0 1f 00 0d 	mcall	80002d38 <ble_aci_read_packet+0x78>
80002d0a:	ec 07 00 08 	add	r8,r6,r7
80002d0e:	b0 dc       	st.b	r8[0x5],r12
	
	ble_spi_selectChip();
	ble_spi_read(); //read debug byte (discard)
	ble_aci_packet_rx.len = ble_spi_read(); //read length byte
	ble_aci_packet_rx.type = ble_spi_read(); //read type byte
	for(uint8_t i = 0; i < ble_aci_packet_rx.len; i++) {
80002d10:	2f f7       	sub	r7,-1
80002d12:	5c 57       	castu.b	r7
80002d14:	0d 88       	ld.ub	r8,r6[0x0]
80002d16:	ee 08 18 00 	cp.b	r8,r7
80002d1a:	fe 9b ff f6 	brhi	80002d06 <ble_aci_read_packet+0x46>
		ble_aci_packet_rx.content.raw[i] = ble_spi_read();
	}
	ble_spi_unselectChip();
80002d1e:	f0 1f 00 09 	mcall	80002d40 <ble_aci_read_packet+0x80>
static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();

   /* Restore the global IRQ mask status flag if it was previously set */
   if ( cpu_irq_is_enabled_flags(flags) ) {
80002d22:	e6 15 00 01 	andh	r5,0x1,COH
80002d26:	c0 21       	brne	80002d2a <ble_aci_read_packet+0x6a>
      cpu_irq_enable();
80002d28:	d5 03       	csrf	0x10
	
	cpu_irq_restore(irqflags);
}
80002d2a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80002d2e:	00 00       	add	r0,r0
80002d30:	80 00       	ld.sh	r0,r0[0x0]
80002d32:	30 24       	mov	r4,2
80002d34:	80 00       	ld.sh	r0,r0[0x0]
80002d36:	30 54       	mov	r4,5
80002d38:	80 00       	ld.sh	r0,r0[0x0]
80002d3a:	2f f4       	sub	r4,-1
80002d3c:	00 00       	add	r0,r0
80002d3e:	0e 1a       	sub	r10,r7
80002d40:	80 00       	ld.sh	r0,r0[0x0]
80002d42:	30 38       	mov	r8,3

80002d44 <ble_aci_set_local_data>:

/*
 * set characteristics
 */
void ble_aci_set_local_data(uint8_t pipe, uint8_t* buffer, uint8_t len)
{
80002d44:	d4 01       	pushm	lr
	ble_aci_packet_tx.len = len + 2;
80002d46:	48 b8       	lddpc	r8,80002d70 <ble_aci_set_local_data+0x2c>
80002d48:	f4 c9 ff fe 	sub	r9,r10,-2
80002d4c:	b0 89       	st.b	r8[0x0],r9
	ble_aci_packet_tx.type = ACI_COMMAND_SET_LOCAL_DATA;
80002d4e:	30 09       	mov	r9,0
80002d50:	b0 99       	st.b	r8[0x1],r9
80002d52:	b0 a9       	st.b	r8[0x2],r9
80002d54:	b0 b9       	st.b	r8[0x3],r9
80002d56:	30 d9       	mov	r9,13
80002d58:	b0 c9       	st.b	r8[0x4],r9
	ble_aci_packet_tx.content.SetLocalDataCommand.ServicePipeNumber = pipe;
80002d5a:	b0 dc       	st.b	r8[0x5],r12
	memcpy(ble_aci_packet_tx.content.SetLocalDataCommand.Data, buffer, len);
80002d5c:	f0 cc ff fa 	sub	r12,r8,-6
80002d60:	f0 1f 00 05 	mcall	80002d74 <ble_aci_set_local_data+0x30>
	ble_aci_write_packet();
80002d64:	f0 1f 00 05 	mcall	80002d78 <ble_aci_set_local_data+0x34>
	ble_aci_read_packet();
80002d68:	f0 1f 00 05 	mcall	80002d7c <ble_aci_set_local_data+0x38>
}
80002d6c:	d8 02       	popm	pc
80002d6e:	00 00       	add	r0,r0
80002d70:	00 00       	add	r0,r0
80002d72:	0d 74       	ld.ub	r4,--r6
80002d74:	80 00       	ld.sh	r0,r0[0x0]
80002d76:	7d 3c       	ld.w	r12,lr[0x4c]
80002d78:	80 00       	ld.sh	r0,r0[0x0]
80002d7a:	2c 54       	sub	r4,-59
80002d7c:	80 00       	ld.sh	r0,r0[0x0]
80002d7e:	2c c0       	sub	r0,-52

80002d80 <ble_aci_connect>:
	}
	ble_aci_read_packet(); //DeviceStartedEvent
}

void ble_aci_connect()
{
80002d80:	d4 01       	pushm	lr
	ble_aci_packet_tx.len = 5;
80002d82:	48 c8       	lddpc	r8,80002db0 <ble_aci_connect+0x30>
80002d84:	30 59       	mov	r9,5
80002d86:	b0 89       	st.b	r8[0x0],r9
	ble_aci_packet_tx.type = ACI_COMMAND_CONNECT;
80002d88:	30 09       	mov	r9,0
80002d8a:	b0 99       	st.b	r8[0x1],r9
80002d8c:	b0 a9       	st.b	r8[0x2],r9
80002d8e:	b0 b9       	st.b	r8[0x3],r9
80002d90:	30 fa       	mov	r10,15
80002d92:	b0 ca       	st.b	r8[0x4],r10
	ble_aci_packet_tx.content.ConnectCommand.Timeout = 0x0000;
80002d94:	b0 d9       	st.b	r8[0x5],r9
80002d96:	b0 e9       	st.b	r8[0x6],r9
	ble_aci_packet_tx.content.ConnectCommand.AdvInternal = 0x0020;
80002d98:	b0 f9       	st.b	r8[0x7],r9
80002d9a:	32 09       	mov	r9,32
80002d9c:	f1 69 00 08 	st.b	r8[8],r9
	
	ble_aci_write_packet();
80002da0:	f0 1f 00 05 	mcall	80002db4 <ble_aci_connect+0x34>
	ble_aci_read_packet(); //CommandResponseEvent (discard)
80002da4:	f0 1f 00 05 	mcall	80002db8 <ble_aci_connect+0x38>
	
	ble_aci_read_packet(); //ConnectedEvent (blocks until connection try)
80002da8:	f0 1f 00 04 	mcall	80002db8 <ble_aci_connect+0x38>
}
80002dac:	d8 02       	popm	pc
80002dae:	00 00       	add	r0,r0
80002db0:	00 00       	add	r0,r0
80002db2:	0d 74       	ld.ub	r4,--r6
80002db4:	80 00       	ld.sh	r0,r0[0x0]
80002db6:	2c 54       	sub	r4,-59
80002db8:	80 00       	ld.sh	r0,r0[0x0]
80002dba:	2c c0       	sub	r0,-52

80002dbc <ble_aci_setup>:
	}
	return ACI_TEST_ENTER_ERROR;
}

void ble_aci_setup()
{	
80002dbc:	d4 31       	pushm	r0-r7,lr
80002dbe:	49 74       	lddpc	r4,80002e18 <ble_aci_setup+0x5c>
80002dc0:	2f f4       	sub	r4,-1
80002dc2:	30 06       	mov	r6,0
	for(uint8_t i = 0; i < NB_SETUP_MESSAGES; i++) {
		
		ble_aci_packet_tx.len = setup_message[i].buffer[0];
80002dc4:	49 67       	lddpc	r7,80002e1c <ble_aci_setup+0x60>
		ble_aci_packet_tx.type = ACI_COMMAND_SETUP;
80002dc6:	30 05       	mov	r5,0
80002dc8:	30 63       	mov	r3,6
		for(uint8_t j = 0; j < ble_aci_packet_tx.len; j++) {
80002dca:	49 42       	lddpc	r2,80002e18 <ble_aci_setup+0x5c>
80002dcc:	ee c1 ff fb 	sub	r1,r7,-5
		}
	}
	return ACI_TEST_ENTER_ERROR;
}

void ble_aci_setup()
80002dd0:	ee 03 00 00 	add	r0,r7,r3
{	
	for(uint8_t i = 0; i < NB_SETUP_MESSAGES; i++) {
		
		ble_aci_packet_tx.len = setup_message[i].buffer[0];
80002dd4:	09 8b       	ld.ub	r11,r4[0x0]
80002dd6:	ae 8b       	st.b	r7[0x0],r11
		ble_aci_packet_tx.type = ACI_COMMAND_SETUP;
80002dd8:	ae 95       	st.b	r7[0x1],r5
80002dda:	ae a5       	st.b	r7[0x2],r5
80002ddc:	ae b5       	st.b	r7[0x3],r5
80002dde:	ae c3       	st.b	r7[0x4],r3
		for(uint8_t j = 0; j < ble_aci_packet_tx.len; j++) {
80002de0:	58 0b       	cp.w	r11,0
80002de2:	c0 f0       	breq	80002e00 <ble_aci_setup+0x44>
80002de4:	ec 09 15 05 	lsl	r9,r6,0x5
80002de8:	0c 09       	add	r9,r6
80002dea:	e4 09 00 09 	add	r9,r2,r9
80002dee:	2f d9       	sub	r9,-3
80002df0:	02 98       	mov	r8,r1
		}
	}
	return ACI_TEST_ENTER_ERROR;
}

void ble_aci_setup()
80002df2:	20 1b       	sub	r11,1
80002df4:	5c 5b       	castu.b	r11
80002df6:	00 0b       	add	r11,r0
	for(uint8_t i = 0; i < NB_SETUP_MESSAGES; i++) {
		
		ble_aci_packet_tx.len = setup_message[i].buffer[0];
		ble_aci_packet_tx.type = ACI_COMMAND_SETUP;
		for(uint8_t j = 0; j < ble_aci_packet_tx.len; j++) {
			ble_aci_packet_tx.content.SetupCommand.data[j] = setup_message[i].buffer[j+2];
80002df8:	13 3a       	ld.ub	r10,r9++
80002dfa:	10 ca       	st.b	r8++,r10
{	
	for(uint8_t i = 0; i < NB_SETUP_MESSAGES; i++) {
		
		ble_aci_packet_tx.len = setup_message[i].buffer[0];
		ble_aci_packet_tx.type = ACI_COMMAND_SETUP;
		for(uint8_t j = 0; j < ble_aci_packet_tx.len; j++) {
80002dfc:	16 38       	cp.w	r8,r11
80002dfe:	cf d1       	brne	80002df8 <ble_aci_setup+0x3c>
			ble_aci_packet_tx.content.SetupCommand.data[j] = setup_message[i].buffer[j+2];
		}
		
		ble_aci_write_packet();
80002e00:	f0 1f 00 08 	mcall	80002e20 <ble_aci_setup+0x64>
		ble_aci_read_packet(); //CommandResponseEvent
80002e04:	f0 1f 00 08 	mcall	80002e24 <ble_aci_setup+0x68>
80002e08:	2f f6       	sub	r6,-1
80002e0a:	2d f4       	sub	r4,-33
	return ACI_TEST_ENTER_ERROR;
}

void ble_aci_setup()
{	
	for(uint8_t i = 0; i < NB_SETUP_MESSAGES; i++) {
80002e0c:	e0 46 00 21 	cp.w	r6,33
80002e10:	ce 21       	brne	80002dd4 <ble_aci_setup+0x18>
		}
		
		ble_aci_write_packet();
		ble_aci_read_packet(); //CommandResponseEvent
	}
	ble_aci_read_packet(); //DeviceStartedEvent
80002e12:	f0 1f 00 05 	mcall	80002e24 <ble_aci_setup+0x68>
}
80002e16:	d8 32       	popm	r0-r7,pc
80002e18:	00 00       	add	r0,r0
80002e1a:	00 1c       	sub	r12,r0
80002e1c:	00 00       	add	r0,r0
80002e1e:	0d 74       	ld.ub	r4,--r6
80002e20:	80 00       	ld.sh	r0,r0[0x0]
80002e22:	2c 54       	sub	r4,-59
80002e24:	80 00       	ld.sh	r0,r0[0x0]
80002e26:	2c c0       	sub	r0,-52

80002e28 <ble_aci_test_device>:
	}
	return ACI_INIT_DEVICE_START_ERROR;
}

ble_aci_test_result ble_aci_test_device()
{
80002e28:	d4 01       	pushm	lr
	//enter test mode
	ble_aci_packet_tx.type = ACI_COMMAND_TEST;
80002e2a:	4c 08       	lddpc	r8,80002f28 <ble_aci_test_device+0x100>
80002e2c:	30 09       	mov	r9,0
80002e2e:	b0 99       	st.b	r8[0x1],r9
80002e30:	b0 a9       	st.b	r8[0x2],r9
80002e32:	b0 b9       	st.b	r8[0x3],r9
80002e34:	30 19       	mov	r9,1
80002e36:	b0 c9       	st.b	r8[0x4],r9
	ble_aci_packet_tx.len = 2;
80002e38:	30 29       	mov	r9,2
80002e3a:	b0 89       	st.b	r8[0x0],r9
	ble_aci_packet_tx.content.TestCommand.TestFeature = 0x02;
80002e3c:	b0 d9       	st.b	r8[0x5],r9
	ble_aci_write_packet();
80002e3e:	f0 1f 00 3c 	mcall	80002f2c <ble_aci_test_device+0x104>

	ble_aci_read_packet();
80002e42:	f0 1f 00 3c 	mcall	80002f30 <ble_aci_test_device+0x108>
		
	if(ble_aci_packet_rx.type == ACI_DEVICE_STARTED_EVENT) {
80002e46:	4b c8       	lddpc	r8,80002f34 <ble_aci_test_device+0x10c>
80002e48:	11 9a       	ld.ub	r10,r8[0x1]
80002e4a:	11 a9       	ld.ub	r9,r8[0x2]
80002e4c:	b1 69       	lsl	r9,0x10
80002e4e:	f3 ea 11 89 	or	r9,r9,r10<<0x18
80002e52:	11 ba       	ld.ub	r10,r8[0x3]
80002e54:	f3 ea 10 89 	or	r9,r9,r10<<0x8
80002e58:	11 c8       	ld.ub	r8,r8[0x4]
80002e5a:	12 48       	or	r8,r9
80002e5c:	e0 48 00 81 	cp.w	r8,129
80002e60:	c6 21       	brne	80002f24 <ble_aci_test_device+0xfc>
		
		if(ble_aci_packet_rx.content.DeviceStartedEvent.OperatingMode == ACI_OPERATING_MODE_TEST) {
80002e62:	4b 58       	lddpc	r8,80002f34 <ble_aci_test_device+0x10c>
80002e64:	11 d9       	ld.ub	r9,r8[0x5]
80002e66:	30 18       	mov	r8,1
80002e68:	f0 09 18 00 	cp.b	r9,r8
80002e6c:	c5 c1       	brne	80002f24 <ble_aci_test_device+0xfc>

			if(ble_aci_packet_rx.content.DeviceStartedEvent.HWError == 0x00) {
80002e6e:	4b 28       	lddpc	r8,80002f34 <ble_aci_test_device+0x10c>
80002e70:	11 e9       	ld.ub	r9,r8[0x6]
80002e72:	30 08       	mov	r8,0
80002e74:	f0 09 18 00 	cp.b	r9,r8
80002e78:	c0 30       	breq	80002e7e <ble_aci_test_device+0x56>
80002e7a:	30 3c       	mov	r12,3
80002e7c:	d8 02       	popm	pc
				//device ok, try echo...
			
				uint8_t test_byte_1 = 0x44;
				uint8_t test_byte_2 = 0x50;

				ble_aci_packet_tx.type = ACI_COMMAND_ECHO;
80002e7e:	4a b8       	lddpc	r8,80002f28 <ble_aci_test_device+0x100>
80002e80:	30 09       	mov	r9,0
80002e82:	b0 99       	st.b	r8[0x1],r9
80002e84:	b0 a9       	st.b	r8[0x2],r9
80002e86:	b0 b9       	st.b	r8[0x3],r9
80002e88:	30 29       	mov	r9,2
80002e8a:	b0 c9       	st.b	r8[0x4],r9
				ble_aci_packet_tx.len = 3;
80002e8c:	30 39       	mov	r9,3
80002e8e:	b0 89       	st.b	r8[0x0],r9
				ble_aci_packet_tx.content.EchoCommand.data[0] = test_byte_1;
80002e90:	34 49       	mov	r9,68
80002e92:	b0 d9       	st.b	r8[0x5],r9
				ble_aci_packet_tx.content.EchoCommand.data[1] = test_byte_2;
80002e94:	35 09       	mov	r9,80
80002e96:	b0 e9       	st.b	r8[0x6],r9
				ble_aci_write_packet();
80002e98:	f0 1f 00 25 	mcall	80002f2c <ble_aci_test_device+0x104>
			
				ble_aci_read_packet();
80002e9c:	f0 1f 00 25 	mcall	80002f30 <ble_aci_test_device+0x108>
			
				if(ble_aci_packet_rx.type == ACI_ECHO_EVENT) {
80002ea0:	4a 58       	lddpc	r8,80002f34 <ble_aci_test_device+0x10c>
80002ea2:	11 9a       	ld.ub	r10,r8[0x1]
80002ea4:	11 a9       	ld.ub	r9,r8[0x2]
80002ea6:	b1 69       	lsl	r9,0x10
80002ea8:	f3 ea 11 89 	or	r9,r9,r10<<0x18
80002eac:	11 ba       	ld.ub	r10,r8[0x3]
80002eae:	f3 ea 10 89 	or	r9,r9,r10<<0x8
80002eb2:	11 c8       	ld.ub	r8,r8[0x4]
80002eb4:	12 48       	or	r8,r9
80002eb6:	e0 48 00 82 	cp.w	r8,130
80002eba:	c3 31       	brne	80002f20 <ble_aci_test_device+0xf8>
				
					if( ble_aci_packet_rx.content.EchoEvent.data[0] == test_byte_1 &&
80002ebc:	49 e8       	lddpc	r8,80002f34 <ble_aci_test_device+0x10c>
80002ebe:	11 d9       	ld.ub	r9,r8[0x5]
80002ec0:	34 48       	mov	r8,68
80002ec2:	f0 09 18 00 	cp.b	r9,r8
80002ec6:	c2 d1       	brne	80002f20 <ble_aci_test_device+0xf8>
						ble_aci_packet_rx.content.EchoEvent.data[1] == test_byte_2) {
80002ec8:	49 b8       	lddpc	r8,80002f34 <ble_aci_test_device+0x10c>
80002eca:	11 e9       	ld.ub	r9,r8[0x6]
80002ecc:	35 08       	mov	r8,80
80002ece:	f0 09 18 00 	cp.b	r9,r8
80002ed2:	c2 71       	brne	80002f20 <ble_aci_test_device+0xf8>
					
						//everything seems to be ok, exit test mode...
						ble_aci_packet_tx.type = ACI_COMMAND_TEST;
80002ed4:	49 58       	lddpc	r8,80002f28 <ble_aci_test_device+0x100>
80002ed6:	30 09       	mov	r9,0
80002ed8:	b0 99       	st.b	r8[0x1],r9
80002eda:	b0 a9       	st.b	r8[0x2],r9
80002edc:	b0 b9       	st.b	r8[0x3],r9
80002ede:	30 19       	mov	r9,1
80002ee0:	b0 c9       	st.b	r8[0x4],r9
						ble_aci_packet_tx.len = 2;
80002ee2:	30 29       	mov	r9,2
80002ee4:	b0 89       	st.b	r8[0x0],r9
						ble_aci_packet_tx.content.TestCommand.TestFeature = 0xFF;
80002ee6:	3f f9       	mov	r9,-1
80002ee8:	b0 d9       	st.b	r8[0x5],r9
						ble_aci_write_packet();
80002eea:	f0 1f 00 11 	mcall	80002f2c <ble_aci_test_device+0x104>
					
						ble_aci_read_packet();
80002eee:	f0 1f 00 11 	mcall	80002f30 <ble_aci_test_device+0x108>
				
						if(ble_aci_packet_rx.type == ACI_DEVICE_STARTED_EVENT) {
80002ef2:	49 18       	lddpc	r8,80002f34 <ble_aci_test_device+0x10c>
80002ef4:	11 9a       	ld.ub	r10,r8[0x1]
80002ef6:	11 a9       	ld.ub	r9,r8[0x2]
80002ef8:	b1 69       	lsl	r9,0x10
80002efa:	f3 ea 11 89 	or	r9,r9,r10<<0x18
80002efe:	11 ba       	ld.ub	r10,r8[0x3]
80002f00:	f3 ea 10 89 	or	r9,r9,r10<<0x8
80002f04:	11 c8       	ld.ub	r8,r8[0x4]
80002f06:	12 48       	or	r8,r9
80002f08:	e0 48 00 81 	cp.w	r8,129
80002f0c:	c0 81       	brne	80002f1c <ble_aci_test_device+0xf4>
							if(ble_aci_packet_rx.content.DeviceStartedEvent.OperatingMode == ACI_OPERATING_MODE_SETUP) {
80002f0e:	48 a8       	lddpc	r8,80002f34 <ble_aci_test_device+0x10c>
80002f10:	11 d9       	ld.ub	r9,r8[0x5]
80002f12:	30 28       	mov	r8,2
80002f14:	f0 09 18 00 	cp.b	r9,r8
80002f18:	c0 21       	brne	80002f1c <ble_aci_test_device+0xf4>
80002f1a:	d8 0a       	popm	pc,r12=0
80002f1c:	30 2c       	mov	r12,2
80002f1e:	d8 02       	popm	pc
80002f20:	30 4c       	mov	r12,4
80002f22:	d8 02       	popm	pc
80002f24:	da 0a       	popm	pc,r12=1
80002f26:	00 00       	add	r0,r0
80002f28:	00 00       	add	r0,r0
80002f2a:	0d 74       	ld.ub	r4,--r6
80002f2c:	80 00       	ld.sh	r0,r0[0x0]
80002f2e:	2c 54       	sub	r4,-59
80002f30:	80 00       	ld.sh	r0,r0[0x0]
80002f32:	2c c0       	sub	r0,-52
80002f34:	00 00       	add	r0,r0
80002f36:	0e 1a       	sub	r10,r7

80002f38 <ble_aci_init>:
	
	cpu_irq_restore(irqflags);
}

ble_aci_init_result ble_aci_init()
{
80002f38:	d4 01       	pushm	lr
	//wait until chip is ready (necessary!)
	while(ble_spi_has_data());
80002f3a:	f0 1f 00 13 	mcall	80002f84 <ble_aci_init+0x4c>
80002f3e:	cf e1       	brne	80002f3a <ble_aci_init+0x2>
	
	ble_aci_read_packet();
80002f40:	f0 1f 00 12 	mcall	80002f88 <ble_aci_init+0x50>
	if(ble_aci_packet_rx.type == ACI_DEVICE_STARTED_EVENT) {
80002f44:	49 28       	lddpc	r8,80002f8c <ble_aci_init+0x54>
80002f46:	11 9a       	ld.ub	r10,r8[0x1]
80002f48:	11 a9       	ld.ub	r9,r8[0x2]
80002f4a:	b1 69       	lsl	r9,0x10
80002f4c:	f3 ea 11 89 	or	r9,r9,r10<<0x18
80002f50:	11 ba       	ld.ub	r10,r8[0x3]
80002f52:	f3 ea 10 89 	or	r9,r9,r10<<0x8
80002f56:	11 c8       	ld.ub	r8,r8[0x4]
80002f58:	12 48       	or	r8,r9
80002f5a:	e0 48 00 81 	cp.w	r8,129
80002f5e:	c1 11       	brne	80002f80 <ble_aci_init+0x48>
		if(ble_aci_packet_rx.content.DeviceStartedEvent.OperatingMode == ACI_OPERATING_MODE_SETUP) {
80002f60:	48 b8       	lddpc	r8,80002f8c <ble_aci_init+0x54>
80002f62:	11 d9       	ld.ub	r9,r8[0x5]
80002f64:	30 28       	mov	r8,2
80002f66:	f0 09 18 00 	cp.b	r9,r8
80002f6a:	c0 b1       	brne	80002f80 <ble_aci_init+0x48>
			if(ble_aci_packet_rx.content.DeviceStartedEvent.HWError == 0x00) {
80002f6c:	48 88       	lddpc	r8,80002f8c <ble_aci_init+0x54>
80002f6e:	11 ec       	ld.ub	r12,r8[0x6]
80002f70:	30 08       	mov	r8,0
80002f72:	f0 0c 18 00 	cp.b	r12,r8
80002f76:	f9 bc 00 00 	moveq	r12,0
80002f7a:	f9 bc 01 02 	movne	r12,2
80002f7e:	d8 02       	popm	pc
80002f80:	da 0a       	popm	pc,r12=1
80002f82:	00 00       	add	r0,r0
80002f84:	80 00       	ld.sh	r0,r0[0x0]
80002f86:	30 24       	mov	r4,2
80002f88:	80 00       	ld.sh	r0,r0[0x0]
80002f8a:	2c c0       	sub	r0,-52
80002f8c:	00 00       	add	r0,r0
80002f8e:	0e 1a       	sub	r10,r7

80002f90 <reverse_byte>:
80002f90:	eb cd 40 e0 	pushm	r5-r7,lr
80002f94:	30 0a       	mov	r10,0
80002f96:	30 48       	mov	r8,4
80002f98:	3f f9       	mov	r9,-1
80002f9a:	f2 08 09 4b 	lsl	r11,r9,r8
80002f9e:	16 59       	eor	r9,r11
80002fa0:	f7 d9 c0 08 	bfextu	r11,r9,0x0,0x8
80002fa4:	f6 06 11 ff 	rsub	r6,r11,-1
80002fa8:	f8 08 09 4e 	lsl	lr,r12,r8
80002fac:	1c 97       	mov	r7,lr
80002fae:	f8 08 08 4e 	asr	lr,r12,r8
80002fb2:	0e 95       	mov	r5,r7
80002fb4:	ed e7 00 0c 	and	r12,r6,r7
80002fb8:	1c 6b       	and	r11,lr
80002fba:	16 4c       	or	r12,r11
80002fbc:	5c 5c       	castu.b	r12
80002fbe:	a1 98       	lsr	r8,0x1
80002fc0:	2f fa       	sub	r10,-1
80002fc2:	58 3a       	cp.w	r10,3
80002fc4:	ce b1       	brne	80002f9a <reverse_byte+0xa>
80002fc6:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80002fca:	d7 03       	nop

80002fcc <ble_spi_write>:
80002fcc:	d4 01       	pushm	lr
80002fce:	f0 1f 00 08 	mcall	80002fec <ble_spi_write+0x20>
80002fd2:	18 9b       	mov	r11,r12
80002fd4:	fe 7c 34 00 	mov	r12,-52224
80002fd8:	f0 1f 00 06 	mcall	80002ff0 <ble_spi_write+0x24>
80002fdc:	fe 79 34 00 	mov	r9,-52224
80002fe0:	72 48       	ld.w	r8,r9[0x10]
80002fe2:	e2 18 02 00 	andl	r8,0x200,COH
80002fe6:	cf d0       	breq	80002fe0 <ble_spi_write+0x14>
80002fe8:	d8 02       	popm	pc
80002fea:	00 00       	add	r0,r0
80002fec:	80 00       	ld.sh	r0,r0[0x0]
80002fee:	2f 90       	sub	r0,-7
80002ff0:	80 00       	ld.sh	r0,r0[0x0]
80002ff2:	23 3e       	sub	lr,51

80002ff4 <ble_spi_read>:
80002ff4:	d4 01       	pushm	lr
80002ff6:	20 1d       	sub	sp,4
80002ff8:	30 0b       	mov	r11,0
80002ffa:	fe 7c 34 00 	mov	r12,-52224
80002ffe:	f0 1f 00 07 	mcall	80003018 <ble_spi_read+0x24>
80003002:	fa cb ff fe 	sub	r11,sp,-2
80003006:	fe 7c 34 00 	mov	r12,-52224
8000300a:	f0 1f 00 05 	mcall	8000301c <ble_spi_read+0x28>
8000300e:	1b bc       	ld.ub	r12,sp[0x3]
80003010:	f0 1f 00 04 	mcall	80003020 <ble_spi_read+0x2c>
80003014:	2f fd       	sub	sp,-4
80003016:	d8 02       	popm	pc
80003018:	80 00       	ld.sh	r0,r0[0x0]
8000301a:	23 3e       	sub	lr,51
8000301c:	80 00       	ld.sh	r0,r0[0x0]
8000301e:	23 5a       	sub	r10,53
80003020:	80 00       	ld.sh	r0,r0[0x0]
80003022:	2f 90       	sub	r0,-7

80003024 <ble_spi_has_data>:
80003024:	d4 01       	pushm	lr
80003026:	33 7c       	mov	r12,55
80003028:	f0 1f 00 03 	mcall	80003034 <ble_spi_has_data+0x10>
8000302c:	ec 1c 00 01 	eorl	r12,0x1
80003030:	5c 5c       	castu.b	r12
80003032:	d8 02       	popm	pc
80003034:	80 00       	ld.sh	r0,r0[0x0]
80003036:	49 30       	lddpc	r0,80003080 <ble_spi_reset+0x10>

80003038 <ble_spi_unselectChip>:
80003038:	d4 01       	pushm	lr
8000303a:	33 6c       	mov	r12,54
8000303c:	f0 1f 00 04 	mcall	8000304c <ble_spi_unselectChip+0x14>
80003040:	30 0b       	mov	r11,0
80003042:	fe 7c 34 00 	mov	r12,-52224
80003046:	f0 1f 00 03 	mcall	80003050 <ble_spi_unselectChip+0x18>
8000304a:	d8 02       	popm	pc
8000304c:	80 00       	ld.sh	r0,r0[0x0]
8000304e:	49 46       	lddpc	r6,8000309c <ble_spi_reset+0x2c>
80003050:	80 00       	ld.sh	r0,r0[0x0]
80003052:	22 5a       	sub	r10,37

80003054 <ble_spi_selectChip>:
80003054:	d4 01       	pushm	lr
80003056:	33 6c       	mov	r12,54
80003058:	f0 1f 00 04 	mcall	80003068 <ble_spi_selectChip+0x14>
8000305c:	30 0b       	mov	r11,0
8000305e:	fe 7c 34 00 	mov	r12,-52224
80003062:	f0 1f 00 03 	mcall	8000306c <ble_spi_selectChip+0x18>
80003066:	d8 02       	popm	pc
80003068:	80 00       	ld.sh	r0,r0[0x0]
8000306a:	49 62       	lddpc	r2,800030c0 <ble_spi_reset+0x50>
8000306c:	80 00       	ld.sh	r0,r0[0x0]
8000306e:	22 0e       	sub	lr,32

80003070 <ble_spi_reset>:
80003070:	d4 01       	pushm	lr
80003072:	31 9c       	mov	r12,25
80003074:	f0 1f 00 1b 	mcall	800030e0 <ble_spi_reset+0x70>
80003078:	e1 b8 00 42 	mfsr	r8,0x108
8000307c:	ec 69 35 00 	mov	r9,800000
80003080:	f0 09 00 0a 	add	r10,r8,r9
80003084:	e1 b9 00 42 	mfsr	r9,0x108
80003088:	14 38       	cp.w	r8,r10
8000308a:	e0 88 00 08 	brls	8000309a <ble_spi_reset+0x2a>
8000308e:	12 38       	cp.w	r8,r9
80003090:	fe 98 ff fa 	brls	80003084 <ble_spi_reset+0x14>
80003094:	12 3a       	cp.w	r10,r9
80003096:	c1 93       	brcs	800030c8 <ble_spi_reset+0x58>
80003098:	cf 6b       	rjmp	80003084 <ble_spi_reset+0x14>
8000309a:	12 38       	cp.w	r8,r9
8000309c:	e0 8b 00 16 	brhi	800030c8 <ble_spi_reset+0x58>
800030a0:	12 3a       	cp.w	r10,r9
800030a2:	c1 33       	brcs	800030c8 <ble_spi_reset+0x58>
800030a4:	cf 0b       	rjmp	80003084 <ble_spi_reset+0x14>
800030a6:	e1 b9 00 42 	mfsr	r9,0x108
800030aa:	14 38       	cp.w	r8,r10
800030ac:	e0 88 00 08 	brls	800030bc <ble_spi_reset+0x4c>
800030b0:	12 38       	cp.w	r8,r9
800030b2:	fe 98 ff fa 	brls	800030a6 <ble_spi_reset+0x36>
800030b6:	12 3a       	cp.w	r10,r9
800030b8:	c1 23       	brcs	800030dc <ble_spi_reset+0x6c>
800030ba:	cf 6b       	rjmp	800030a6 <ble_spi_reset+0x36>
800030bc:	12 38       	cp.w	r8,r9
800030be:	e0 8b 00 0f 	brhi	800030dc <ble_spi_reset+0x6c>
800030c2:	12 3a       	cp.w	r10,r9
800030c4:	c0 c3       	brcs	800030dc <ble_spi_reset+0x6c>
800030c6:	cf 0b       	rjmp	800030a6 <ble_spi_reset+0x36>
800030c8:	31 9c       	mov	r12,25
800030ca:	f0 1f 00 07 	mcall	800030e4 <ble_spi_reset+0x74>
800030ce:	e1 b8 00 42 	mfsr	r8,0x108
800030d2:	ec 69 35 00 	mov	r9,800000
800030d6:	f0 09 00 0a 	add	r10,r8,r9
800030da:	ce 6b       	rjmp	800030a6 <ble_spi_reset+0x36>
800030dc:	d8 02       	popm	pc
800030de:	00 00       	add	r0,r0
800030e0:	80 00       	ld.sh	r0,r0[0x0]
800030e2:	49 62       	lddpc	r2,80003138 <ble_spi_init+0x50>
800030e4:	80 00       	ld.sh	r0,r0[0x0]
800030e6:	49 46       	lddpc	r6,80003134 <ble_spi_init+0x4c>

800030e8 <ble_spi_init>:
800030e8:	eb cd 40 80 	pushm	r7,lr
800030ec:	20 4d       	sub	sp,16
800030ee:	49 d8       	lddpc	r8,80003160 <ble_spi_init+0x78>
800030f0:	1a 97       	mov	r7,sp
800030f2:	70 09       	ld.w	r9,r8[0x0]
800030f4:	50 09       	stdsp	sp[0x0],r9
800030f6:	70 19       	ld.w	r9,r8[0x4]
800030f8:	50 19       	stdsp	sp[0x4],r9
800030fa:	70 29       	ld.w	r9,r8[0x8]
800030fc:	50 29       	stdsp	sp[0x8],r9
800030fe:	70 38       	ld.w	r8,r8[0xc]
80003100:	50 38       	stdsp	sp[0xc],r8
80003102:	30 3b       	mov	r11,3
80003104:	49 8c       	lddpc	r12,80003164 <ble_spi_init+0x7c>
80003106:	f0 1f 00 19 	mcall	80003168 <ble_spi_init+0x80>
8000310a:	1a 9b       	mov	r11,sp
8000310c:	fe 7c 34 00 	mov	r12,-52224
80003110:	f0 1f 00 17 	mcall	8000316c <ble_spi_init+0x84>
80003114:	30 09       	mov	r9,0
80003116:	12 9a       	mov	r10,r9
80003118:	12 9b       	mov	r11,r9
8000311a:	fe 7c 34 00 	mov	r12,-52224
8000311e:	f0 1f 00 15 	mcall	80003170 <ble_spi_init+0x88>
80003122:	fe 7c 34 00 	mov	r12,-52224
80003126:	f0 1f 00 14 	mcall	80003174 <ble_spi_init+0x8c>
8000312a:	e0 6a 24 00 	mov	r10,9216
8000312e:	ea 1a 00 f4 	orh	r10,0xf4
80003132:	1a 9b       	mov	r11,sp
80003134:	fe 7c 34 00 	mov	r12,-52224
80003138:	f0 1f 00 10 	mcall	80003178 <ble_spi_init+0x90>
8000313c:	30 3b       	mov	r11,3
8000313e:	33 6c       	mov	r12,54
80003140:	f0 1f 00 0f 	mcall	8000317c <ble_spi_init+0x94>
80003144:	30 3b       	mov	r11,3
80003146:	31 9c       	mov	r12,25
80003148:	f0 1f 00 0d 	mcall	8000317c <ble_spi_init+0x94>
8000314c:	30 4b       	mov	r11,4
8000314e:	33 7c       	mov	r12,55
80003150:	f0 1f 00 0b 	mcall	8000317c <ble_spi_init+0x94>
80003154:	f0 1f 00 0b 	mcall	80003180 <ble_spi_init+0x98>
80003158:	2f cd       	sub	sp,-16
8000315a:	e3 cd 80 80 	ldm	sp++,r7,pc
8000315e:	00 00       	add	r0,r0
80003160:	80 00       	ld.sh	r0,r0[0x0]
80003162:	a2 50       	st.h	r1[0xa],r0
80003164:	80 00       	ld.sh	r0,r0[0x0]
80003166:	a2 38       	st.h	r1[0x6],r8
80003168:	80 00       	ld.sh	r0,r0[0x0]
8000316a:	47 d0       	lddsp	r0,sp[0x1f4]
8000316c:	80 00       	ld.sh	r0,r0[0x0]
8000316e:	21 98       	sub	r8,25
80003170:	80 00       	ld.sh	r0,r0[0x0]
80003172:	21 d0       	sub	r0,29
80003174:	80 00       	ld.sh	r0,r0[0x0]
80003176:	23 38       	sub	r8,51
80003178:	80 00       	ld.sh	r0,r0[0x0]
8000317a:	22 80       	sub	r0,40
8000317c:	80 00       	ld.sh	r0,r0[0x0]
8000317e:	48 00       	lddpc	r0,8000317c <ble_spi_init+0x94>
80003180:	80 00       	ld.sh	r0,r0[0x0]
80003182:	30 70       	mov	r0,7

80003184 <vStartBLETask>:
/*-----------------------------------------------------------*/

static portTASK_FUNCTION_PROTO( bleTask1, pvParameters );

void vStartBLETask( unsigned portBASE_TYPE uxPriority )
{
80003184:	d4 01       	pushm	lr
	xTaskCreate(bleTask1, ( signed char * ) "BLE", bleSTACK_SIZE, NULL, uxPriority, ( xTaskHandle * ) NULL );
80003186:	30 09       	mov	r9,0
80003188:	1a d9       	st.w	--sp,r9
8000318a:	1a d9       	st.w	--sp,r9
8000318c:	1a d9       	st.w	--sp,r9
8000318e:	18 98       	mov	r8,r12
80003190:	e0 6a 01 00 	mov	r10,256
80003194:	48 3b       	lddpc	r11,800031a0 <vStartBLETask+0x1c>
80003196:	48 4c       	lddpc	r12,800031a4 <vStartBLETask+0x20>
80003198:	f0 1f 00 04 	mcall	800031a8 <vStartBLETask+0x24>
8000319c:	2f dd       	sub	sp,-12
}
8000319e:	d8 02       	popm	pc
800031a0:	80 00       	ld.sh	r0,r0[0x0]
800031a2:	a2 60       	st.h	r1[0xc],r0
800031a4:	80 00       	ld.sh	r0,r0[0x0]
800031a6:	32 5c       	mov	r12,37
800031a8:	80 00       	ld.sh	r0,r0[0x0]
800031aa:	57 20       	stdsp	sp[0x1c8],r0

800031ac <ble_task_receive_data>:
		
	}
}

void ble_task_receive_data()
{
800031ac:	d4 31       	pushm	r0-r7,lr
	while(ble_spi_has_data()) {
		
		gpio_tgl_gpio_pin(LED0_GPIO);
800031ae:	30 86       	mov	r6,8
		
		ble_aci_read_packet();		
					
		print_dbg("Received packet (event: ");
800031b0:	4a 05       	lddpc	r5,80003230 <ble_task_receive_data+0x84>
		print_dbg_short_hex(ble_aci_packet_rx.type);
800031b2:	4a 17       	lddpc	r7,80003234 <ble_task_receive_data+0x88>
		print_dbg(")" CRLF);
800031b4:	4a 14       	lddpc	r4,80003238 <ble_task_receive_data+0x8c>
					hmi_set_assistance_level(ble_aci_packet_rx.content.DataReceiveEvent.Data->u8[0]);
					break;
			}
						
		} else if(ble_aci_packet_rx.type == ACI_DISCONNECTED_EVENT) {
			ble_connected = false;
800031b6:	4a 20       	lddpc	r0,8000323c <ble_task_receive_data+0x90>
800031b8:	30 02       	mov	r2,0
		print_dbg_short_hex(ble_aci_packet_rx.type);
		print_dbg(")" CRLF);
	
		if( ble_aci_packet_rx.type == ACI_DATA_RECEIVE_EVENT ) {
			
			switch( ble_aci_packet_rx.content.DataReceiveEvent.ServicePipeNo ) {
800031ba:	30 73       	mov	r3,7
800031bc:	30 81       	mov	r1,8
	}
}

void ble_task_receive_data()
{
	while(ble_spi_has_data()) {
800031be:	c3 48       	rjmp	80003226 <ble_task_receive_data+0x7a>
		
		gpio_tgl_gpio_pin(LED0_GPIO);
800031c0:	0c 9c       	mov	r12,r6
800031c2:	f0 1f 00 20 	mcall	80003240 <ble_task_receive_data+0x94>
		
		ble_aci_read_packet();		
800031c6:	f0 1f 00 20 	mcall	80003244 <ble_task_receive_data+0x98>
					
		print_dbg("Received packet (event: ");
800031ca:	0a 9c       	mov	r12,r5
800031cc:	f0 1f 00 1f 	mcall	80003248 <ble_task_receive_data+0x9c>
		print_dbg_short_hex(ble_aci_packet_rx.type);
800031d0:	0f bc       	ld.ub	r12,r7[0x3]
800031d2:	0f c8       	ld.ub	r8,r7[0x4]
800031d4:	f1 ec 10 8c 	or	r12,r8,r12<<0x8
800031d8:	f0 1f 00 1d 	mcall	8000324c <ble_task_receive_data+0xa0>
		print_dbg(")" CRLF);
800031dc:	08 9c       	mov	r12,r4
800031de:	f0 1f 00 1b 	mcall	80003248 <ble_task_receive_data+0x9c>
	
		if( ble_aci_packet_rx.type == ACI_DATA_RECEIVE_EVENT ) {
800031e2:	0f 99       	ld.ub	r9,r7[0x1]
800031e4:	0f a8       	ld.ub	r8,r7[0x2]
800031e6:	b1 68       	lsl	r8,0x10
800031e8:	f1 e9 11 88 	or	r8,r8,r9<<0x18
800031ec:	0f b9       	ld.ub	r9,r7[0x3]
800031ee:	f1 e9 10 88 	or	r8,r8,r9<<0x8
800031f2:	0f c9       	ld.ub	r9,r7[0x4]
800031f4:	f3 e8 10 08 	or	r8,r9,r8
800031f8:	e0 48 00 8c 	cp.w	r8,140
800031fc:	c1 11       	brne	8000321e <ble_task_receive_data+0x72>
			
			switch( ble_aci_packet_rx.content.DataReceiveEvent.ServicePipeNo ) {
800031fe:	0f d8       	ld.ub	r8,r7[0x5]
80003200:	e6 08 18 00 	cp.b	r8,r3
80003204:	c0 50       	breq	8000320e <ble_task_receive_data+0x62>
80003206:	e2 08 18 00 	cp.b	r8,r1
8000320a:	c0 e1       	brne	80003226 <ble_task_receive_data+0x7a>
8000320c:	c0 58       	rjmp	80003216 <ble_task_receive_data+0x6a>
				
				case PIPE_PEDELEC_PEDELEC_TRACTION_AID_RX:
					hmi_set_walk_status(ble_aci_packet_rx.content.DataReceiveEvent.Data->u8[0]);
8000320e:	0f ec       	ld.ub	r12,r7[0x6]
80003210:	f0 1f 00 10 	mcall	80003250 <ble_task_receive_data+0xa4>
					break;
80003214:	c0 98       	rjmp	80003226 <ble_task_receive_data+0x7a>
				
				case PIPE_PEDELEC_PEDELEC_ASSISTANCE_LEVEL_RX:
					hmi_set_assistance_level(ble_aci_packet_rx.content.DataReceiveEvent.Data->u8[0]);
80003216:	0f ec       	ld.ub	r12,r7[0x6]
80003218:	f0 1f 00 0f 	mcall	80003254 <ble_task_receive_data+0xa8>
8000321c:	c0 58       	rjmp	80003226 <ble_task_receive_data+0x7a>
					break;
			}
						
		} else if(ble_aci_packet_rx.type == ACI_DISCONNECTED_EVENT) {
			ble_connected = false;
8000321e:	e0 48 00 86 	cp.w	r8,134
80003222:	e1 f2 0e 00 	st.beq	r0[0x0],r2
	}
}

void ble_task_receive_data()
{
	while(ble_spi_has_data()) {
80003226:	f0 1f 00 0d 	mcall	80003258 <ble_task_receive_data+0xac>
8000322a:	cc b1       	brne	800031c0 <ble_task_receive_data+0x14>
						
		} else if(ble_aci_packet_rx.type == ACI_DISCONNECTED_EVENT) {
			ble_connected = false;
		}
	}
}
8000322c:	d8 32       	popm	r0-r7,pc
8000322e:	00 00       	add	r0,r0
80003230:	80 00       	ld.sh	r0,r0[0x0]
80003232:	a2 64       	st.h	r1[0xc],r4
80003234:	00 00       	add	r0,r0
80003236:	0e 1a       	sub	r10,r7
80003238:	80 00       	ld.sh	r0,r0[0x0]
8000323a:	a2 80       	st.b	r1[0x0],r0
8000323c:	00 00       	add	r0,r0
8000323e:	09 e8       	ld.ub	r8,r4[0x6]
80003240:	80 00       	ld.sh	r0,r0[0x0]
80003242:	49 7e       	lddpc	lr,8000329c <bleTask1+0x40>
80003244:	80 00       	ld.sh	r0,r0[0x0]
80003246:	2c c0       	sub	r0,-52
80003248:	80 00       	ld.sh	r0,r0[0x0]
8000324a:	2b ec       	sub	r12,-66
8000324c:	80 00       	ld.sh	r0,r0[0x0]
8000324e:	2b 94       	sub	r4,-71
80003250:	80 00       	ld.sh	r0,r0[0x0]
80003252:	3b b4       	mov	r4,-69
80003254:	80 00       	ld.sh	r0,r0[0x0]
80003256:	3b a8       	mov	r8,-70
80003258:	80 00       	ld.sh	r0,r0[0x0]
8000325a:	30 24       	mov	r4,2

8000325c <bleTask1>:
{
	xTaskCreate(bleTask1, ( signed char * ) "BLE", bleSTACK_SIZE, NULL, uxPriority, ( xTaskHandle * ) NULL );
}

static portTASK_FUNCTION( bleTask1, pvParameters )
{	
8000325c:	d4 31       	pushm	r0-r7,lr
8000325e:	20 1d       	sub	sp,4
	
	ble_spi_init();
80003260:	f0 1f 00 50 	mcall	800033a0 <bleTask1+0x144>
	
	imu_spi_configuration();
80003264:	f0 1f 00 50 	mcall	800033a4 <bleTask1+0x148>

	ble_aci_init_result init_status = ble_aci_init();
80003268:	f0 1f 00 50 	mcall	800033a8 <bleTask1+0x14c>
8000326c:	18 97       	mov	r7,r12
	if(init_status == ACI_INIT_OK) {
8000326e:	c0 91       	brne	80003280 <bleTask1+0x24>
		print_dbg("BLE device init OK!" CRLF);
80003270:	4c fc       	lddpc	r12,800033ac <bleTask1+0x150>
80003272:	f0 1f 00 50 	mcall	800033b0 <bleTask1+0x154>
		}
		
		while(1);
	}
	
	ble_aci_test_result device_status = ble_aci_test_device();
80003276:	f0 1f 00 50 	mcall	800033b4 <bleTask1+0x158>
8000327a:	18 97       	mov	r7,r12
	if( device_status == ACI_TEST_OK ) {
8000327c:	c1 20       	breq	800032a0 <bleTask1+0x44>
8000327e:	c1 f8       	rjmp	800032bc <bleTask1+0x60>

	ble_aci_init_result init_status = ble_aci_init();
	if(init_status == ACI_INIT_OK) {
		print_dbg("BLE device init OK!" CRLF);
	} else {
		print_dbg("Device error: ");
80003280:	4c ec       	lddpc	r12,800033b8 <bleTask1+0x15c>
80003282:	f0 1f 00 4c 	mcall	800033b0 <bleTask1+0x154>
		switch(init_status) {
80003286:	58 17       	cp.w	r7,1
80003288:	c0 40       	breq	80003290 <bleTask1+0x34>
8000328a:	58 27       	cp.w	r7,2
8000328c:	c0 60       	breq	80003298 <bleTask1+0x3c>
8000328e:	c0 88       	rjmp	8000329e <bleTask1+0x42>
			case ACI_INIT_DEVICE_START_ERROR: print_dbg("Device start error!" CRLF); break;
80003290:	4c bc       	lddpc	r12,800033bc <bleTask1+0x160>
80003292:	f0 1f 00 48 	mcall	800033b0 <bleTask1+0x154>
80003296:	c0 48       	rjmp	8000329e <bleTask1+0x42>
			case ACI_INIT_HW_ERROR: print_dbg("fatal hardware error!" CRLF); break;
80003298:	4c ac       	lddpc	r12,800033c0 <bleTask1+0x164>
8000329a:	f0 1f 00 46 	mcall	800033b0 <bleTask1+0x154>
8000329e:	c0 08       	rjmp	8000329e <bleTask1+0x42>
		while(1);
	}
	
	ble_aci_test_result device_status = ble_aci_test_device();
	if( device_status == ACI_TEST_OK ) {
		print_dbg("BLE device test OK!" CRLF);
800032a0:	4c 9c       	lddpc	r12,800033c4 <bleTask1+0x168>
800032a2:	f0 1f 00 44 	mcall	800033b0 <bleTask1+0x154>
		}
		
		while(1);
	}
	
	ble_aci_setup();
800032a6:	f0 1f 00 49 	mcall	800033c8 <bleTask1+0x16c>
	
	while(1) {
		print_dbg("Waiting for connection..." CRLF);
800032aa:	4c 91       	lddpc	r1,800033cc <bleTask1+0x170>
		ble_aci_connect();
		
		if(ble_aci_packet_rx.type == ACI_CONNECTED_EVENT) {
800032ac:	4c 97       	lddpc	r7,800033d0 <bleTask1+0x174>
			
			ble_connected = true;
800032ae:	4c a5       	lddpc	r5,800033d4 <bleTask1+0x178>
				
			timer_set_callback(1,ble_task_transmit_data); //register continuous data update to timer
			
			print_dbg("Device connected: ");
800032b0:	ee c8 ff f5 	sub	r8,r7,-11
800032b4:	50 08       	stdsp	sp[0x0],r8
			for(uint8_t i = 0; i < 6; i++) {
				print_dbg_char_hex(ble_aci_packet_rx.content.ConnectedEvent.PeerAdress[5-i]);
				if(i < 5) {
800032b6:	30 43       	mov	r3,4
			ble_connected = true;
				
			timer_set_callback(1,ble_task_transmit_data); //register continuous data update to timer
			
			print_dbg("Device connected: ");
			for(uint8_t i = 0; i < 6; i++) {
800032b8:	30 62       	mov	r2,6
800032ba:	c2 08       	rjmp	800032fa <bleTask1+0x9e>
	
	ble_aci_test_result device_status = ble_aci_test_device();
	if( device_status == ACI_TEST_OK ) {
		print_dbg("BLE device test OK!" CRLF);
	} else {
		print_dbg("Device error: ");
800032bc:	4b fc       	lddpc	r12,800033b8 <bleTask1+0x15c>
800032be:	f0 1f 00 3d 	mcall	800033b0 <bleTask1+0x154>
		switch(device_status) {
800032c2:	58 27       	cp.w	r7,2
800032c4:	c0 f0       	breq	800032e2 <bleTask1+0x86>
800032c6:	e0 8b 00 05 	brhi	800032d0 <bleTask1+0x74>
800032ca:	58 17       	cp.w	r7,1
800032cc:	c0 70       	breq	800032da <bleTask1+0x7e>
800032ce:	c1 58       	rjmp	800032f8 <bleTask1+0x9c>
800032d0:	58 37       	cp.w	r7,3
800032d2:	c0 c0       	breq	800032ea <bleTask1+0x8e>
800032d4:	58 47       	cp.w	r7,4
800032d6:	c0 e0       	breq	800032f2 <bleTask1+0x96>
800032d8:	c1 08       	rjmp	800032f8 <bleTask1+0x9c>
			case ACI_TEST_ENTER_ERROR: print_dbg("unable to enter test mode!" CRLF); break;
800032da:	4c 0c       	lddpc	r12,800033d8 <bleTask1+0x17c>
800032dc:	f0 1f 00 35 	mcall	800033b0 <bleTask1+0x154>
800032e0:	c0 c8       	rjmp	800032f8 <bleTask1+0x9c>
			case ACI_TEST_EXIT_ERROR: print_dbg("unable to exit test mode!" CRLF); break;
800032e2:	4b fc       	lddpc	r12,800033dc <bleTask1+0x180>
800032e4:	f0 1f 00 33 	mcall	800033b0 <bleTask1+0x154>
800032e8:	c0 88       	rjmp	800032f8 <bleTask1+0x9c>
			case ACI_TEST_HW_ERROR: print_dbg("fatal hardware error!" CRLF); break;
800032ea:	4b 6c       	lddpc	r12,800033c0 <bleTask1+0x164>
800032ec:	f0 1f 00 31 	mcall	800033b0 <bleTask1+0x154>
800032f0:	c0 48       	rjmp	800032f8 <bleTask1+0x9c>
			case ACI_TEST_ECHO_ERROR: print_dbg("echo failed!" CRLF); break;
800032f2:	4b cc       	lddpc	r12,800033e0 <bleTask1+0x184>
800032f4:	f0 1f 00 2f 	mcall	800033b0 <bleTask1+0x154>
800032f8:	c0 08       	rjmp	800032f8 <bleTask1+0x9c>
	}
	
	ble_aci_setup();
	
	while(1) {
		print_dbg("Waiting for connection..." CRLF);
800032fa:	02 9c       	mov	r12,r1
800032fc:	f0 1f 00 2d 	mcall	800033b0 <bleTask1+0x154>
		ble_aci_connect();
80003300:	f0 1f 00 39 	mcall	800033e4 <bleTask1+0x188>
		
		if(ble_aci_packet_rx.type == ACI_CONNECTED_EVENT) {
80003304:	0f 99       	ld.ub	r9,r7[0x1]
80003306:	0f a8       	ld.ub	r8,r7[0x2]
80003308:	b1 68       	lsl	r8,0x10
8000330a:	f1 e9 11 88 	or	r8,r8,r9<<0x18
8000330e:	0f b9       	ld.ub	r9,r7[0x3]
80003310:	f1 e9 10 88 	or	r8,r8,r9<<0x8
80003314:	0f c9       	ld.ub	r9,r7[0x4]
80003316:	f3 e8 10 08 	or	r8,r9,r8
8000331a:	e0 48 00 85 	cp.w	r8,133
8000331e:	c3 41       	brne	80003386 <bleTask1+0x12a>
			
			ble_connected = true;
80003320:	30 18       	mov	r8,1
80003322:	aa 88       	st.b	r5[0x0],r8
				
			timer_set_callback(1,ble_task_transmit_data); //register continuous data update to timer
80003324:	4b 1b       	lddpc	r11,800033e8 <bleTask1+0x18c>
80003326:	30 1c       	mov	r12,1
80003328:	f0 1f 00 31 	mcall	800033ec <bleTask1+0x190>
			
			print_dbg("Device connected: ");
8000332c:	4b 1c       	lddpc	r12,800033f0 <bleTask1+0x194>
8000332e:	f0 1f 00 21 	mcall	800033b0 <bleTask1+0x154>
80003332:	40 04       	lddsp	r4,sp[0x0]
80003334:	30 06       	mov	r6,0
			for(uint8_t i = 0; i < 6; i++) {
				print_dbg_char_hex(ble_aci_packet_rx.content.ConnectedEvent.PeerAdress[5-i]);
				if(i < 5) {
					print_dbg_char(':');
80003336:	33 a0       	mov	r0,58
				
			timer_set_callback(1,ble_task_transmit_data); //register continuous data update to timer
			
			print_dbg("Device connected: ");
			for(uint8_t i = 0; i < 6; i++) {
				print_dbg_char_hex(ble_aci_packet_rx.content.ConnectedEvent.PeerAdress[5-i]);
80003338:	09 8c       	ld.ub	r12,r4[0x0]
8000333a:	f0 1f 00 2f 	mcall	800033f4 <bleTask1+0x198>
				if(i < 5) {
8000333e:	e6 06 18 00 	cp.b	r6,r3
80003342:	e0 8b 00 05 	brhi	8000334c <bleTask1+0xf0>
					print_dbg_char(':');
80003346:	00 9c       	mov	r12,r0
80003348:	f0 1f 00 2c 	mcall	800033f8 <bleTask1+0x19c>
			ble_connected = true;
				
			timer_set_callback(1,ble_task_transmit_data); //register continuous data update to timer
			
			print_dbg("Device connected: ");
			for(uint8_t i = 0; i < 6; i++) {
8000334c:	2f f6       	sub	r6,-1
8000334e:	5c 56       	castu.b	r6
80003350:	20 14       	sub	r4,1
80003352:	e4 06 18 00 	cp.b	r6,r2
80003356:	cf 11       	brne	80003338 <bleTask1+0xdc>
				print_dbg_char_hex(ble_aci_packet_rx.content.ConnectedEvent.PeerAdress[5-i]);
				if(i < 5) {
					print_dbg_char(':');
				}
			}
			print_dbg(CRLF);
80003358:	4a 9c       	lddpc	r12,800033fc <bleTask1+0x1a0>
8000335a:	f0 1f 00 16 	mcall	800033b0 <bleTask1+0x154>
			
			while(ble_connected) {
8000335e:	0b 89       	ld.ub	r9,r5[0x0]
80003360:	30 08       	mov	r8,0
80003362:	f0 09 18 00 	cp.b	r9,r8
80003366:	c0 80       	breq	80003376 <bleTask1+0x11a>
80003368:	10 96       	mov	r6,r8
				ble_task_receive_data();
8000336a:	f0 1f 00 26 	mcall	80003400 <bleTask1+0x1a4>
					print_dbg_char(':');
				}
			}
			print_dbg(CRLF);
			
			while(ble_connected) {
8000336e:	0b 88       	ld.ub	r8,r5[0x0]
80003370:	ec 08 18 00 	cp.b	r8,r6
80003374:	cf b1       	brne	8000336a <bleTask1+0x10e>
				ble_task_receive_data();
			}
			
			timer_set_callback(1,NULL); //unregister continuous data update
80003376:	30 0b       	mov	r11,0
80003378:	30 1c       	mov	r12,1
8000337a:	f0 1f 00 1d 	mcall	800033ec <bleTask1+0x190>
			print_dbg("Device disconnected!" CRLF);
8000337e:	4a 2c       	lddpc	r12,80003404 <bleTask1+0x1a8>
80003380:	f0 1f 00 0c 	mcall	800033b0 <bleTask1+0x154>
80003384:	cb bb       	rjmp	800032fa <bleTask1+0x9e>
			
		} else {
			print_dbg("Connection error by event: ");
80003386:	4a 1c       	lddpc	r12,80003408 <bleTask1+0x1ac>
80003388:	f0 1f 00 0a 	mcall	800033b0 <bleTask1+0x154>
			print_dbg_short_hex(ble_aci_packet_rx.type);
8000338c:	0f bc       	ld.ub	r12,r7[0x3]
8000338e:	0f c8       	ld.ub	r8,r7[0x4]
80003390:	f1 ec 10 8c 	or	r12,r8,r12<<0x8
80003394:	f0 1f 00 1e 	mcall	8000340c <bleTask1+0x1b0>
			print_dbg(CRLF);
80003398:	49 9c       	lddpc	r12,800033fc <bleTask1+0x1a0>
8000339a:	f0 1f 00 06 	mcall	800033b0 <bleTask1+0x154>
8000339e:	ca eb       	rjmp	800032fa <bleTask1+0x9e>
800033a0:	80 00       	ld.sh	r0,r0[0x0]
800033a2:	30 e8       	mov	r8,14
800033a4:	80 00       	ld.sh	r0,r0[0x0]
800033a6:	44 d0       	lddsp	r0,sp[0x134]
800033a8:	80 00       	ld.sh	r0,r0[0x0]
800033aa:	2f 38       	sub	r8,-13
800033ac:	80 00       	ld.sh	r0,r0[0x0]
800033ae:	a2 84       	st.b	r1[0x0],r4
800033b0:	80 00       	ld.sh	r0,r0[0x0]
800033b2:	2b ec       	sub	r12,-66
800033b4:	80 00       	ld.sh	r0,r0[0x0]
800033b6:	2e 28       	sub	r8,-30
800033b8:	80 00       	ld.sh	r0,r0[0x0]
800033ba:	a2 9c       	st.b	r1[0x1],r12
800033bc:	80 00       	ld.sh	r0,r0[0x0]
800033be:	a2 ac       	st.b	r1[0x2],r12
800033c0:	80 00       	ld.sh	r0,r0[0x0]
800033c2:	a2 c4       	st.b	r1[0x4],r4
800033c4:	80 00       	ld.sh	r0,r0[0x0]
800033c6:	a2 dc       	st.b	r1[0x5],r12
800033c8:	80 00       	ld.sh	r0,r0[0x0]
800033ca:	2d bc       	sub	r12,-37
800033cc:	80 00       	ld.sh	r0,r0[0x0]
800033ce:	a3 40       	asr	r0,0x2
800033d0:	00 00       	add	r0,r0
800033d2:	0e 1a       	sub	r10,r7
800033d4:	00 00       	add	r0,r0
800033d6:	09 e8       	ld.ub	r8,r4[0x6]
800033d8:	80 00       	ld.sh	r0,r0[0x0]
800033da:	a2 f4       	st.b	r1[0x7],r4
800033dc:	80 00       	ld.sh	r0,r0[0x0]
800033de:	a3 14       	ld.d	r4,--r1
800033e0:	80 00       	ld.sh	r0,r0[0x0]
800033e2:	a3 30       	mul	r0,r1
800033e4:	80 00       	ld.sh	r0,r0[0x0]
800033e6:	2d 80       	sub	r0,-40
800033e8:	80 00       	ld.sh	r0,r0[0x0]
800033ea:	34 10       	mov	r0,65
800033ec:	80 00       	ld.sh	r0,r0[0x0]
800033ee:	45 84       	lddsp	r4,sp[0x160]
800033f0:	80 00       	ld.sh	r0,r0[0x0]
800033f2:	a3 5c       	asr	r12,0x3
800033f4:	80 00       	ld.sh	r0,r0[0x0]
800033f6:	2b d8       	sub	r8,-67
800033f8:	80 00       	ld.sh	r0,r0[0x0]
800033fa:	2b 28       	sub	r8,-78
800033fc:	80 00       	ld.sh	r0,r0[0x0]
800033fe:	a3 3c       	mul	r12,r1
80003400:	80 00       	ld.sh	r0,r0[0x0]
80003402:	31 ac       	mov	r12,26
80003404:	80 00       	ld.sh	r0,r0[0x0]
80003406:	a3 70       	lsl	r0,0x3
80003408:	80 00       	ld.sh	r0,r0[0x0]
8000340a:	a3 88       	lsr	r8,0x2
8000340c:	80 00       	ld.sh	r0,r0[0x0]
8000340e:	2b 94       	sub	r4,-71

80003410 <ble_task_transmit_data>:
bool ble_connected = false;

uint8_t* buffer;

void ble_task_transmit_data(U32 ms)
{
80003410:	d4 01       	pushm	lr
80003412:	20 5d       	sub	sp,20
	if( ms % 100 == 0 && hmi_is_on() ) {
80003414:	e0 69 85 1f 	mov	r9,34079
80003418:	ea 19 51 eb 	orh	r9,0x51eb
8000341c:	f8 09 06 48 	mulu.d	r8,r12,r9
80003420:	f2 08 16 05 	lsr	r8,r9,0x5
80003424:	f0 08 10 64 	mul	r8,r8,100
80003428:	10 1c       	sub	r12,r8
8000342a:	c4 71       	brne	800034b8 <ble_task_transmit_data+0xa8>
8000342c:	f0 1f 00 24 	mcall	800034bc <ble_task_transmit_data+0xac>
80003430:	c4 40       	breq	800034b8 <ble_task_transmit_data+0xa8>
		
		gpio_tgl_gpio_pin(LED1_GPIO);
80003432:	37 7c       	mov	r12,119
80003434:	f0 1f 00 23 	mcall	800034c0 <ble_task_transmit_data+0xb0>
					
		U16 speed = hmi_get_speed();
80003438:	f0 1f 00 23 	mcall	800034c4 <ble_task_transmit_data+0xb4>
8000343c:	fb 5c 00 10 	st.h	sp[16],r12
		ble_aci_set_local_data(PIPE_PEDELEC_PEDELEC_SPEED_TX,(uint8_t*) &speed,2); //1100
80003440:	30 2a       	mov	r10,2
80003442:	fa cb ff f0 	sub	r11,sp,-16
80003446:	30 1c       	mov	r12,1
80003448:	f0 1f 00 20 	mcall	800034c8 <ble_task_transmit_data+0xb8>
				
		U8 battery = hmi_get_battery();
8000344c:	f0 1f 00 20 	mcall	800034cc <ble_task_transmit_data+0xbc>
80003450:	fa cb ff ec 	sub	r11,sp,-20
80003454:	16 fc       	st.b	--r11,r12
		ble_aci_set_local_data(PIPE_PEDELEC_PEDELEC_BATTERY_TX,(uint8_t*) &battery,1); //1101
80003456:	30 1a       	mov	r10,1
80003458:	30 2c       	mov	r12,2
8000345a:	f0 1f 00 1c 	mcall	800034c8 <ble_task_transmit_data+0xb8>
		
		U32 total_distance = hmi_get_total_distance();
8000345e:	f0 1f 00 1d 	mcall	800034d0 <ble_task_transmit_data+0xc0>
80003462:	50 3c       	stdsp	sp[0xc],r12
		ble_aci_set_local_data(PIPE_PEDELEC_PEDELEC_TOTAL_DISTANCE_TX,(uint8_t*) &total_distance,4); //1102
80003464:	30 4a       	mov	r10,4
80003466:	fa cb ff f4 	sub	r11,sp,-12
8000346a:	30 3c       	mov	r12,3
8000346c:	f0 1f 00 17 	mcall	800034c8 <ble_task_transmit_data+0xb8>
		
		U32 total_uptime = hmi_get_total_uptime();
80003470:	f0 1f 00 19 	mcall	800034d4 <ble_task_transmit_data+0xc4>
80003474:	50 2c       	stdsp	sp[0x8],r12
		ble_aci_set_local_data(PIPE_PEDELEC_PEDELEC_TOTAL_UPTIME_TX,(uint8_t*) &total_uptime,4); //1103
80003476:	30 4a       	mov	r10,4
80003478:	fa cb ff f8 	sub	r11,sp,-8
8000347c:	14 9c       	mov	r12,r10
8000347e:	f0 1f 00 13 	mcall	800034c8 <ble_task_transmit_data+0xb8>
		
		U32 reach = hmi_get_reach();
80003482:	f0 1f 00 16 	mcall	800034d8 <ble_task_transmit_data+0xc8>
80003486:	50 1c       	stdsp	sp[0x4],r12
		ble_aci_set_local_data(PIPE_PEDELEC_PEDELEC_REACH_TX,(uint8_t*) &reach,4); //1104
80003488:	30 4a       	mov	r10,4
8000348a:	fa 0a 00 0b 	add	r11,sp,r10
8000348e:	30 5c       	mov	r12,5
80003490:	f0 1f 00 0e 	mcall	800034c8 <ble_task_transmit_data+0xb8>
		
		U8 engine_power = hmi_get_engine_power();
80003494:	f0 1f 00 12 	mcall	800034dc <ble_task_transmit_data+0xcc>
80003498:	fb 6c 00 12 	st.b	sp[18],r12
		ble_aci_set_local_data(PIPE_PEDELEC_PEDELEC_ENGINE_POWER_TX,(uint8_t*) &engine_power,1); //1105
8000349c:	30 1a       	mov	r10,1
8000349e:	fa cb ff ee 	sub	r11,sp,-18
800034a2:	30 6c       	mov	r12,6
800034a4:	f0 1f 00 09 	mcall	800034c8 <ble_task_transmit_data+0xb8>
		
		float velocity = acc_raw_2_velocity();
800034a8:	f0 1f 00 0e 	mcall	800034e0 <ble_task_transmit_data+0xd0>
800034ac:	50 0c       	stdsp	sp[0x0],r12
		ble_aci_set_local_data(PIPE_PEDELEC_PEDELEC_ACCELEROMETER_RAW_DATA_TX,(uint8_t*) &velocity ,1); //1106
800034ae:	30 1a       	mov	r10,1
800034b0:	1a 9b       	mov	r11,sp
800034b2:	30 ac       	mov	r12,10
800034b4:	f0 1f 00 05 	mcall	800034c8 <ble_task_transmit_data+0xb8>
		
	}
}
800034b8:	2f bd       	sub	sp,-20
800034ba:	d8 02       	popm	pc
800034bc:	80 00       	ld.sh	r0,r0[0x0]
800034be:	3b 54       	mov	r4,-75
800034c0:	80 00       	ld.sh	r0,r0[0x0]
800034c2:	49 7e       	lddpc	lr,8000351c <can_buffer_add+0xc>
800034c4:	80 00       	ld.sh	r0,r0[0x0]
800034c6:	3b 60       	mov	r0,-74
800034c8:	80 00       	ld.sh	r0,r0[0x0]
800034ca:	2d 44       	sub	r4,-44
800034cc:	80 00       	ld.sh	r0,r0[0x0]
800034ce:	3b 78       	mov	r8,-73
800034d0:	80 00       	ld.sh	r0,r0[0x0]
800034d2:	3b 84       	mov	r4,-72
800034d4:	80 00       	ld.sh	r0,r0[0x0]
800034d6:	3b 9c       	mov	r12,-71
800034d8:	80 00       	ld.sh	r0,r0[0x0]
800034da:	3b 90       	mov	r0,-71
800034dc:	80 00       	ld.sh	r0,r0[0x0]
800034de:	3b 6c       	mov	r12,-74
800034e0:	80 00       	ld.sh	r0,r0[0x0]
800034e2:	41 cc       	lddsp	r12,sp[0x70]

800034e4 <can_buffer_init>:
800034e4:	48 a8       	lddpc	r8,8000350c <can_buffer_init+0x28>
800034e6:	11 89       	ld.ub	r9,r8[0x0]
800034e8:	30 09       	mov	r9,0
800034ea:	b0 89       	st.b	r8[0x0],r9
800034ec:	11 9a       	ld.ub	r10,r8[0x1]
800034ee:	b0 99       	st.b	r8[0x1],r9
800034f0:	11 aa       	ld.ub	r10,r8[0x2]
800034f2:	b0 a9       	st.b	r8[0x2],r9
800034f4:	11 ba       	ld.ub	r10,r8[0x3]
800034f6:	b0 b9       	st.b	r8[0x3],r9
800034f8:	11 ca       	ld.ub	r10,r8[0x4]
800034fa:	b0 c9       	st.b	r8[0x4],r9
800034fc:	11 da       	ld.ub	r10,r8[0x5]
800034fe:	b0 d9       	st.b	r8[0x5],r9
80003500:	11 ea       	ld.ub	r10,r8[0x6]
80003502:	b0 e9       	st.b	r8[0x6],r9
80003504:	11 fa       	ld.ub	r10,r8[0x7]
80003506:	b0 f9       	st.b	r8[0x7],r9
80003508:	5e fc       	retal	r12
8000350a:	00 00       	add	r0,r0
8000350c:	00 00       	add	r0,r0
8000350e:	0e c0       	st.b	r7++,r0

80003510 <can_buffer_add>:
80003510:	eb cd 40 80 	pushm	r7,lr
80003514:	4a 67       	lddpc	r7,800035ac <can_buffer_add+0x9c>
80003516:	0f 88       	ld.ub	r8,r7[0x0]
80003518:	0f 9c       	ld.ub	r12,r7[0x1]
8000351a:	b1 6c       	lsl	r12,0x10
8000351c:	f9 e8 11 8c 	or	r12,r12,r8<<0x18
80003520:	0f a8       	ld.ub	r8,r7[0x2]
80003522:	f9 e8 10 8c 	or	r12,r12,r8<<0x8
80003526:	0f b8       	ld.ub	r8,r7[0x3]
80003528:	f1 ec 10 0c 	or	r12,r8,r12
8000352c:	f8 08 15 04 	lsl	r8,r12,0x4
80003530:	f0 0c 00 0c 	add	r12,r8,r12
80003534:	ee 0c 00 0c 	add	r12,r7,r12
80003538:	31 1a       	mov	r10,17
8000353a:	fa cb ff f8 	sub	r11,sp,-8
8000353e:	2f 8c       	sub	r12,-8
80003540:	f0 1f 00 1c 	mcall	800035b0 <can_buffer_add+0xa0>
80003544:	0f 89       	ld.ub	r9,r7[0x0]
80003546:	0f 98       	ld.ub	r8,r7[0x1]
80003548:	b1 68       	lsl	r8,0x10
8000354a:	f1 e9 11 88 	or	r8,r8,r9<<0x18
8000354e:	0f a9       	ld.ub	r9,r7[0x2]
80003550:	f1 e9 10 88 	or	r8,r8,r9<<0x8
80003554:	0f b9       	ld.ub	r9,r7[0x3]
80003556:	f3 e8 10 08 	or	r8,r9,r8
8000355a:	2f f8       	sub	r8,-1
8000355c:	0f 89       	ld.ub	r9,r7[0x0]
8000355e:	f0 09 16 18 	lsr	r9,r8,0x18
80003562:	ae 89       	st.b	r7[0x0],r9
80003564:	0f 99       	ld.ub	r9,r7[0x1]
80003566:	f0 09 16 10 	lsr	r9,r8,0x10
8000356a:	ae 99       	st.b	r7[0x1],r9
8000356c:	0f a9       	ld.ub	r9,r7[0x2]
8000356e:	f0 09 16 08 	lsr	r9,r8,0x8
80003572:	ae a9       	st.b	r7[0x2],r9
80003574:	0f b9       	ld.ub	r9,r7[0x3]
80003576:	ae b8       	st.b	r7[0x3],r8
80003578:	0f 89       	ld.ub	r9,r7[0x0]
8000357a:	0f 98       	ld.ub	r8,r7[0x1]
8000357c:	b1 68       	lsl	r8,0x10
8000357e:	f1 e9 11 88 	or	r8,r8,r9<<0x18
80003582:	0f a9       	ld.ub	r9,r7[0x2]
80003584:	f1 e9 10 88 	or	r8,r8,r9<<0x8
80003588:	0f b9       	ld.ub	r9,r7[0x3]
8000358a:	f3 e8 10 08 	or	r8,r9,r8
8000358e:	e0 48 04 00 	cp.w	r8,1024
80003592:	c0 a1       	brne	800035a6 <can_buffer_add+0x96>
80003594:	0f 89       	ld.ub	r9,r7[0x0]
80003596:	30 09       	mov	r9,0
80003598:	ae 89       	st.b	r7[0x0],r9
8000359a:	0f 9a       	ld.ub	r10,r7[0x1]
8000359c:	ae 99       	st.b	r7[0x1],r9
8000359e:	0f aa       	ld.ub	r10,r7[0x2]
800035a0:	ae a9       	st.b	r7[0x2],r9
800035a2:	0f ba       	ld.ub	r10,r7[0x3]
800035a4:	ae b9       	st.b	r7[0x3],r9
800035a6:	e3 cd 80 80 	ldm	sp++,r7,pc
800035aa:	00 00       	add	r0,r0
800035ac:	00 00       	add	r0,r0
800035ae:	0e c0       	st.b	r7++,r0
800035b0:	80 00       	ld.sh	r0,r0[0x0]
800035b2:	7d 3c       	ld.w	r12,lr[0x4c]

800035b4 <can_buffer_remove>:
800035b4:	eb cd 40 c0 	pushm	r6-r7,lr
800035b8:	20 5d       	sub	sp,20
800035ba:	18 96       	mov	r6,r12
800035bc:	4a 67       	lddpc	r7,80003654 <can_buffer_remove+0xa0>
800035be:	0f c8       	ld.ub	r8,r7[0x4]
800035c0:	0f db       	ld.ub	r11,r7[0x5]
800035c2:	b1 6b       	lsl	r11,0x10
800035c4:	f7 e8 11 8b 	or	r11,r11,r8<<0x18
800035c8:	0f e8       	ld.ub	r8,r7[0x6]
800035ca:	f7 e8 10 8b 	or	r11,r11,r8<<0x8
800035ce:	0f f8       	ld.ub	r8,r7[0x7]
800035d0:	f1 eb 10 0b 	or	r11,r8,r11
800035d4:	f6 08 15 04 	lsl	r8,r11,0x4
800035d8:	f0 0b 00 0b 	add	r11,r8,r11
800035dc:	ee 0b 00 0b 	add	r11,r7,r11
800035e0:	31 1a       	mov	r10,17
800035e2:	2f 8b       	sub	r11,-8
800035e4:	f0 1f 00 1d 	mcall	80003658 <can_buffer_remove+0xa4>
800035e8:	0f c9       	ld.ub	r9,r7[0x4]
800035ea:	0f d8       	ld.ub	r8,r7[0x5]
800035ec:	b1 68       	lsl	r8,0x10
800035ee:	f1 e9 11 88 	or	r8,r8,r9<<0x18
800035f2:	0f e9       	ld.ub	r9,r7[0x6]
800035f4:	f1 e9 10 88 	or	r8,r8,r9<<0x8
800035f8:	0f f9       	ld.ub	r9,r7[0x7]
800035fa:	f3 e8 10 08 	or	r8,r9,r8
800035fe:	2f f8       	sub	r8,-1
80003600:	0f c9       	ld.ub	r9,r7[0x4]
80003602:	f0 09 16 18 	lsr	r9,r8,0x18
80003606:	ae c9       	st.b	r7[0x4],r9
80003608:	0f d9       	ld.ub	r9,r7[0x5]
8000360a:	f0 09 16 10 	lsr	r9,r8,0x10
8000360e:	ae d9       	st.b	r7[0x5],r9
80003610:	0f e9       	ld.ub	r9,r7[0x6]
80003612:	f0 09 16 08 	lsr	r9,r8,0x8
80003616:	ae e9       	st.b	r7[0x6],r9
80003618:	0f f9       	ld.ub	r9,r7[0x7]
8000361a:	ae f8       	st.b	r7[0x7],r8
8000361c:	0f c9       	ld.ub	r9,r7[0x4]
8000361e:	0f d8       	ld.ub	r8,r7[0x5]
80003620:	b1 68       	lsl	r8,0x10
80003622:	f1 e9 11 88 	or	r8,r8,r9<<0x18
80003626:	0f e9       	ld.ub	r9,r7[0x6]
80003628:	f1 e9 10 88 	or	r8,r8,r9<<0x8
8000362c:	0f f9       	ld.ub	r9,r7[0x7]
8000362e:	f3 e8 10 08 	or	r8,r9,r8
80003632:	e0 48 04 00 	cp.w	r8,1024
80003636:	c0 a1       	brne	8000364a <can_buffer_remove+0x96>
80003638:	0f c9       	ld.ub	r9,r7[0x4]
8000363a:	30 09       	mov	r9,0
8000363c:	ae c9       	st.b	r7[0x4],r9
8000363e:	0f da       	ld.ub	r10,r7[0x5]
80003640:	ae d9       	st.b	r7[0x5],r9
80003642:	0f ea       	ld.ub	r10,r7[0x6]
80003644:	ae e9       	st.b	r7[0x6],r9
80003646:	0f fa       	ld.ub	r10,r7[0x7]
80003648:	ae f9       	st.b	r7[0x7],r9
8000364a:	0c 9c       	mov	r12,r6
8000364c:	2f bd       	sub	sp,-20
8000364e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003652:	00 00       	add	r0,r0
80003654:	00 00       	add	r0,r0
80003656:	0e c0       	st.b	r7++,r0
80003658:	80 00       	ld.sh	r0,r0[0x0]
8000365a:	7d 3c       	ld.w	r12,lr[0x4c]

8000365c <can_buffer_has_next>:
8000365c:	48 d8       	lddpc	r8,80003690 <can_buffer_has_next+0x34>
8000365e:	11 8a       	ld.ub	r10,r8[0x0]
80003660:	11 99       	ld.ub	r9,r8[0x1]
80003662:	b1 69       	lsl	r9,0x10
80003664:	f3 ea 11 89 	or	r9,r9,r10<<0x18
80003668:	11 aa       	ld.ub	r10,r8[0x2]
8000366a:	f3 ea 10 89 	or	r9,r9,r10<<0x8
8000366e:	11 ba       	ld.ub	r10,r8[0x3]
80003670:	f5 e9 10 09 	or	r9,r10,r9
80003674:	11 cb       	ld.ub	r11,r8[0x4]
80003676:	11 da       	ld.ub	r10,r8[0x5]
80003678:	b1 6a       	lsl	r10,0x10
8000367a:	f5 eb 11 8a 	or	r10,r10,r11<<0x18
8000367e:	11 eb       	ld.ub	r11,r8[0x6]
80003680:	f5 eb 10 8a 	or	r10,r10,r11<<0x8
80003684:	11 f8       	ld.ub	r8,r8[0x7]
80003686:	14 48       	or	r8,r10
80003688:	10 39       	cp.w	r9,r8
8000368a:	5f 1c       	srne	r12
8000368c:	5e fc       	retal	r12
8000368e:	00 00       	add	r0,r0
80003690:	00 00       	add	r0,r0
80003692:	0e c0       	st.b	r7++,r0

80003694 <can_com_set_tx_callback>:
80003694:	58 0c       	cp.w	r12,0
80003696:	c0 41       	brne	8000369e <can_com_set_tx_callback+0xa>
80003698:	48 38       	lddpc	r8,800036a4 <can_com_set_tx_callback+0x10>
8000369a:	91 0b       	st.w	r8[0x0],r11
8000369c:	5e fc       	retal	r12
8000369e:	48 38       	lddpc	r8,800036a8 <can_com_set_tx_callback+0x14>
800036a0:	91 0b       	st.w	r8[0x0],r11
800036a2:	5e fc       	retal	r12
800036a4:	00 00       	add	r0,r0
800036a6:	53 d4       	stdsp	sp[0xf4],r4
800036a8:	00 00       	add	r0,r0
800036aa:	52 cc       	stdsp	sp[0xb0],r12

800036ac <can_com_set_rx_callback>:
800036ac:	58 0c       	cp.w	r12,0
800036ae:	c0 41       	brne	800036b6 <can_com_set_rx_callback+0xa>
800036b0:	48 38       	lddpc	r8,800036bc <can_com_set_rx_callback+0x10>
800036b2:	91 0b       	st.w	r8[0x0],r11
800036b4:	5e fc       	retal	r12
800036b6:	48 38       	lddpc	r8,800036c0 <can_com_set_rx_callback+0x14>
800036b8:	91 0b       	st.w	r8[0x0],r11
800036ba:	5e fc       	retal	r12
800036bc:	00 00       	add	r0,r0
800036be:	53 d0       	stdsp	sp[0xf4],r0
800036c0:	00 00       	add	r0,r0
800036c2:	52 c8       	stdsp	sp[0xb0],r8

800036c4 <can_com_rx>:
800036c4:	eb cd 40 c0 	pushm	r6-r7,lr
800036c8:	18 96       	mov	r6,r12
800036ca:	e1 b7 00 00 	mfsr	r7,0x0
800036ce:	d3 03       	ssrf	0x10
800036d0:	f0 1f 00 0b 	mcall	800036fc <can_com_rx+0x38>
800036d4:	3f f8       	mov	r8,-1
800036d6:	f0 0c 18 00 	cp.b	r12,r8
800036da:	c0 51       	brne	800036e4 <can_com_rx+0x20>
800036dc:	e0 6c 00 ff 	mov	r12,255
800036e0:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800036e4:	48 79       	lddpc	r9,80003700 <can_com_rx+0x3c>
800036e6:	30 0a       	mov	r10,0
800036e8:	18 9b       	mov	r11,r12
800036ea:	0c 9c       	mov	r12,r6
800036ec:	f0 1f 00 06 	mcall	80003704 <can_com_rx+0x40>
800036f0:	e6 17 00 01 	andh	r7,0x1,COH
800036f4:	c0 21       	brne	800036f8 <can_com_rx+0x34>
800036f6:	d5 03       	csrf	0x10
800036f8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800036fc:	80 00       	ld.sh	r0,r0[0x0]
800036fe:	25 50       	sub	r0,85
80003700:	00 00       	add	r0,r0
80003702:	09 f4       	ld.ub	r4,r4[0x7]
80003704:	80 00       	ld.sh	r0,r0[0x0]
80003706:	27 a6       	sub	r6,122

80003708 <can_com_tx>:
80003708:	eb cd 40 fc 	pushm	r2-r7,lr
8000370c:	18 97       	mov	r7,r12
8000370e:	10 92       	mov	r2,r8
80003710:	12 93       	mov	r3,r9
80003712:	40 76       	lddsp	r6,sp[0x1c]
80003714:	e1 b4 00 00 	mfsr	r4,0x0
80003718:	d3 03       	ssrf	0x10
8000371a:	49 78       	lddpc	r8,80003774 <can_com_tx+0x6c>
8000371c:	f0 e3 00 08 	st.d	r8[8],r2
80003720:	91 0a       	st.w	r8[0x0],r10
80003722:	18 95       	mov	r5,r12
80003724:	f0 1f 00 15 	mcall	80003778 <can_com_tx+0x70>
80003728:	3f f8       	mov	r8,-1
8000372a:	f0 0c 18 00 	cp.b	r12,r8
8000372e:	c0 51       	brne	80003738 <can_com_tx+0x30>
80003730:	e0 6c 00 ff 	mov	r12,255
80003734:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80003738:	58 07       	cp.w	r7,0
8000373a:	c0 91       	brne	8000374c <can_com_tx+0x44>
8000373c:	49 08       	lddpc	r8,8000377c <can_com_tx+0x74>
8000373e:	30 19       	mov	r9,1
80003740:	f2 0c 09 49 	lsl	r9,r9,r12
80003744:	70 0a       	ld.w	r10,r8[0x0]
80003746:	14 49       	or	r9,r10
80003748:	91 09       	st.w	r8[0x0],r9
8000374a:	c0 88       	rjmp	8000375a <can_com_tx+0x52>
8000374c:	48 d8       	lddpc	r8,80003780 <can_com_tx+0x78>
8000374e:	30 19       	mov	r9,1
80003750:	f2 0c 09 49 	lsl	r9,r9,r12
80003754:	70 0a       	ld.w	r10,r8[0x0]
80003756:	14 49       	or	r9,r10
80003758:	91 09       	st.w	r8[0x0],r9
8000375a:	48 78       	lddpc	r8,80003774 <can_com_tx+0x6c>
8000375c:	30 09       	mov	r9,0
8000375e:	0c 9a       	mov	r10,r6
80003760:	18 9b       	mov	r11,r12
80003762:	0a 9c       	mov	r12,r5
80003764:	f0 1f 00 08 	mcall	80003784 <can_com_tx+0x7c>
80003768:	e6 14 00 01 	andh	r4,0x1,COH
8000376c:	c0 21       	brne	80003770 <can_com_tx+0x68>
8000376e:	d5 03       	csrf	0x10
80003770:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80003774:	00 00       	add	r0,r0
80003776:	04 60       	and	r0,r2
80003778:	80 00       	ld.sh	r0,r0[0x0]
8000377a:	25 50       	sub	r0,85
8000377c:	00 00       	add	r0,r0
8000377e:	09 ec       	ld.ub	r12,r4[0x6]
80003780:	00 00       	add	r0,r0
80003782:	09 f0       	ld.ub	r0,r4[0x7]
80003784:	80 00       	ld.sh	r0,r0[0x0]
80003786:	26 80       	sub	r0,104

80003788 <can_com_clock_init>:
80003788:	d4 01       	pushm	lr
8000378a:	30 09       	mov	r9,0
8000378c:	12 9a       	mov	r10,r9
8000378e:	30 3b       	mov	r11,3
80003790:	30 1c       	mov	r12,1
80003792:	f0 1f 00 06 	mcall	800037a8 <can_com_clock_init+0x20>
80003796:	30 1c       	mov	r12,1
80003798:	f0 1f 00 05 	mcall	800037ac <can_com_clock_init+0x24>
8000379c:	30 4b       	mov	r11,4
8000379e:	48 5c       	lddpc	r12,800037b0 <can_com_clock_init+0x28>
800037a0:	f0 1f 00 05 	mcall	800037b4 <can_com_clock_init+0x2c>
800037a4:	d8 02       	popm	pc
800037a6:	00 00       	add	r0,r0
800037a8:	80 00       	ld.sh	r0,r0[0x0]
800037aa:	4b 58       	lddpc	r8,8000387c <can_com_callback_wrapper_channel0+0xc>
800037ac:	80 00       	ld.sh	r0,r0[0x0]
800037ae:	4b dc       	lddpc	r12,800038a0 <can_com_callback_wrapper_channel0+0x30>
800037b0:	80 00       	ld.sh	r0,r0[0x0]
800037b2:	a3 a4       	sbr	r4,0x2
800037b4:	80 00       	ld.sh	r0,r0[0x0]
800037b6:	47 d0       	lddsp	r0,sp[0x1f4]

800037b8 <can_com_init>:
800037b8:	d4 21       	pushm	r4-r7,lr
800037ba:	f0 1f 00 10 	mcall	800037f8 <can_com_init+0x40>
800037be:	49 09       	lddpc	r9,800037fc <can_com_init+0x44>
800037c0:	30 0a       	mov	r10,0
800037c2:	49 0b       	lddpc	r11,80003800 <can_com_init+0x48>
800037c4:	14 9c       	mov	r12,r10
800037c6:	f0 1f 00 10 	mcall	80003804 <can_com_init+0x4c>
800037ca:	49 09       	lddpc	r9,80003808 <can_com_init+0x50>
800037cc:	30 0a       	mov	r10,0
800037ce:	49 0b       	lddpc	r11,8000380c <can_com_init+0x54>
800037d0:	30 1c       	mov	r12,1
800037d2:	f0 1f 00 0d 	mcall	80003804 <can_com_init+0x4c>
800037d6:	30 07       	mov	r7,0
800037d8:	0e 95       	mov	r5,r7
800037da:	30 14       	mov	r4,1
800037dc:	30 46       	mov	r6,4
800037de:	0a 9c       	mov	r12,r5
800037e0:	f0 1f 00 0c 	mcall	80003810 <can_com_init+0x58>
800037e4:	08 9c       	mov	r12,r4
800037e6:	f0 1f 00 0b 	mcall	80003810 <can_com_init+0x58>
800037ea:	2f f7       	sub	r7,-1
800037ec:	5c 57       	castu.b	r7
800037ee:	ec 07 18 00 	cp.b	r7,r6
800037f2:	cf 61       	brne	800037de <can_com_init+0x26>
800037f4:	d8 22       	popm	r4-r7,pc
800037f6:	00 00       	add	r0,r0
800037f8:	80 00       	ld.sh	r0,r0[0x0]
800037fa:	37 88       	mov	r8,120
800037fc:	80 00       	ld.sh	r0,r0[0x0]
800037fe:	38 70       	mov	r0,-121
80003800:	00 00       	add	r0,r0
80003802:	53 d8       	stdsp	sp[0xf4],r8
80003804:	80 00       	ld.sh	r0,r0[0x0]
80003806:	29 d8       	sub	r8,-99
80003808:	80 00       	ld.sh	r0,r0[0x0]
8000380a:	38 14       	mov	r4,-127
8000380c:	00 00       	add	r0,r0
8000380e:	52 d0       	stdsp	sp[0xb4],r0
80003810:	80 00       	ld.sh	r0,r0[0x0]
80003812:	36 c4       	mov	r4,108

80003814 <can_com_callback_wrapper_channel1>:
80003814:	eb cd 40 c0 	pushm	r6-r7,lr
80003818:	18 97       	mov	r7,r12
8000381a:	30 16       	mov	r6,1
8000381c:	ec 0c 09 46 	lsl	r6,r6,r12
80003820:	48 f8       	lddpc	r8,8000385c <can_com_callback_wrapper_channel1+0x48>
80003822:	70 08       	ld.w	r8,r8[0x0]
80003824:	ed e8 00 08 	and	r8,r6,r8
80003828:	c0 c0       	breq	80003840 <can_com_callback_wrapper_channel1+0x2c>
8000382a:	48 e8       	lddpc	r8,80003860 <can_com_callback_wrapper_channel1+0x4c>
8000382c:	70 08       	ld.w	r8,r8[0x0]
8000382e:	58 08       	cp.w	r8,0
80003830:	c0 20       	breq	80003834 <can_com_callback_wrapper_channel1+0x20>
80003832:	5d 18       	icall	r8
80003834:	48 a8       	lddpc	r8,8000385c <can_com_callback_wrapper_channel1+0x48>
80003836:	5c d6       	com	r6
80003838:	70 09       	ld.w	r9,r8[0x0]
8000383a:	12 66       	and	r6,r9
8000383c:	91 06       	st.w	r8[0x0],r6
8000383e:	c0 98       	rjmp	80003850 <can_com_callback_wrapper_channel1+0x3c>
80003840:	48 98       	lddpc	r8,80003864 <can_com_callback_wrapper_channel1+0x50>
80003842:	70 08       	ld.w	r8,r8[0x0]
80003844:	58 08       	cp.w	r8,0
80003846:	c0 20       	breq	8000384a <can_com_callback_wrapper_channel1+0x36>
80003848:	5d 18       	icall	r8
8000384a:	30 1c       	mov	r12,1
8000384c:	f0 1f 00 07 	mcall	80003868 <can_com_callback_wrapper_channel1+0x54>
80003850:	0e 9b       	mov	r11,r7
80003852:	30 1c       	mov	r12,1
80003854:	f0 1f 00 06 	mcall	8000386c <can_com_callback_wrapper_channel1+0x58>
80003858:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000385c:	00 00       	add	r0,r0
8000385e:	09 f0       	ld.ub	r0,r4[0x7]
80003860:	00 00       	add	r0,r0
80003862:	52 cc       	stdsp	sp[0xb0],r12
80003864:	00 00       	add	r0,r0
80003866:	52 c8       	stdsp	sp[0xb0],r8
80003868:	80 00       	ld.sh	r0,r0[0x0]
8000386a:	36 c4       	mov	r4,108
8000386c:	80 00       	ld.sh	r0,r0[0x0]
8000386e:	26 20       	sub	r0,98

80003870 <can_com_callback_wrapper_channel0>:
80003870:	eb cd 40 c0 	pushm	r6-r7,lr
80003874:	18 97       	mov	r7,r12
80003876:	30 16       	mov	r6,1
80003878:	ec 0c 09 46 	lsl	r6,r6,r12
8000387c:	48 f8       	lddpc	r8,800038b8 <can_com_callback_wrapper_channel0+0x48>
8000387e:	70 08       	ld.w	r8,r8[0x0]
80003880:	ed e8 00 08 	and	r8,r6,r8
80003884:	c0 c0       	breq	8000389c <can_com_callback_wrapper_channel0+0x2c>
80003886:	48 e8       	lddpc	r8,800038bc <can_com_callback_wrapper_channel0+0x4c>
80003888:	70 08       	ld.w	r8,r8[0x0]
8000388a:	58 08       	cp.w	r8,0
8000388c:	c0 20       	breq	80003890 <can_com_callback_wrapper_channel0+0x20>
8000388e:	5d 18       	icall	r8
80003890:	48 a8       	lddpc	r8,800038b8 <can_com_callback_wrapper_channel0+0x48>
80003892:	5c d6       	com	r6
80003894:	70 09       	ld.w	r9,r8[0x0]
80003896:	12 66       	and	r6,r9
80003898:	91 06       	st.w	r8[0x0],r6
8000389a:	c0 98       	rjmp	800038ac <can_com_callback_wrapper_channel0+0x3c>
8000389c:	48 98       	lddpc	r8,800038c0 <can_com_callback_wrapper_channel0+0x50>
8000389e:	70 08       	ld.w	r8,r8[0x0]
800038a0:	58 08       	cp.w	r8,0
800038a2:	c0 20       	breq	800038a6 <can_com_callback_wrapper_channel0+0x36>
800038a4:	5d 18       	icall	r8
800038a6:	30 0c       	mov	r12,0
800038a8:	f0 1f 00 07 	mcall	800038c4 <can_com_callback_wrapper_channel0+0x54>
800038ac:	0e 9b       	mov	r11,r7
800038ae:	30 0c       	mov	r12,0
800038b0:	f0 1f 00 06 	mcall	800038c8 <can_com_callback_wrapper_channel0+0x58>
800038b4:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800038b8:	00 00       	add	r0,r0
800038ba:	09 ec       	ld.ub	r12,r4[0x6]
800038bc:	00 00       	add	r0,r0
800038be:	53 d4       	stdsp	sp[0xf4],r4
800038c0:	00 00       	add	r0,r0
800038c2:	53 d0       	stdsp	sp[0xf4],r0
800038c4:	80 00       	ld.sh	r0,r0[0x0]
800038c6:	36 c4       	mov	r4,108
800038c8:	80 00       	ld.sh	r0,r0[0x0]
800038ca:	26 20       	sub	r0,98

800038cc <vStartCANTask>:
/*-----------------------------------------------------------*/

static portTASK_FUNCTION_PROTO( canTask, pvParameters );

void vStartCANTask( unsigned portBASE_TYPE uxPriority )
{
800038cc:	d4 01       	pushm	lr
	xTaskCreate(canTask, ( signed char * ) "CAN", canSTACK_SIZE, NULL, uxPriority, ( xTaskHandle * ) NULL );
800038ce:	30 09       	mov	r9,0
800038d0:	1a d9       	st.w	--sp,r9
800038d2:	1a d9       	st.w	--sp,r9
800038d4:	1a d9       	st.w	--sp,r9
800038d6:	18 98       	mov	r8,r12
800038d8:	e0 6a 01 00 	mov	r10,256
800038dc:	48 3b       	lddpc	r11,800038e8 <vStartCANTask+0x1c>
800038de:	48 4c       	lddpc	r12,800038ec <vStartCANTask+0x20>
800038e0:	f0 1f 00 04 	mcall	800038f0 <vStartCANTask+0x24>
800038e4:	2f dd       	sub	sp,-12
}
800038e6:	d8 02       	popm	pc
800038e8:	80 00       	ld.sh	r0,r0[0x0]
800038ea:	a3 c4       	cbr	r4,0x2
800038ec:	80 00       	ld.sh	r0,r0[0x0]
800038ee:	38 f4       	mov	r4,-113
800038f0:	80 00       	ld.sh	r0,r0[0x0]
800038f2:	57 20       	stdsp	sp[0x1c8],r0

800038f4 <canTask>:

static portTASK_FUNCTION( canTask, pvParameters )
{
800038f4:	d4 21       	pushm	r4-r7,lr
800038f6:	20 5d       	sub	sp,20
	//print_dbg(OVERWRITEMOD);
	
	//register callbacks
	can_com_set_rx_callback(0, receive_callback_ch0);
800038f8:	49 8b       	lddpc	r11,80003958 <canTask+0x64>
800038fa:	30 0c       	mov	r12,0
800038fc:	f0 1f 00 18 	mcall	8000395c <canTask+0x68>
	can_com_set_tx_callback(0, send_callback_ch0);
80003900:	49 8b       	lddpc	r11,80003960 <canTask+0x6c>
80003902:	30 0c       	mov	r12,0
80003904:	f0 1f 00 18 	mcall	80003964 <canTask+0x70>
			
	//init can buffer & com
	can_buffer_init();
80003908:	f0 1f 00 18 	mcall	80003968 <canTask+0x74>
	can_com_init();
8000390c:	f0 1f 00 18 	mcall	8000396c <canTask+0x78>
			while(can_buffer_has_next()) {
				
				can_datapacket_t datapacket = can_buffer_remove();
				
				//parse incoming data
				if(datapacket.dir == CAN_BUFFER_DATA_DIR_RX) {
80003910:	30 06       	mov	r6,0
					hmi_parse_data(datapacket);
				}

				buffer_counter++;
80003912:	49 87       	lddpc	r7,80003970 <canTask+0x7c>
		
		if(can_buffer_has_next()) {
		
			while(can_buffer_has_next()) {
				
				can_datapacket_t datapacket = can_buffer_remove();
80003914:	fa c5 ff fd 	sub	r5,sp,-3
				
				//parse incoming data
				if(datapacket.dir == CAN_BUFFER_DATA_DIR_RX) {
					hmi_parse_data(datapacket);
80003918:	31 14       	mov	r4,17
	can_buffer_init();
	can_com_init();
	
	while (1) {
		
		if(can_buffer_has_next()) {
8000391a:	f0 1f 00 17 	mcall	80003974 <canTask+0x80>
8000391e:	cf e0       	breq	8000391a <canTask+0x26>
80003920:	c1 78       	rjmp	8000394e <canTask+0x5a>
		
			while(can_buffer_has_next()) {
				
				can_datapacket_t datapacket = can_buffer_remove();
80003922:	0a 9c       	mov	r12,r5
80003924:	f0 1f 00 15 	mcall	80003978 <canTask+0x84>
				
				//parse incoming data
				if(datapacket.dir == CAN_BUFFER_DATA_DIR_RX) {
80003928:	fb 38 00 0b 	ld.ub	r8,sp[11]
8000392c:	e2 18 00 40 	andl	r8,0x40,COH
80003930:	ec 08 18 00 	cp.b	r8,r6
80003934:	c0 a1       	brne	80003948 <canTask+0x54>
					hmi_parse_data(datapacket);
80003936:	20 5d       	sub	sp,20
80003938:	08 9a       	mov	r10,r4
8000393a:	0a 9b       	mov	r11,r5
8000393c:	1a 9c       	mov	r12,sp
8000393e:	f0 1f 00 10 	mcall	8000397c <canTask+0x88>
80003942:	f0 1f 00 10 	mcall	80003980 <canTask+0x8c>
80003946:	2f bd       	sub	sp,-20
				}

				buffer_counter++;
80003948:	6e 08       	ld.w	r8,r7[0x0]
8000394a:	2f f8       	sub	r8,-1
8000394c:	8f 08       	st.w	r7[0x0],r8
	
	while (1) {
		
		if(can_buffer_has_next()) {
		
			while(can_buffer_has_next()) {
8000394e:	f0 1f 00 0a 	mcall	80003974 <canTask+0x80>
80003952:	ce 40       	breq	8000391a <canTask+0x26>
80003954:	ce 7b       	rjmp	80003922 <canTask+0x2e>
80003956:	00 00       	add	r0,r0
80003958:	80 00       	ld.sh	r0,r0[0x0]
8000395a:	3a 70       	mov	r0,-89
8000395c:	80 00       	ld.sh	r0,r0[0x0]
8000395e:	36 ac       	mov	r12,106
80003960:	80 00       	ld.sh	r0,r0[0x0]
80003962:	39 84       	mov	r4,-104
80003964:	80 00       	ld.sh	r0,r0[0x0]
80003966:	36 94       	mov	r4,105
80003968:	80 00       	ld.sh	r0,r0[0x0]
8000396a:	34 e4       	mov	r4,78
8000396c:	80 00       	ld.sh	r0,r0[0x0]
8000396e:	37 b8       	mov	r8,123
80003970:	00 00       	add	r0,r0
80003972:	0a 0c       	add	r12,r5
80003974:	80 00       	ld.sh	r0,r0[0x0]
80003976:	36 5c       	mov	r12,101
80003978:	80 00       	ld.sh	r0,r0[0x0]
8000397a:	35 b4       	mov	r4,91
8000397c:	80 00       	ld.sh	r0,r0[0x0]
8000397e:	7d 3c       	ld.w	r12,lr[0x4c]
80003980:	80 00       	ld.sh	r0,r0[0x0]
80003982:	3c 70       	mov	r0,-57

80003984 <send_callback_ch0>:
	};
	
	can_buffer_add(datapacket);
}

void send_callback_ch0(U8 handle, U8 event) {
80003984:	d4 21       	pushm	r4-r7,lr
80003986:	20 5d       	sub	sp,20
80003988:	18 95       	mov	r5,r12
	send_ch0_counter++;
8000398a:	4b 28       	lddpc	r8,80003a50 <send_callback_ch0+0xcc>
8000398c:	70 09       	ld.w	r9,r8[0x0]
8000398e:	2f f9       	sub	r9,-1
80003990:	91 09       	st.w	r8[0x0],r9
	
	gpio_tgl_gpio_pin(LED3_GPIO);
80003992:	37 6c       	mov	r12,118
80003994:	f0 1f 00 30 	mcall	80003a54 <send_callback_ch0+0xd0>
	
	// log data
	can_datapacket_t datapacket = {
		.dir = CAN_BUFFER_DATA_DIR_TX,
		.ms = timer_get_ms(),
80003998:	f0 1f 00 30 	mcall	80003a58 <send_callback_ch0+0xd4>
8000399c:	18 96       	mov	r6,r12
		.ch = 0,
		.id = can_get_mob_id(0,handle),
8000399e:	0a 9b       	mov	r11,r5
800039a0:	30 0c       	mov	r12,0
800039a2:	f0 1f 00 2f 	mcall	80003a5c <send_callback_ch0+0xd8>
800039a6:	18 97       	mov	r7,r12
		.dlc = can_get_mob_dlc(0,handle),
800039a8:	0a 9b       	mov	r11,r5
800039aa:	30 0c       	mov	r12,0
800039ac:	f0 1f 00 2d 	mcall	80003a60 <send_callback_ch0+0xdc>
800039b0:	18 94       	mov	r4,r12
		.data = can_get_mob_data(0,handle).u64
800039b2:	0a 9b       	mov	r11,r5
800039b4:	30 0c       	mov	r12,0
800039b6:	f0 1f 00 2c 	mcall	80003a64 <send_callback_ch0+0xe0>
	};
800039ba:	ec 08 16 18 	lsr	r8,r6,0x18
800039be:	ba b8       	st.b	sp[0x3],r8
800039c0:	ec 08 16 10 	lsr	r8,r6,0x10
800039c4:	ba c8       	st.b	sp[0x4],r8
800039c6:	ec 08 16 08 	lsr	r8,r6,0x8
800039ca:	ba d8       	st.b	sp[0x5],r8
800039cc:	ba e6       	st.b	sp[0x6],r6
800039ce:	ee 08 16 18 	lsr	r8,r7,0x18
800039d2:	ba f8       	st.b	sp[0x7],r8
800039d4:	ee 08 16 10 	lsr	r8,r7,0x10
800039d8:	fb 68 00 08 	st.b	sp[8],r8
800039dc:	ee 08 16 08 	lsr	r8,r7,0x8
800039e0:	fb 68 00 09 	st.b	sp[9],r8
800039e4:	fb 67 00 0a 	st.b	sp[10],r7
800039e8:	fb 38 00 0b 	ld.ub	r8,sp[11]
800039ec:	f1 d8 c0 07 	bfextu	r8,r8,0x0,0x7
800039f0:	30 19       	mov	r9,1
800039f2:	f1 d9 d0 c1 	bfins	r8,r9,0x6,0x1
800039f6:	f1 d4 d0 06 	bfins	r8,r4,0x0,0x6
800039fa:	fb 68 00 0b 	st.b	sp[11],r8
800039fe:	f4 08 16 18 	lsr	r8,r10,0x18
80003a02:	fb 68 00 10 	st.b	sp[16],r8
80003a06:	f4 08 16 10 	lsr	r8,r10,0x10
80003a0a:	fb 68 00 11 	st.b	sp[17],r8
80003a0e:	f4 08 16 08 	lsr	r8,r10,0x8
80003a12:	fb 68 00 12 	st.b	sp[18],r8
80003a16:	fb 6a 00 13 	st.b	sp[19],r10
80003a1a:	f6 08 16 18 	lsr	r8,r11,0x18
80003a1e:	fb 68 00 0c 	st.b	sp[12],r8
80003a22:	f6 08 16 10 	lsr	r8,r11,0x10
80003a26:	fb 68 00 0d 	st.b	sp[13],r8
80003a2a:	f6 08 16 08 	lsr	r8,r11,0x8
80003a2e:	fb 68 00 0e 	st.b	sp[14],r8
80003a32:	fb 6b 00 0f 	st.b	sp[15],r11
	can_buffer_add(datapacket);
80003a36:	20 5d       	sub	sp,20
80003a38:	31 1a       	mov	r10,17
80003a3a:	fa cb ff e9 	sub	r11,sp,-23
80003a3e:	1a 9c       	mov	r12,sp
80003a40:	f0 1f 00 0a 	mcall	80003a68 <send_callback_ch0+0xe4>
80003a44:	f0 1f 00 0a 	mcall	80003a6c <send_callback_ch0+0xe8>
80003a48:	2f bd       	sub	sp,-20
}
80003a4a:	2f bd       	sub	sp,-20
80003a4c:	d8 22       	popm	r4-r7,pc
80003a4e:	00 00       	add	r0,r0
80003a50:	00 00       	add	r0,r0
80003a52:	0a 04       	add	r4,r5
80003a54:	80 00       	ld.sh	r0,r0[0x0]
80003a56:	49 7e       	lddpc	lr,80003ab0 <receive_callback_ch0+0x40>
80003a58:	80 00       	ld.sh	r0,r0[0x0]
80003a5a:	45 a8       	lddsp	r8,sp[0x168]
80003a5c:	80 00       	ld.sh	r0,r0[0x0]
80003a5e:	28 e0       	sub	r0,-114
80003a60:	80 00       	ld.sh	r0,r0[0x0]
80003a62:	28 c8       	sub	r8,-116
80003a64:	80 00       	ld.sh	r0,r0[0x0]
80003a66:	28 b0       	sub	r0,-117
80003a68:	80 00       	ld.sh	r0,r0[0x0]
80003a6a:	7d 3c       	ld.w	r12,lr[0x4c]
80003a6c:	80 00       	ld.sh	r0,r0[0x0]
80003a6e:	35 10       	mov	r0,81

80003a70 <receive_callback_ch0>:
volatile U32 receive_ch0_counter = 0;
volatile U32 receive_ch1_counter = 0;
volatile U32 send_ch0_counter = 0;
volatile U32 send_ch1_counter = 0;

void receive_callback_ch0(U8 handle, U8 event) {
80003a70:	d4 21       	pushm	r4-r7,lr
80003a72:	20 5d       	sub	sp,20
80003a74:	18 95       	mov	r5,r12
	receive_ch0_counter++;
80003a76:	4b 08       	lddpc	r8,80003b34 <receive_callback_ch0+0xc4>
80003a78:	70 09       	ld.w	r9,r8[0x0]
80003a7a:	2f f9       	sub	r9,-1
80003a7c:	91 09       	st.w	r8[0x0],r9
			
	gpio_tgl_gpio_pin(LED2_GPIO); 
80003a7e:	34 dc       	mov	r12,77
80003a80:	f0 1f 00 2e 	mcall	80003b38 <receive_callback_ch0+0xc8>
	
	can_datapacket_t datapacket = {
		.dir = CAN_BUFFER_DATA_DIR_RX,
		.ms = timer_get_ms(),
80003a84:	f0 1f 00 2e 	mcall	80003b3c <receive_callback_ch0+0xcc>
80003a88:	18 96       	mov	r6,r12
		.ch = 0,
		.id = can_get_mob_id(0,handle),
80003a8a:	0a 9b       	mov	r11,r5
80003a8c:	30 0c       	mov	r12,0
80003a8e:	f0 1f 00 2d 	mcall	80003b40 <receive_callback_ch0+0xd0>
80003a92:	18 97       	mov	r7,r12
		.dlc = can_get_mob_dlc(0,handle),
80003a94:	0a 9b       	mov	r11,r5
80003a96:	30 0c       	mov	r12,0
80003a98:	f0 1f 00 2b 	mcall	80003b44 <receive_callback_ch0+0xd4>
80003a9c:	18 94       	mov	r4,r12
		.data = can_get_mob_data(0,handle).u64
80003a9e:	0a 9b       	mov	r11,r5
80003aa0:	30 0c       	mov	r12,0
80003aa2:	f0 1f 00 2a 	mcall	80003b48 <receive_callback_ch0+0xd8>
	};
80003aa6:	ec 08 16 18 	lsr	r8,r6,0x18
80003aaa:	ba b8       	st.b	sp[0x3],r8
80003aac:	ec 08 16 10 	lsr	r8,r6,0x10
80003ab0:	ba c8       	st.b	sp[0x4],r8
80003ab2:	ec 08 16 08 	lsr	r8,r6,0x8
80003ab6:	ba d8       	st.b	sp[0x5],r8
80003ab8:	ba e6       	st.b	sp[0x6],r6
80003aba:	ee 08 16 18 	lsr	r8,r7,0x18
80003abe:	ba f8       	st.b	sp[0x7],r8
80003ac0:	ee 08 16 10 	lsr	r8,r7,0x10
80003ac4:	fb 68 00 08 	st.b	sp[8],r8
80003ac8:	ee 08 16 08 	lsr	r8,r7,0x8
80003acc:	fb 68 00 09 	st.b	sp[9],r8
80003ad0:	fb 67 00 0a 	st.b	sp[10],r7
80003ad4:	fb 38 00 0b 	ld.ub	r8,sp[11]
80003ad8:	f1 d8 c0 06 	bfextu	r8,r8,0x0,0x6
80003adc:	f1 d4 d0 06 	bfins	r8,r4,0x0,0x6
80003ae0:	fb 68 00 0b 	st.b	sp[11],r8
80003ae4:	f4 08 16 18 	lsr	r8,r10,0x18
80003ae8:	fb 68 00 10 	st.b	sp[16],r8
80003aec:	f4 08 16 10 	lsr	r8,r10,0x10
80003af0:	fb 68 00 11 	st.b	sp[17],r8
80003af4:	f4 08 16 08 	lsr	r8,r10,0x8
80003af8:	fb 68 00 12 	st.b	sp[18],r8
80003afc:	fb 6a 00 13 	st.b	sp[19],r10
80003b00:	f6 08 16 18 	lsr	r8,r11,0x18
80003b04:	fb 68 00 0c 	st.b	sp[12],r8
80003b08:	f6 08 16 10 	lsr	r8,r11,0x10
80003b0c:	fb 68 00 0d 	st.b	sp[13],r8
80003b10:	f6 08 16 08 	lsr	r8,r11,0x8
80003b14:	fb 68 00 0e 	st.b	sp[14],r8
80003b18:	fb 6b 00 0f 	st.b	sp[15],r11
	
	can_buffer_add(datapacket);
80003b1c:	20 5d       	sub	sp,20
80003b1e:	31 1a       	mov	r10,17
80003b20:	fa cb ff e9 	sub	r11,sp,-23
80003b24:	1a 9c       	mov	r12,sp
80003b26:	f0 1f 00 0a 	mcall	80003b4c <receive_callback_ch0+0xdc>
80003b2a:	f0 1f 00 0a 	mcall	80003b50 <receive_callback_ch0+0xe0>
80003b2e:	2f bd       	sub	sp,-20
}
80003b30:	2f bd       	sub	sp,-20
80003b32:	d8 22       	popm	r4-r7,pc
80003b34:	00 00       	add	r0,r0
80003b36:	0a 08       	add	r8,r5
80003b38:	80 00       	ld.sh	r0,r0[0x0]
80003b3a:	49 7e       	lddpc	lr,80003b94 <hmi_get_reach+0x4>
80003b3c:	80 00       	ld.sh	r0,r0[0x0]
80003b3e:	45 a8       	lddsp	r8,sp[0x168]
80003b40:	80 00       	ld.sh	r0,r0[0x0]
80003b42:	28 e0       	sub	r0,-114
80003b44:	80 00       	ld.sh	r0,r0[0x0]
80003b46:	28 c8       	sub	r8,-116
80003b48:	80 00       	ld.sh	r0,r0[0x0]
80003b4a:	28 b0       	sub	r0,-117
80003b4c:	80 00       	ld.sh	r0,r0[0x0]
80003b4e:	7d 3c       	ld.w	r12,lr[0x4c]
80003b50:	80 00       	ld.sh	r0,r0[0x0]
80003b52:	35 10       	mov	r0,81

80003b54 <hmi_is_on>:
 * HMI getter
 */
bool hmi_is_on()
{
	return hmi_on;
}
80003b54:	48 28       	lddpc	r8,80003b5c <hmi_is_on+0x8>
80003b56:	11 8c       	ld.ub	r12,r8[0x0]
80003b58:	5e fc       	retal	r12
80003b5a:	00 00       	add	r0,r0
80003b5c:	00 00       	add	r0,r0
80003b5e:	0a 1a       	sub	r10,r5

80003b60 <hmi_get_speed>:

U16 hmi_get_speed()
{
	return speed;
}
80003b60:	48 28       	lddpc	r8,80003b68 <hmi_get_speed+0x8>
80003b62:	90 0c       	ld.sh	r12,r8[0x0]
80003b64:	5e fc       	retal	r12
80003b66:	00 00       	add	r0,r0
80003b68:	00 00       	add	r0,r0
80003b6a:	0a 24       	rsub	r4,r5

80003b6c <hmi_get_engine_power>:

U8 hmi_get_engine_power()
{
	return engine_power;
}
80003b6c:	48 28       	lddpc	r8,80003b74 <hmi_get_engine_power+0x8>
80003b6e:	11 8c       	ld.ub	r12,r8[0x0]
80003b70:	5e fc       	retal	r12
80003b72:	00 00       	add	r0,r0
80003b74:	00 00       	add	r0,r0
80003b76:	0a 18       	sub	r8,r5

80003b78 <hmi_get_battery>:

U8 hmi_get_battery()
{
	return battery;
}
80003b78:	48 28       	lddpc	r8,80003b80 <hmi_get_battery+0x8>
80003b7a:	11 8c       	ld.ub	r12,r8[0x0]
80003b7c:	5e fc       	retal	r12
80003b7e:	00 00       	add	r0,r0
80003b80:	00 00       	add	r0,r0
80003b82:	0a 19       	sub	r9,r5

80003b84 <hmi_get_total_distance>:

U32 hmi_get_total_distance()
{
	return total_distance;
}
80003b84:	48 28       	lddpc	r8,80003b8c <hmi_get_total_distance+0x8>
80003b86:	70 0c       	ld.w	r12,r8[0x0]
80003b88:	5e fc       	retal	r12
80003b8a:	00 00       	add	r0,r0
80003b8c:	00 00       	add	r0,r0
80003b8e:	0a 14       	sub	r4,r5

80003b90 <hmi_get_reach>:

U32 hmi_get_reach()
{
	return reach;
}
80003b90:	48 28       	lddpc	r8,80003b98 <hmi_get_reach+0x8>
80003b92:	70 0c       	ld.w	r12,r8[0x0]
80003b94:	5e fc       	retal	r12
80003b96:	00 00       	add	r0,r0
80003b98:	00 00       	add	r0,r0
80003b9a:	0a 10       	sub	r0,r5

80003b9c <hmi_get_total_uptime>:

U32 hmi_get_total_uptime()
{
	return total_uptime;
}
80003b9c:	48 28       	lddpc	r8,80003ba4 <hmi_get_total_uptime+0x8>
80003b9e:	70 0c       	ld.w	r12,r8[0x0]
80003ba0:	5e fc       	retal	r12
80003ba2:	00 00       	add	r0,r0
80003ba4:	00 00       	add	r0,r0
80003ba6:	0a 20       	rsub	r0,r5

80003ba8 <hmi_set_assistance_level>:
/*
 * HMI setter
 */
void hmi_set_assistance_level(assistance_level_t lvl)
{
	assistance_lvl = lvl;
80003ba8:	48 28       	lddpc	r8,80003bb0 <hmi_set_assistance_level+0x8>
80003baa:	91 0c       	st.w	r8[0x0],r12
}
80003bac:	5e fc       	retal	r12
80003bae:	00 00       	add	r0,r0
80003bb0:	00 00       	add	r0,r0
80003bb2:	04 70       	tst	r0,r2

80003bb4 <hmi_set_walk_status>:

void hmi_set_walk_status(hmi_walk_status_t status)
{
	walk_status = status;
80003bb4:	48 28       	lddpc	r8,80003bbc <hmi_set_walk_status+0x8>
80003bb6:	91 0c       	st.w	r8[0x0],r12
}
80003bb8:	5e fc       	retal	r12
80003bba:	00 00       	add	r0,r0
80003bbc:	00 00       	add	r0,r0
80003bbe:	0a 1c       	sub	r12,r5

80003bc0 <hmi_tx_start_sequence>:

/*
 * In fact just the packages with identifiers BD and BE are 
 * necessary to keep the motor/battery of the pedelec alive
 */
void hmi_tx_start_sequence() {
80003bc0:	eb cd 40 c0 	pushm	r6-r7,lr
	
	/*
	 * beware: can interface masks 8-dlc lowest bytes (instead of highest)!
	 */
	
	can_com_tx(0,0x000000BD,0x0117000000000000,8); //necessary
80003bc4:	30 87       	mov	r7,8
80003bc6:	1a d7       	st.w	--sp,r7
80003bc8:	30 08       	mov	r8,0
80003bca:	fc 19 01 17 	movh	r9,0x117
80003bce:	e0 6a 00 bd 	mov	r10,189
80003bd2:	30 0b       	mov	r11,0
80003bd4:	30 0c       	mov	r12,0
80003bd6:	f0 1f 00 26 	mcall	80003c6c <hmi_tx_start_sequence+0xac>
	can_com_tx(0,0x000000BE,0x050107000C010000,6); //necessary
80003bda:	30 66       	mov	r6,6
80003bdc:	1a d6       	st.w	--sp,r6
80003bde:	fc 18 0c 01 	movh	r8,0xc01
80003be2:	e0 69 07 00 	mov	r9,1792
80003be6:	ea 19 05 01 	orh	r9,0x501
80003bea:	e0 6a 00 be 	mov	r10,190
80003bee:	30 0b       	mov	r11,0
80003bf0:	30 0c       	mov	r12,0
80003bf2:	f0 1f 00 1f 	mcall	80003c6c <hmi_tx_start_sequence+0xac>
	can_com_tx(0,0x000000C0,0x4000000000000000,8);
80003bf6:	1a d7       	st.w	--sp,r7
80003bf8:	30 08       	mov	r8,0
80003bfa:	fc 19 40 00 	movh	r9,0x4000
80003bfe:	e0 6a 00 c0 	mov	r10,192
80003c02:	30 0b       	mov	r11,0
80003c04:	30 0c       	mov	r12,0
80003c06:	f0 1f 00 1a 	mcall	80003c6c <hmi_tx_start_sequence+0xac>
	can_com_tx(0,0x000000C0,0x6000000000000000,8);
80003c0a:	1a d7       	st.w	--sp,r7
80003c0c:	30 08       	mov	r8,0
80003c0e:	fc 19 60 00 	movh	r9,0x6000
80003c12:	e0 6a 00 c0 	mov	r10,192
80003c16:	30 0b       	mov	r11,0
80003c18:	30 0c       	mov	r12,0
80003c1a:	f0 1f 00 15 	mcall	80003c6c <hmi_tx_start_sequence+0xac>
	can_com_tx(0,0x0000016A,0x020002FFFF000000,8);
80003c1e:	1a d7       	st.w	--sp,r7
80003c20:	fc 18 ff 00 	movh	r8,0xff00
80003c24:	e0 69 02 ff 	mov	r9,767
80003c28:	ea 19 02 00 	orh	r9,0x200
80003c2c:	e0 6a 01 6a 	mov	r10,362
80003c30:	30 0b       	mov	r11,0
80003c32:	30 0c       	mov	r12,0
80003c34:	f0 1f 00 0e 	mcall	80003c6c <hmi_tx_start_sequence+0xac>
	can_com_tx(0,0x000000BD,0x0117000000000000,8);
80003c38:	1a d7       	st.w	--sp,r7
80003c3a:	30 08       	mov	r8,0
80003c3c:	fc 19 01 17 	movh	r9,0x117
80003c40:	e0 6a 00 bd 	mov	r10,189
80003c44:	30 0b       	mov	r11,0
80003c46:	30 0c       	mov	r12,0
80003c48:	f0 1f 00 09 	mcall	80003c6c <hmi_tx_start_sequence+0xac>
	can_com_tx(0,0x000000BE,0x050107000C010000,6);
80003c4c:	1a d6       	st.w	--sp,r6
80003c4e:	fc 18 0c 01 	movh	r8,0xc01
80003c52:	e0 69 07 00 	mov	r9,1792
80003c56:	ea 19 05 01 	orh	r9,0x501
80003c5a:	e0 6a 00 be 	mov	r10,190
80003c5e:	30 0b       	mov	r11,0
80003c60:	30 0c       	mov	r12,0
80003c62:	f0 1f 00 03 	mcall	80003c6c <hmi_tx_start_sequence+0xac>
80003c66:	2f 9d       	sub	sp,-28
}
80003c68:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003c6c:	80 00       	ld.sh	r0,r0[0x0]
80003c6e:	37 08       	mov	r8,112

80003c70 <hmi_parse_data>:


void hmi_parse_data(can_datapacket_t datapacket) {
80003c70:	eb cd 40 10 	pushm	r4,lr
80003c74:	fa c4 ff f8 	sub	r4,sp,-8
80003c78:	68 18       	ld.w	r8,r4[0x4]
	
	data.u64 = datapacket.data;
80003c7a:	4b b9       	lddpc	r9,80003d64 <hmi_parse_data+0xf4>
80003c7c:	68 3a       	ld.w	r10,r4[0xc]
80003c7e:	e9 3b 00 10 	ld.ub	r11,r4[16]
80003c82:	f7 ea 10 8b 	or	r11,r11,r10<<0x8
80003c86:	68 2c       	ld.w	r12,r4[0x8]
80003c88:	b9 8a       	lsr	r10,0x18
80003c8a:	f5 ec 10 8a 	or	r10,r10,r12<<0x8
80003c8e:	93 0a       	st.w	r9[0x0],r10
80003c90:	93 1b       	st.w	r9[0x4],r11
	
	switch (datapacket.id)
80003c92:	e0 48 00 81 	cp.w	r8,129
80003c96:	e0 8b 00 0e 	brhi	80003cb2 <hmi_parse_data+0x42>
80003c9a:	e0 48 00 80 	cp.w	r8,128
80003c9e:	c1 d2       	brcc	80003cd8 <hmi_parse_data+0x68>
80003ca0:	e0 48 00 61 	cp.w	r8,97
80003ca4:	c2 b0       	breq	80003cfa <hmi_parse_data+0x8a>
80003ca6:	c5 d3       	brcs	80003d60 <hmi_parse_data+0xf0>
80003ca8:	27 28       	sub	r8,114
80003caa:	58 18       	cp.w	r8,1
80003cac:	e0 8b 00 5a 	brhi	80003d60 <hmi_parse_data+0xf0>
80003cb0:	c1 48       	rjmp	80003cd8 <hmi_parse_data+0x68>
80003cb2:	e0 48 01 11 	cp.w	r8,273
80003cb6:	c4 20       	breq	80003d3a <hmi_parse_data+0xca>
80003cb8:	e0 8b 00 09 	brhi	80003cca <hmi_parse_data+0x5a>
80003cbc:	e0 48 00 d1 	cp.w	r8,209
80003cc0:	c2 c0       	breq	80003d18 <hmi_parse_data+0xa8>
80003cc2:	e0 48 00 d4 	cp.w	r8,212
80003cc6:	c4 d1       	brne	80003d60 <hmi_parse_data+0xf0>
80003cc8:	c2 e8       	rjmp	80003d24 <hmi_parse_data+0xb4>
80003cca:	e0 48 02 02 	cp.w	r8,514
80003cce:	c3 c0       	breq	80003d46 <hmi_parse_data+0xd6>
80003cd0:	e0 48 02 03 	cp.w	r8,515
80003cd4:	c4 61       	brne	80003d60 <hmi_parse_data+0xf0>
80003cd6:	c4 18       	rjmp	80003d58 <hmi_parse_data+0xe8>
		case 0x00000072:
		case 0x00000073:
		case 0x00000080:
		case 0x00000081:
		{
			if(!hmi_on) {
80003cd8:	4a 48       	lddpc	r8,80003d68 <hmi_parse_data+0xf8>
80003cda:	11 89       	ld.ub	r9,r8[0x0]
80003cdc:	30 08       	mov	r8,0
80003cde:	f0 09 18 00 	cp.b	r9,r8
80003ce2:	c3 f1       	brne	80003d60 <hmi_parse_data+0xf0>
#ifdef HMI_COM_DEBUG
				print_dbg(CLEARSCR "HMI On" CRLF);
#endif				
				hmi_tx_start_sequence();
80003ce4:	f0 1f 00 22 	mcall	80003d6c <hmi_parse_data+0xfc>
				timer_set_callback(0,hmi_tx_cyclic);	//register cyclic tx
80003ce8:	4a 2b       	lddpc	r11,80003d70 <hmi_parse_data+0x100>
80003cea:	30 0c       	mov	r12,0
80003cec:	f0 1f 00 22 	mcall	80003d74 <hmi_parse_data+0x104>
				hmi_on = true;
80003cf0:	30 19       	mov	r9,1
80003cf2:	49 e8       	lddpc	r8,80003d68 <hmi_parse_data+0xf8>
80003cf4:	b0 89       	st.b	r8[0x0],r9
80003cf6:	e3 cd 80 10 	ldm	sp++,r4,pc
		}
		break;
		
		case 0x61:
		{
			if(hmi_on) {
80003cfa:	49 c8       	lddpc	r8,80003d68 <hmi_parse_data+0xf8>
80003cfc:	11 89       	ld.ub	r9,r8[0x0]
80003cfe:	30 08       	mov	r8,0
80003d00:	f0 09 18 00 	cp.b	r9,r8
80003d04:	c2 e0       	breq	80003d60 <hmi_parse_data+0xf0>
#ifdef HMI_COM_DEBUG
				print_dbg(CLEARSCR "HMI Off");
#endif				
				timer_set_callback(0,NULL);	//unregister cyclic tx
80003d06:	30 0b       	mov	r11,0
80003d08:	16 9c       	mov	r12,r11
80003d0a:	f0 1f 00 1b 	mcall	80003d74 <hmi_parse_data+0x104>
				hmi_on = false;
80003d0e:	30 09       	mov	r9,0
80003d10:	49 68       	lddpc	r8,80003d68 <hmi_parse_data+0xf8>
80003d12:	b0 89       	st.b	r8[0x0],r9
80003d14:	e3 cd 80 10 	ldm	sp++,r4,pc
			}
		}
		break;
		
		case 0xD1: speed = data.u16[0];
80003d18:	49 38       	lddpc	r8,80003d64 <hmi_parse_data+0xf4>
80003d1a:	90 09       	ld.sh	r9,r8[0x0]
80003d1c:	49 78       	lddpc	r8,80003d78 <hmi_parse_data+0x108>
80003d1e:	b0 09       	st.h	r8[0x0],r9
		break;
80003d20:	e3 cd 80 10 	ldm	sp++,r4,pc
		
		case 0xD4: engine_power = (data.u16[0] * 100) / data.u16[1];
80003d24:	49 08       	lddpc	r8,80003d64 <hmi_parse_data+0xf4>
80003d26:	90 8b       	ld.uh	r11,r8[0x0]
80003d28:	f6 0b 10 64 	mul	r11,r11,100
80003d2c:	90 98       	ld.uh	r8,r8[0x2]
80003d2e:	f6 08 0c 0a 	divs	r10,r11,r8
80003d32:	49 38       	lddpc	r8,80003d7c <hmi_parse_data+0x10c>
80003d34:	b0 8a       	st.b	r8[0x0],r10
		break;
80003d36:	e3 cd 80 10 	ldm	sp++,r4,pc
		
		case 0x111: battery = data.u8[6];
80003d3a:	48 b8       	lddpc	r8,80003d64 <hmi_parse_data+0xf4>
80003d3c:	11 e9       	ld.ub	r9,r8[0x6]
80003d3e:	49 18       	lddpc	r8,80003d80 <hmi_parse_data+0x110>
80003d40:	b0 89       	st.b	r8[0x0],r9
		break;
80003d42:	e3 cd 80 10 	ldm	sp++,r4,pc
		
		case 0x202:
		{
			total_distance = data.u32[0];
80003d46:	48 88       	lddpc	r8,80003d64 <hmi_parse_data+0xf4>
80003d48:	70 0a       	ld.w	r10,r8[0x0]
80003d4a:	48 f9       	lddpc	r9,80003d84 <hmi_parse_data+0x114>
80003d4c:	93 0a       	st.w	r9[0x0],r10
			reach = data.u32[1];
80003d4e:	70 19       	ld.w	r9,r8[0x4]
80003d50:	48 e8       	lddpc	r8,80003d88 <hmi_parse_data+0x118>
80003d52:	91 09       	st.w	r8[0x0],r9
		}
		break;
80003d54:	e3 cd 80 10 	ldm	sp++,r4,pc
		
		case 0x203: total_uptime = data.u32[0];
80003d58:	48 38       	lddpc	r8,80003d64 <hmi_parse_data+0xf4>
80003d5a:	70 09       	ld.w	r9,r8[0x0]
80003d5c:	48 c8       	lddpc	r8,80003d8c <hmi_parse_data+0x11c>
80003d5e:	91 09       	st.w	r8[0x0],r9
80003d60:	e3 cd 80 10 	ldm	sp++,r4,pc
80003d64:	00 00       	add	r0,r0
80003d66:	54 d8       	stdsp	sp[0x134],r8
80003d68:	00 00       	add	r0,r0
80003d6a:	0a 1a       	sub	r10,r5
80003d6c:	80 00       	ld.sh	r0,r0[0x0]
80003d6e:	3b c0       	mov	r0,-68
80003d70:	80 00       	ld.sh	r0,r0[0x0]
80003d72:	3e 78       	mov	r8,-25
80003d74:	80 00       	ld.sh	r0,r0[0x0]
80003d76:	45 84       	lddsp	r4,sp[0x160]
80003d78:	00 00       	add	r0,r0
80003d7a:	0a 24       	rsub	r4,r5
80003d7c:	00 00       	add	r0,r0
80003d7e:	0a 18       	sub	r8,r5
80003d80:	00 00       	add	r0,r0
80003d82:	0a 19       	sub	r9,r5
80003d84:	00 00       	add	r0,r0
80003d86:	0a 14       	sub	r4,r5
80003d88:	00 00       	add	r0,r0
80003d8a:	0a 10       	sub	r0,r5
80003d8c:	00 00       	add	r0,r0
80003d8e:	0a 20       	rsub	r0,r5

80003d90 <hmi_tx_assistance_lvl>:
	} else if(walk_status == HMI_WALK_STATUS_OFF) {
		can_com_tx(0,0x00000037,0x0000000000000000,3);
	}
}

void hmi_tx_assistance_lvl() {
80003d90:	d4 01       	pushm	lr
	
	/*
	 * beware: can interface masks 8-dlc lowest bytes (instead of highest)!
	 */
	
	switch(assistance_lvl)
80003d92:	4a 78       	lddpc	r8,80003e2c <hmi_tx_assistance_lvl+0x9c>
80003d94:	70 08       	ld.w	r8,r8[0x0]
80003d96:	58 38       	cp.w	r8,3
80003d98:	c1 90       	breq	80003dca <hmi_tx_assistance_lvl+0x3a>
80003d9a:	e0 8b 00 07 	brhi	80003da8 <hmi_tx_assistance_lvl+0x18>
80003d9e:	58 18       	cp.w	r8,1
80003da0:	c2 d0       	breq	80003dfa <hmi_tx_assistance_lvl+0x6a>
80003da2:	58 28       	cp.w	r8,2
80003da4:	c4 21       	brne	80003e28 <hmi_tx_assistance_lvl+0x98>
80003da6:	c1 e8       	rjmp	80003de2 <hmi_tx_assistance_lvl+0x52>
80003da8:	58 48       	cp.w	r8,4
80003daa:	c0 40       	breq	80003db2 <hmi_tx_assistance_lvl+0x22>
80003dac:	58 98       	cp.w	r8,9
80003dae:	c3 d1       	brne	80003e28 <hmi_tx_assistance_lvl+0x98>
80003db0:	c3 18       	rjmp	80003e12 <hmi_tx_assistance_lvl+0x82>
	{
		case HMI_ASSISTANCE_LVL_TURBO: can_com_tx(0,0x0000003B,0x0400000000000000,4);
80003db2:	30 48       	mov	r8,4
80003db4:	1a d8       	st.w	--sp,r8
80003db6:	30 08       	mov	r8,0
80003db8:	fc 19 04 00 	movh	r9,0x400
80003dbc:	33 ba       	mov	r10,59
80003dbe:	30 0b       	mov	r11,0
80003dc0:	30 0c       	mov	r12,0
80003dc2:	f0 1f 00 1c 	mcall	80003e30 <hmi_tx_assistance_lvl+0xa0>
		break;
80003dc6:	2f fd       	sub	sp,-4
80003dc8:	d8 02       	popm	pc
		case HMI_ASSISTANCE_LVL_SPORT: can_com_tx(0,0x0000003B,0x0300000000000000,4);
80003dca:	30 48       	mov	r8,4
80003dcc:	1a d8       	st.w	--sp,r8
80003dce:	30 08       	mov	r8,0
80003dd0:	fc 19 03 00 	movh	r9,0x300
80003dd4:	33 ba       	mov	r10,59
80003dd6:	30 0b       	mov	r11,0
80003dd8:	30 0c       	mov	r12,0
80003dda:	f0 1f 00 16 	mcall	80003e30 <hmi_tx_assistance_lvl+0xa0>
		break;
80003dde:	2f fd       	sub	sp,-4
80003de0:	d8 02       	popm	pc
		case HMI_ASSISTANCE_LVL_TOUR: can_com_tx(0,0x0000003B,0x0200000000000000,4);
80003de2:	30 48       	mov	r8,4
80003de4:	1a d8       	st.w	--sp,r8
80003de6:	30 08       	mov	r8,0
80003de8:	fc 19 02 00 	movh	r9,0x200
80003dec:	33 ba       	mov	r10,59
80003dee:	30 0b       	mov	r11,0
80003df0:	30 0c       	mov	r12,0
80003df2:	f0 1f 00 10 	mcall	80003e30 <hmi_tx_assistance_lvl+0xa0>
		break;
80003df6:	2f fd       	sub	sp,-4
80003df8:	d8 02       	popm	pc
		case HMI_ASSISTANCE_LVL_ECO: can_com_tx(0,0x0000003B,0x0100000000000000,4);
80003dfa:	30 48       	mov	r8,4
80003dfc:	1a d8       	st.w	--sp,r8
80003dfe:	30 08       	mov	r8,0
80003e00:	fc 19 01 00 	movh	r9,0x100
80003e04:	33 ba       	mov	r10,59
80003e06:	30 0b       	mov	r11,0
80003e08:	30 0c       	mov	r12,0
80003e0a:	f0 1f 00 0a 	mcall	80003e30 <hmi_tx_assistance_lvl+0xa0>
		break;
80003e0e:	2f fd       	sub	sp,-4
80003e10:	d8 02       	popm	pc
		case HMI_ASSISTANCE_LVL_OFF: can_com_tx(0,0x0000003B,0x0900000000000000,4);
80003e12:	30 48       	mov	r8,4
80003e14:	1a d8       	st.w	--sp,r8
80003e16:	30 08       	mov	r8,0
80003e18:	fc 19 09 00 	movh	r9,0x900
80003e1c:	33 ba       	mov	r10,59
80003e1e:	30 0b       	mov	r11,0
80003e20:	30 0c       	mov	r12,0
80003e22:	f0 1f 00 04 	mcall	80003e30 <hmi_tx_assistance_lvl+0xa0>
80003e26:	2f fd       	sub	sp,-4
80003e28:	d8 02       	popm	pc
80003e2a:	00 00       	add	r0,r0
80003e2c:	00 00       	add	r0,r0
80003e2e:	04 70       	tst	r0,r2
80003e30:	80 00       	ld.sh	r0,r0[0x0]
80003e32:	37 08       	mov	r8,112

80003e34 <hmi_tx_walk_status>:
	
	print_dbg(CLEARLCR);
}
#endif

void hmi_tx_walk_status() {
80003e34:	d4 01       	pushm	lr
	
	/*
	 * beware: can interface masks 8-dlc lowest bytes (instead of highest)!
	 */
	
	if(walk_status == HMI_WALK_STATUS_ON) {
80003e36:	48 f8       	lddpc	r8,80003e70 <hmi_tx_walk_status+0x3c>
80003e38:	70 08       	ld.w	r8,r8[0x0]
80003e3a:	58 18       	cp.w	r8,1
80003e3c:	c0 d1       	brne	80003e56 <hmi_tx_walk_status+0x22>
 		can_com_tx(0,0x00000037,0x0000010000000000,3);
80003e3e:	30 38       	mov	r8,3
80003e40:	1a d8       	st.w	--sp,r8
80003e42:	30 08       	mov	r8,0
80003e44:	e0 69 01 00 	mov	r9,256
80003e48:	33 7a       	mov	r10,55
80003e4a:	30 0b       	mov	r11,0
80003e4c:	30 0c       	mov	r12,0
80003e4e:	f0 1f 00 0a 	mcall	80003e74 <hmi_tx_walk_status+0x40>
80003e52:	2f fd       	sub	sp,-4
80003e54:	d8 02       	popm	pc
	} else if(walk_status == HMI_WALK_STATUS_OFF) {
80003e56:	58 08       	cp.w	r8,0
80003e58:	c0 b1       	brne	80003e6e <hmi_tx_walk_status+0x3a>
		can_com_tx(0,0x00000037,0x0000000000000000,3);
80003e5a:	30 38       	mov	r8,3
80003e5c:	1a d8       	st.w	--sp,r8
80003e5e:	30 08       	mov	r8,0
80003e60:	30 09       	mov	r9,0
80003e62:	33 7a       	mov	r10,55
80003e64:	30 0b       	mov	r11,0
80003e66:	30 0c       	mov	r12,0
80003e68:	f0 1f 00 03 	mcall	80003e74 <hmi_tx_walk_status+0x40>
80003e6c:	2f fd       	sub	sp,-4
80003e6e:	d8 02       	popm	pc
80003e70:	00 00       	add	r0,r0
80003e72:	0a 1c       	sub	r12,r5
80003e74:	80 00       	ld.sh	r0,r0[0x0]
80003e76:	37 08       	mov	r8,112

80003e78 <hmi_tx_cyclic>:
	}
}

volatile U32 Id = 0;

void hmi_tx_cyclic(U32 ms) {
80003e78:	eb cd 40 c0 	pushm	r6-r7,lr
80003e7c:	18 97       	mov	r7,r12
	
	if(ms % 500 == 0) {
80003e7e:	e0 69 4d d3 	mov	r9,19923
80003e82:	ea 19 10 62 	orh	r9,0x1062
80003e86:	f8 09 06 48 	mulu.d	r8,r12,r9
80003e8a:	f2 06 16 05 	lsr	r6,r9,0x5
80003e8e:	e0 68 01 f4 	mov	r8,500
80003e92:	b1 36       	mul	r6,r8
80003e94:	f8 06 01 06 	sub	r6,r12,r6
80003e98:	c3 21       	brne	80003efc <hmi_tx_cyclic+0x84>
		if( assistance_lvl != HMI_ASSISTANCE_LVL_OFF && !gpio_get_pin_value(GPIO_PUSH_BUTTON_0)) {
80003e9a:	4c 38       	lddpc	r8,80003fa4 <hmi_tx_cyclic+0x12c>
80003e9c:	70 08       	ld.w	r8,r8[0x0]
80003e9e:	58 98       	cp.w	r8,9
80003ea0:	c1 90       	breq	80003ed2 <hmi_tx_cyclic+0x5a>
80003ea2:	30 1c       	mov	r12,1
80003ea4:	f0 1f 00 41 	mcall	80003fa8 <hmi_tx_cyclic+0x130>
80003ea8:	c1 11       	brne	80003eca <hmi_tx_cyclic+0x52>
			switch(assistance_lvl)
80003eaa:	4b f8       	lddpc	r8,80003fa4 <hmi_tx_cyclic+0x12c>
80003eac:	70 08       	ld.w	r8,r8[0x0]
80003eae:	58 18       	cp.w	r8,1
80003eb0:	c0 90       	breq	80003ec2 <hmi_tx_cyclic+0x4a>
80003eb2:	c2 53       	brcs	80003efc <hmi_tx_cyclic+0x84>
80003eb4:	58 48       	cp.w	r8,4
80003eb6:	e0 8b 00 23 	brhi	80003efc <hmi_tx_cyclic+0x84>
			{
				case HMI_ASSISTANCE_LVL_TURBO:
				case HMI_ASSISTANCE_LVL_SPORT:
				case HMI_ASSISTANCE_LVL_TOUR:
					assistance_lvl--;
80003eba:	20 18       	sub	r8,1
80003ebc:	4b a9       	lddpc	r9,80003fa4 <hmi_tx_cyclic+0x12c>
80003ebe:	93 08       	st.w	r9[0x0],r8
				break;
80003ec0:	c1 e8       	rjmp	80003efc <hmi_tx_cyclic+0x84>
				case HMI_ASSISTANCE_LVL_ECO: assistance_lvl = 9;
80003ec2:	30 99       	mov	r9,9
80003ec4:	4b 88       	lddpc	r8,80003fa4 <hmi_tx_cyclic+0x12c>
80003ec6:	91 09       	st.w	r8[0x0],r9
80003ec8:	c1 a8       	rjmp	80003efc <hmi_tx_cyclic+0x84>
				break;
			}
		} else if( assistance_lvl != HMI_ASSISTANCE_LVL_TURBO && !gpio_get_pin_value(GPIO_PUSH_BUTTON_1)) {
80003eca:	4b 78       	lddpc	r8,80003fa4 <hmi_tx_cyclic+0x12c>
80003ecc:	70 08       	ld.w	r8,r8[0x0]
80003ece:	58 48       	cp.w	r8,4
80003ed0:	c1 60       	breq	80003efc <hmi_tx_cyclic+0x84>
80003ed2:	30 1c       	mov	r12,1
80003ed4:	f0 1f 00 35 	mcall	80003fa8 <hmi_tx_cyclic+0x130>
80003ed8:	c1 21       	brne	80003efc <hmi_tx_cyclic+0x84>
			switch(assistance_lvl)
80003eda:	4b 38       	lddpc	r8,80003fa4 <hmi_tx_cyclic+0x12c>
80003edc:	70 08       	ld.w	r8,r8[0x0]
80003ede:	58 18       	cp.w	r8,1
80003ee0:	c0 e3       	brcs	80003efc <hmi_tx_cyclic+0x84>
80003ee2:	58 38       	cp.w	r8,3
80003ee4:	e0 88 00 05 	brls	80003eee <hmi_tx_cyclic+0x76>
80003ee8:	58 98       	cp.w	r8,9
80003eea:	c0 91       	brne	80003efc <hmi_tx_cyclic+0x84>
80003eec:	c0 58       	rjmp	80003ef6 <hmi_tx_cyclic+0x7e>
			{
				case HMI_ASSISTANCE_LVL_SPORT:
				case HMI_ASSISTANCE_LVL_TOUR:
				case HMI_ASSISTANCE_LVL_ECO:
					assistance_lvl++;
80003eee:	2f f8       	sub	r8,-1
80003ef0:	4a d9       	lddpc	r9,80003fa4 <hmi_tx_cyclic+0x12c>
80003ef2:	93 08       	st.w	r9[0x0],r8
				break;
80003ef4:	c0 48       	rjmp	80003efc <hmi_tx_cyclic+0x84>
				case HMI_ASSISTANCE_LVL_OFF: assistance_lvl = 1;
80003ef6:	30 19       	mov	r9,1
80003ef8:	4a b8       	lddpc	r8,80003fa4 <hmi_tx_cyclic+0x12c>
80003efa:	91 09       	st.w	r8[0x0],r9
	if(ms % 100 == 0) {
		hmi_print_dbg();
	}
#endif

	if(ms % 100 == 0) {	
80003efc:	e0 69 85 1f 	mov	r9,34079
80003f00:	ea 19 51 eb 	orh	r9,0x51eb
80003f04:	ee 09 06 48 	mulu.d	r8,r7,r9
80003f08:	f2 08 16 05 	lsr	r8,r9,0x5
80003f0c:	f0 08 10 64 	mul	r8,r8,100
80003f10:	ee 08 01 08 	sub	r8,r7,r8
80003f14:	c0 51       	brne	80003f1e <hmi_tx_cyclic+0xa6>
		hmi_tx_walk_status();
80003f16:	f0 1f 00 26 	mcall	80003fac <hmi_tx_cyclic+0x134>
		hmi_tx_assistance_lvl();
80003f1a:	f0 1f 00 26 	mcall	80003fb0 <hmi_tx_cyclic+0x138>
	}
	if(ms % 200 == 0) {
80003f1e:	e0 69 85 1f 	mov	r9,34079
80003f22:	ea 19 51 eb 	orh	r9,0x51eb
80003f26:	ee 09 06 48 	mulu.d	r8,r7,r9
80003f2a:	f2 08 16 06 	lsr	r8,r9,0x6
80003f2e:	e0 69 00 c8 	mov	r9,200
80003f32:	b3 38       	mul	r8,r9
80003f34:	ee 08 01 08 	sub	r8,r7,r8
80003f38:	c0 c1       	brne	80003f50 <hmi_tx_cyclic+0xd8>
		can_com_tx(0,0x0000009B,0x0000000000000000,1);
80003f3a:	30 18       	mov	r8,1
80003f3c:	1a d8       	st.w	--sp,r8
80003f3e:	30 08       	mov	r8,0
80003f40:	30 09       	mov	r9,0
80003f42:	e0 6a 00 9b 	mov	r10,155
80003f46:	30 0b       	mov	r11,0
80003f48:	30 0c       	mov	r12,0
80003f4a:	f0 1f 00 1b 	mcall	80003fb4 <hmi_tx_cyclic+0x13c>
80003f4e:	2f fd       	sub	sp,-4
	}
	if(ms % 500 == 0) {
80003f50:	58 06       	cp.w	r6,0
80003f52:	c0 c1       	brne	80003f6a <hmi_tx_cyclic+0xf2>
		can_com_tx(0,0x00000211,0x0000000000000000,8);
80003f54:	30 88       	mov	r8,8
80003f56:	1a d8       	st.w	--sp,r8
80003f58:	30 08       	mov	r8,0
80003f5a:	30 09       	mov	r9,0
80003f5c:	e0 6a 02 11 	mov	r10,529
80003f60:	30 0b       	mov	r11,0
80003f62:	30 0c       	mov	r12,0
80003f64:	f0 1f 00 14 	mcall	80003fb4 <hmi_tx_cyclic+0x13c>
80003f68:	2f fd       	sub	sp,-4
	}
	if(ms % 2000 == 0) {
80003f6a:	e0 69 4d d3 	mov	r9,19923
80003f6e:	ea 19 10 62 	orh	r9,0x1062
80003f72:	ee 09 06 48 	mulu.d	r8,r7,r9
80003f76:	f2 08 16 07 	lsr	r8,r9,0x7
80003f7a:	e0 69 07 d0 	mov	r9,2000
80003f7e:	b3 38       	mul	r8,r9
80003f80:	10 17       	sub	r7,r8
80003f82:	c0 f1       	brne	80003fa0 <hmi_tx_cyclic+0x128>
		can_com_tx(0,0x00000351,0x3008140000000000,8);
80003f84:	30 88       	mov	r8,8
80003f86:	1a d8       	st.w	--sp,r8
80003f88:	30 08       	mov	r8,0
80003f8a:	e0 69 14 00 	mov	r9,5120
80003f8e:	ea 19 30 08 	orh	r9,0x3008
80003f92:	e0 6a 03 51 	mov	r10,849
80003f96:	30 0b       	mov	r11,0
80003f98:	30 0c       	mov	r12,0
80003f9a:	f0 1f 00 07 	mcall	80003fb4 <hmi_tx_cyclic+0x13c>
80003f9e:	2f fd       	sub	sp,-4
80003fa0:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003fa4:	00 00       	add	r0,r0
80003fa6:	04 70       	tst	r0,r2
80003fa8:	80 00       	ld.sh	r0,r0[0x0]
80003faa:	49 30       	lddpc	r0,80003ff4 <hmi_get_acelerometer+0x3c>
80003fac:	80 00       	ld.sh	r0,r0[0x0]
80003fae:	3e 34       	mov	r4,-29
80003fb0:	80 00       	ld.sh	r0,r0[0x0]
80003fb2:	3d 90       	mov	r0,-39
80003fb4:	80 00       	ld.sh	r0,r0[0x0]
80003fb6:	37 08       	mov	r8,112

80003fb8 <hmi_get_acelerometer>:
	return (float) sqrt(pow(velX,2) + pow(velY,2) + pow(velZ,2));
}

//uint8_t* hmi_get_acelerometer(void)
void hmi_get_acelerometer(void)
{
80003fb8:	eb cd 40 80 	pushm	r7,lr
80003fbc:	20 1d       	sub	sp,4
	int i = 0;
	for (i = 0; i<6; i++){
		rxdata_new[i] =0;
80003fbe:	4d 88       	lddpc	r8,8000411c <hmi_get_acelerometer+0x164>
80003fc0:	30 09       	mov	r9,0
80003fc2:	b0 89       	st.b	r8[0x0],r9
80003fc4:	b0 99       	st.b	r8[0x1],r9
80003fc6:	b0 a9       	st.b	r8[0x2],r9
80003fc8:	b0 b9       	st.b	r8[0x3],r9
80003fca:	b0 c9       	st.b	r8[0x4],r9
80003fcc:	b0 d9       	st.b	r8[0x5],r9
	// Send the data to slave (ie = AT45DBX_CMDC_RD_STATUS_REG)
	txdata=ACCEL_XOUT_H;
	//spi_write(IMU_SPI,0x1C);
		
	//Select given device on the SPI bus
	spi_selectChip(IMU_SPI, SPI_SLAVECHIP_NUMBER);
80003fce:	30 0b       	mov	r11,0
80003fd0:	fc 7c 18 00 	mov	r12,-190464
80003fd4:	f0 1f 00 53 	mcall	80004120 <hmi_get_acelerometer+0x168>
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(volatile avr32_spi_t *spi, uint16_t data)
{
	spi->tdr = data << AVR32_SPI_TDR_TD_OFFSET;
80003fd8:	e0 69 bb 00 	mov	r9,47872
80003fdc:	fc 78 18 00 	mov	r8,-190464
80003fe0:	91 39       	st.w	r8[0xc],r9
 *   \retval 1  All transmissions complete.
 *   \retval 0  Transmissions not complete.
 */
static inline bool spi_is_tx_empty(volatile avr32_spi_t *spi)
{
	return (spi->sr & AVR32_SPI_SR_TXEMPTY_MASK) != 0;
80003fe2:	10 99       	mov	r9,r8
80003fe4:	72 48       	ld.w	r8,r9[0x10]
		
	//return reverse_byte((uint8_t)rxdata);
	spi_put(IMU_SPI,txdata);
	//Wait for a complete transmission
		
	while(!spi_is_tx_empty(IMU_SPI));
80003fe6:	e2 18 02 00 	andl	r8,0x200,COH
80003fea:	cf d0       	breq	80003fe4 <hmi_get_acelerometer+0x2c>
		
	spi_read(IMU_SPI,&rxdata);
80003fec:	fa cb ff fe 	sub	r11,sp,-2
80003ff0:	fc 7c 18 00 	mov	r12,-190464
80003ff4:	f0 1f 00 4c 	mcall	80004124 <hmi_get_acelerometer+0x16c>
 * \return The data byte
 *
 */
static inline uint16_t spi_get(volatile avr32_spi_t *spi)
{
	return (spi->rdr >> AVR32_SPI_RDR_RD_OFFSET);
80003ff8:	fc 77 18 00 	mov	r7,-190464
80003ffc:	6e 29       	ld.w	r9,r7[0x8]
	//Now simply read the data in the receive register
	rxdata_new[0]=spi_get(IMU_SPI);
80003ffe:	4c 88       	lddpc	r8,8000411c <hmi_get_acelerometer+0x164>
80004000:	b0 89       	st.b	r8[0x0],r9
		
	// Deselect the slave
	spi_unselectChip(IMU_SPI,SPI_SLAVECHIP_NUMBER);
80004002:	30 0b       	mov	r11,0
80004004:	0e 9c       	mov	r12,r7
80004006:	f0 1f 00 49 	mcall	80004128 <hmi_get_acelerometer+0x170>
	// Send the data to slave (ie = AT45DBX_CMDC_RD_STATUS_REG)
	txdata=ACCEL_XOUT_L;
	//spi_write(IMU_SPI,0x1C);
		
	//Select given device on the SPI bus
	spi_selectChip(IMU_SPI, SPI_SLAVECHIP_NUMBER);
8000400a:	30 0b       	mov	r11,0
8000400c:	0e 9c       	mov	r12,r7
8000400e:	f0 1f 00 45 	mcall	80004120 <hmi_get_acelerometer+0x168>
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(volatile avr32_spi_t *spi, uint16_t data)
{
	spi->tdr = data << AVR32_SPI_TDR_TD_OFFSET;
80004012:	e0 68 bc 00 	mov	r8,48128
80004016:	8f 38       	st.w	r7[0xc],r8
 *   \retval 1  All transmissions complete.
 *   \retval 0  Transmissions not complete.
 */
static inline bool spi_is_tx_empty(volatile avr32_spi_t *spi)
{
	return (spi->sr & AVR32_SPI_SR_TXEMPTY_MASK) != 0;
80004018:	0e 99       	mov	r9,r7
8000401a:	72 48       	ld.w	r8,r9[0x10]
		
	//return reverse_byte((uint8_t)rxdata);
	spi_put(IMU_SPI,txdata);
	//Wait for a complete transmission
	while(!spi_is_tx_empty(IMU_SPI));
8000401c:	e2 18 02 00 	andl	r8,0x200,COH
80004020:	cf d0       	breq	8000401a <hmi_get_acelerometer+0x62>
		
	spi_read(IMU_SPI,&rxdata);
80004022:	fa cb ff fe 	sub	r11,sp,-2
80004026:	fc 7c 18 00 	mov	r12,-190464
8000402a:	f0 1f 00 3f 	mcall	80004124 <hmi_get_acelerometer+0x16c>
 * \return The data byte
 *
 */
static inline uint16_t spi_get(volatile avr32_spi_t *spi)
{
	return (spi->rdr >> AVR32_SPI_RDR_RD_OFFSET);
8000402e:	fc 77 18 00 	mov	r7,-190464
80004032:	6e 29       	ld.w	r9,r7[0x8]
	//Now simply read the data in the receive register
	rxdata_new[1]=spi_get(IMU_SPI);
80004034:	4b a8       	lddpc	r8,8000411c <hmi_get_acelerometer+0x164>
80004036:	b0 99       	st.b	r8[0x1],r9
		
	// Deselect the slave
	spi_unselectChip(IMU_SPI,SPI_SLAVECHIP_NUMBER);
80004038:	30 0b       	mov	r11,0
8000403a:	0e 9c       	mov	r12,r7
8000403c:	f0 1f 00 3b 	mcall	80004128 <hmi_get_acelerometer+0x170>
	// Send the data to slave (ie = AT45DBX_CMDC_RD_STATUS_REG)
	txdata=ACCEL_YOUT_H;
	//spi_write(IMU_SPI,0x1C);
		
	//Select given device on the SPI bus
	spi_selectChip(IMU_SPI, SPI_SLAVECHIP_NUMBER);
80004040:	30 0b       	mov	r11,0
80004042:	0e 9c       	mov	r12,r7
80004044:	f0 1f 00 37 	mcall	80004120 <hmi_get_acelerometer+0x168>
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(volatile avr32_spi_t *spi, uint16_t data)
{
	spi->tdr = data << AVR32_SPI_TDR_TD_OFFSET;
80004048:	e0 68 bd 00 	mov	r8,48384
8000404c:	8f 38       	st.w	r7[0xc],r8
 *   \retval 1  All transmissions complete.
 *   \retval 0  Transmissions not complete.
 */
static inline bool spi_is_tx_empty(volatile avr32_spi_t *spi)
{
	return (spi->sr & AVR32_SPI_SR_TXEMPTY_MASK) != 0;
8000404e:	0e 99       	mov	r9,r7
80004050:	72 48       	ld.w	r8,r9[0x10]
		
	//return reverse_byte((uint8_t)rxdata);
	spi_put(IMU_SPI,txdata);
	//Wait for a complete transmission
	while(!spi_is_tx_empty(IMU_SPI));
80004052:	e2 18 02 00 	andl	r8,0x200,COH
80004056:	cf d0       	breq	80004050 <hmi_get_acelerometer+0x98>
		
	spi_read(IMU_SPI,&rxdata);
80004058:	fa cb ff fe 	sub	r11,sp,-2
8000405c:	fc 7c 18 00 	mov	r12,-190464
80004060:	f0 1f 00 31 	mcall	80004124 <hmi_get_acelerometer+0x16c>
 * \return The data byte
 *
 */
static inline uint16_t spi_get(volatile avr32_spi_t *spi)
{
	return (spi->rdr >> AVR32_SPI_RDR_RD_OFFSET);
80004064:	fc 77 18 00 	mov	r7,-190464
80004068:	6e 29       	ld.w	r9,r7[0x8]
	//Now simply read the data in the receive register
	rxdata_new[2]=spi_get(IMU_SPI);
8000406a:	4a d8       	lddpc	r8,8000411c <hmi_get_acelerometer+0x164>
8000406c:	b0 a9       	st.b	r8[0x2],r9
		
	// Deselect the slave
	spi_unselectChip(IMU_SPI,SPI_SLAVECHIP_NUMBER);
8000406e:	30 0b       	mov	r11,0
80004070:	0e 9c       	mov	r12,r7
80004072:	f0 1f 00 2e 	mcall	80004128 <hmi_get_acelerometer+0x170>
	// Send the data to slave (ie = AT45DBX_CMDC_RD_STATUS_REG)
	txdata=ACCEL_YOUT_L;
	//spi_write(IMU_SPI,0x1C);
		
	//Select given device on the SPI bus
	spi_selectChip(IMU_SPI, SPI_SLAVECHIP_NUMBER);
80004076:	30 0b       	mov	r11,0
80004078:	0e 9c       	mov	r12,r7
8000407a:	f0 1f 00 2a 	mcall	80004120 <hmi_get_acelerometer+0x168>
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(volatile avr32_spi_t *spi, uint16_t data)
{
	spi->tdr = data << AVR32_SPI_TDR_TD_OFFSET;
8000407e:	e0 68 be 00 	mov	r8,48640
80004082:	8f 38       	st.w	r7[0xc],r8
 *   \retval 1  All transmissions complete.
 *   \retval 0  Transmissions not complete.
 */
static inline bool spi_is_tx_empty(volatile avr32_spi_t *spi)
{
	return (spi->sr & AVR32_SPI_SR_TXEMPTY_MASK) != 0;
80004084:	0e 99       	mov	r9,r7
80004086:	72 48       	ld.w	r8,r9[0x10]
		
	//return reverse_byte((uint8_t)rxdata);
	spi_put(IMU_SPI,txdata);
	//Wait for a complete transmission
	while(!spi_is_tx_empty(IMU_SPI));
80004088:	e2 18 02 00 	andl	r8,0x200,COH
8000408c:	cf d0       	breq	80004086 <hmi_get_acelerometer+0xce>
		
	spi_read(IMU_SPI,&rxdata);
8000408e:	fa cb ff fe 	sub	r11,sp,-2
80004092:	fc 7c 18 00 	mov	r12,-190464
80004096:	f0 1f 00 24 	mcall	80004124 <hmi_get_acelerometer+0x16c>
 * \return The data byte
 *
 */
static inline uint16_t spi_get(volatile avr32_spi_t *spi)
{
	return (spi->rdr >> AVR32_SPI_RDR_RD_OFFSET);
8000409a:	fc 77 18 00 	mov	r7,-190464
8000409e:	6e 29       	ld.w	r9,r7[0x8]
	//Now simply read the data in the receive register
	rxdata_new[3]=spi_get(IMU_SPI);
800040a0:	49 f8       	lddpc	r8,8000411c <hmi_get_acelerometer+0x164>
800040a2:	b0 b9       	st.b	r8[0x3],r9
		
		
	// Z-AXIS
	
	// Deselect the slave
	spi_unselectChip(IMU_SPI,SPI_SLAVECHIP_NUMBER);
800040a4:	30 0b       	mov	r11,0
800040a6:	0e 9c       	mov	r12,r7
800040a8:	f0 1f 00 20 	mcall	80004128 <hmi_get_acelerometer+0x170>
	// Send the data to slave (ie = AT45DBX_CMDC_RD_STATUS_REG)
	txdata=ACCEL_ZOUT_H;
	//spi_write(IMU_SPI,0x1C);
		
	//Select given device on the SPI bus
	spi_selectChip(IMU_SPI, SPI_SLAVECHIP_NUMBER);
800040ac:	30 0b       	mov	r11,0
800040ae:	0e 9c       	mov	r12,r7
800040b0:	f0 1f 00 1c 	mcall	80004120 <hmi_get_acelerometer+0x168>
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(volatile avr32_spi_t *spi, uint16_t data)
{
	spi->tdr = data << AVR32_SPI_TDR_TD_OFFSET;
800040b4:	e0 68 c0 00 	mov	r8,49152
800040b8:	8f 38       	st.w	r7[0xc],r8
 *   \retval 1  All transmissions complete.
 *   \retval 0  Transmissions not complete.
 */
static inline bool spi_is_tx_empty(volatile avr32_spi_t *spi)
{
	return (spi->sr & AVR32_SPI_SR_TXEMPTY_MASK) != 0;
800040ba:	0e 99       	mov	r9,r7
800040bc:	72 48       	ld.w	r8,r9[0x10]
		
	//return reverse_byte((uint8_t)rxdata);
	spi_put(IMU_SPI,txdata);
	//Wait for a complete transmission
	while(!spi_is_tx_empty(IMU_SPI));
800040be:	e2 18 02 00 	andl	r8,0x200,COH
800040c2:	cf d0       	breq	800040bc <hmi_get_acelerometer+0x104>
		
	spi_read(IMU_SPI,&rxdata);
800040c4:	fa cb ff fe 	sub	r11,sp,-2
800040c8:	fc 7c 18 00 	mov	r12,-190464
800040cc:	f0 1f 00 16 	mcall	80004124 <hmi_get_acelerometer+0x16c>
 * \return The data byte
 *
 */
static inline uint16_t spi_get(volatile avr32_spi_t *spi)
{
	return (spi->rdr >> AVR32_SPI_RDR_RD_OFFSET);
800040d0:	fc 77 18 00 	mov	r7,-190464
800040d4:	6e 29       	ld.w	r9,r7[0x8]
	//Now simply read the data in the receive register
	rxdata_new[4]=spi_get(IMU_SPI);
800040d6:	49 28       	lddpc	r8,8000411c <hmi_get_acelerometer+0x164>
800040d8:	b0 c9       	st.b	r8[0x4],r9
		
	// Deselect the slave
	spi_unselectChip(IMU_SPI,SPI_SLAVECHIP_NUMBER);
800040da:	30 0b       	mov	r11,0
800040dc:	0e 9c       	mov	r12,r7
800040de:	f0 1f 00 13 	mcall	80004128 <hmi_get_acelerometer+0x170>
	// Send the data to slave (ie = AT45DBX_CMDC_RD_STATUS_REG)
	txdata=ACCEL_ZOUT_L;
	//spi_write(IMU_SPI,0x1C);
		
	//Select given device on the SPI bus
	spi_selectChip(IMU_SPI, SPI_SLAVECHIP_NUMBER);
800040e2:	30 0b       	mov	r11,0
800040e4:	0e 9c       	mov	r12,r7
800040e6:	f0 1f 00 0f 	mcall	80004120 <hmi_get_acelerometer+0x168>
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(volatile avr32_spi_t *spi, uint16_t data)
{
	spi->tdr = data << AVR32_SPI_TDR_TD_OFFSET;
800040ea:	e0 68 c1 00 	mov	r8,49408
800040ee:	8f 38       	st.w	r7[0xc],r8
 *   \retval 1  All transmissions complete.
 *   \retval 0  Transmissions not complete.
 */
static inline bool spi_is_tx_empty(volatile avr32_spi_t *spi)
{
	return (spi->sr & AVR32_SPI_SR_TXEMPTY_MASK) != 0;
800040f0:	0e 99       	mov	r9,r7
800040f2:	72 48       	ld.w	r8,r9[0x10]
		
	//return reverse_byte((uint8_t)rxdata);
	spi_put(IMU_SPI,txdata);
	//Wait for a complete transmission
	while(!spi_is_tx_empty(IMU_SPI));
800040f4:	e2 18 02 00 	andl	r8,0x200,COH
800040f8:	cf d0       	breq	800040f2 <hmi_get_acelerometer+0x13a>
		
	spi_read(IMU_SPI,&rxdata);
800040fa:	fa cb ff fe 	sub	r11,sp,-2
800040fe:	fc 7c 18 00 	mov	r12,-190464
80004102:	f0 1f 00 09 	mcall	80004124 <hmi_get_acelerometer+0x16c>
 * \return The data byte
 *
 */
static inline uint16_t spi_get(volatile avr32_spi_t *spi)
{
	return (spi->rdr >> AVR32_SPI_RDR_RD_OFFSET);
80004106:	fc 7c 18 00 	mov	r12,-190464
8000410a:	78 29       	ld.w	r9,r12[0x8]
	//Now simply read the data in the receive register
	rxdata_new[5]=spi_get(IMU_SPI);
8000410c:	48 48       	lddpc	r8,8000411c <hmi_get_acelerometer+0x164>
8000410e:	b0 d9       	st.b	r8[0x5],r9
		
	// Deselect the slave
	spi_unselectChip(IMU_SPI,SPI_SLAVECHIP_NUMBER);	
80004110:	30 0b       	mov	r11,0
80004112:	f0 1f 00 06 	mcall	80004128 <hmi_get_acelerometer+0x170>
}
80004116:	2f fd       	sub	sp,-4
80004118:	e3 cd 80 80 	ldm	sp++,r7,pc
8000411c:	00 00       	add	r0,r0
8000411e:	54 e0       	stdsp	sp[0x138],r0
80004120:	80 00       	ld.sh	r0,r0[0x0]
80004122:	22 0e       	sub	lr,32
80004124:	80 00       	ld.sh	r0,r0[0x0]
80004126:	23 5a       	sub	r10,53
80004128:	80 00       	ld.sh	r0,r0[0x0]
8000412a:	22 5a       	sub	r10,37

8000412c <binary_to_decimal_converter>:

uint8_t rxdata_new[6];
unsigned char ACC_Data[6];
float velX = 0, velY = 0, velZ = 0;

float binary_to_decimal_converter(char *bits){
8000412c:	d4 31       	pushm	r0-r7,lr
8000412e:	18 96       	mov	r6,r12
80004130:	30 17       	mov	r7,1
80004132:	30 04       	mov	r4,0
	float ret = 0;
	int i = 1;
	for(i = 1; i < strlen(bits); i++){
80004134:	c2 b8       	rjmp	8000418a <binary_to_decimal_converter+0x5e>
		ret += (atof(bits[i]) * pow(2,strlen(bits)- i));
80004136:	ec 05 07 0c 	ld.ub	r12,r6[r5]
8000413a:	f0 1f 00 1c 	mcall	800041a8 <binary_to_decimal_converter+0x7c>
8000413e:	14 92       	mov	r2,r10
80004140:	16 93       	mov	r3,r11
80004142:	0c 9c       	mov	r12,r6
80004144:	f0 1f 00 1a 	mcall	800041ac <binary_to_decimal_converter+0x80>
80004148:	0a 1c       	sub	r12,r5
8000414a:	f0 1f 00 1a 	mcall	800041b0 <binary_to_decimal_converter+0x84>
8000414e:	14 98       	mov	r8,r10
80004150:	16 99       	mov	r9,r11
80004152:	30 0a       	mov	r10,0
80004154:	fc 1b 40 00 	movh	r11,0x4000
80004158:	f0 1f 00 17 	mcall	800041b4 <binary_to_decimal_converter+0x88>
8000415c:	14 90       	mov	r0,r10
8000415e:	16 91       	mov	r1,r11
80004160:	08 9c       	mov	r12,r4
80004162:	f0 1f 00 16 	mcall	800041b8 <binary_to_decimal_converter+0x8c>
80004166:	14 94       	mov	r4,r10
80004168:	16 95       	mov	r5,r11
8000416a:	00 98       	mov	r8,r0
8000416c:	02 99       	mov	r9,r1
8000416e:	04 9a       	mov	r10,r2
80004170:	06 9b       	mov	r11,r3
80004172:	f0 1f 00 13 	mcall	800041bc <binary_to_decimal_converter+0x90>
80004176:	14 98       	mov	r8,r10
80004178:	16 99       	mov	r9,r11
8000417a:	08 9a       	mov	r10,r4
8000417c:	0a 9b       	mov	r11,r5
8000417e:	f0 1f 00 11 	mcall	800041c0 <binary_to_decimal_converter+0x94>
80004182:	f0 1f 00 11 	mcall	800041c4 <binary_to_decimal_converter+0x98>
80004186:	18 94       	mov	r4,r12
float velX = 0, velY = 0, velZ = 0;

float binary_to_decimal_converter(char *bits){
	float ret = 0;
	int i = 1;
	for(i = 1; i < strlen(bits); i++){
80004188:	2f f7       	sub	r7,-1
8000418a:	0e 95       	mov	r5,r7
8000418c:	0c 9c       	mov	r12,r6
8000418e:	f0 1f 00 08 	mcall	800041ac <binary_to_decimal_converter+0x80>
80004192:	0e 3c       	cp.w	r12,r7
80004194:	fe 9b ff d1 	brhi	80004136 <binary_to_decimal_converter+0xa>
		ret += (atof(bits[i]) * pow(2,strlen(bits)- i));
	}
	if(bits[0] == "1")ret = -ret;	
80004198:	0d 89       	ld.ub	r9,r6[0x0]
8000419a:	48 c8       	lddpc	r8,800041c8 <binary_to_decimal_converter+0x9c>
8000419c:	10 39       	cp.w	r9,r8
8000419e:	c0 31       	brne	800041a4 <binary_to_decimal_converter+0x78>
800041a0:	ee 14 80 00 	eorh	r4,0x8000
	return ret;
}
800041a4:	08 9c       	mov	r12,r4
800041a6:	d8 32       	popm	r0-r7,pc
800041a8:	80 00       	ld.sh	r0,r0[0x0]
800041aa:	78 b0       	ld.w	r0,r12[0x2c]
800041ac:	80 00       	ld.sh	r0,r0[0x0]
800041ae:	7e e8       	ld.w	r8,pc[0x38]
800041b0:	80 00       	ld.sh	r0,r0[0x0]
800041b2:	6f dc       	ld.w	r12,r7[0x74]
800041b4:	80 00       	ld.sh	r0,r0[0x0]
800041b6:	59 ac       	cp.w	r12,26
800041b8:	80 00       	ld.sh	r0,r0[0x0]
800041ba:	77 b4       	ld.w	r4,r11[0x6c]
800041bc:	80 00       	ld.sh	r0,r0[0x0]
800041be:	6b 58       	ld.w	r8,r5[0x54]
800041c0:	80 00       	ld.sh	r0,r0[0x0]
800041c2:	6e cc       	ld.w	r12,r7[0x30]
800041c4:	80 00       	ld.sh	r0,r0[0x0]
800041c6:	78 14       	ld.w	r4,r12[0x4]
800041c8:	80 00       	ld.sh	r0,r0[0x0]
800041ca:	a3 c8       	cbr	r8,0x2

800041cc <acc_raw_2_velocity>:

float acc_raw_2_velocity(void)
 {
800041cc:	eb cd 40 fc 	pushm	r2-r7,lr
800041d0:	21 0d       	sub	sp,64
	struct timeval stop, start;
	gettimeofday(&start, NULL);
800041d2:	30 0b       	mov	r11,0
800041d4:	fa cc ff d0 	sub	r12,sp,-48
800041d8:	f0 1f 00 80 	mcall	800043d8 <acc_raw_2_velocity+0x20c>
	hmi_get_acelerometer();
800041dc:	f0 1f 00 80 	mcall	800043dc <acc_raw_2_velocity+0x210>
	gettimeofday(&stop, NULL);
800041e0:	30 0b       	mov	r11,0
800041e2:	fa cc ff c8 	sub	r12,sp,-56
800041e6:	f0 1f 00 7d 	mcall	800043d8 <acc_raw_2_velocity+0x20c>
	
	long int dt = stop.tv_usec - start.tv_usec;
800041ea:	40 d8       	lddsp	r8,sp[0x34]
800041ec:	40 f2       	lddsp	r2,sp[0x3c]
800041ee:	10 12       	sub	r2,r8
	
	ACC_Data[0] = rxdata_new[1];//X_Low Byte
800041f0:	4f c8       	lddpc	r8,800043e0 <acc_raw_2_velocity+0x214>
800041f2:	11 9b       	ld.ub	r11,r8[0x1]
800041f4:	4f c7       	lddpc	r7,800043e4 <acc_raw_2_velocity+0x218>
800041f6:	ae 8b       	st.b	r7[0x0],r11
	ACC_Data[1] = rxdata_new[0];//X_High_Byte
800041f8:	11 89       	ld.ub	r9,r8[0x0]
800041fa:	ae 99       	st.b	r7[0x1],r9
	
	ACC_Data[2] = rxdata_new[3];//Y_Low_Byte
800041fc:	11 b9       	ld.ub	r9,r8[0x3]
800041fe:	ae a9       	st.b	r7[0x2],r9
	ACC_Data[3] = rxdata_new[2];//Y_High_Byte
80004200:	11 a9       	ld.ub	r9,r8[0x2]
80004202:	ae b9       	st.b	r7[0x3],r9

	ACC_Data[4] = rxdata_new[5];//Z_Low_Byte
80004204:	11 d9       	ld.ub	r9,r8[0x5]
80004206:	ae c9       	st.b	r7[0x4],r9
	ACC_Data[5] = rxdata_new[4];//Z_High_Byte
80004208:	11 c8       	ld.ub	r8,r8[0x4]
8000420a:	ae d8       	st.b	r7[0x5],r8

	//get raw x, y and z
	char Ax[16], Ay[16], Az[16];
	strcpy(Ax,ACC_Data[0]);
8000420c:	fa c6 ff e0 	sub	r6,sp,-32
80004210:	0c 9c       	mov	r12,r6
80004212:	f0 1f 00 76 	mcall	800043e8 <acc_raw_2_velocity+0x21c>
	strcat(Ax,ACC_Data[1]);
80004216:	0f 9b       	ld.ub	r11,r7[0x1]
80004218:	0c 9c       	mov	r12,r6
8000421a:	f0 1f 00 75 	mcall	800043ec <acc_raw_2_velocity+0x220>
	
	strcpy(Ay,ACC_Data[2]);
8000421e:	fa c5 ff f0 	sub	r5,sp,-16
80004222:	0f ab       	ld.ub	r11,r7[0x2]
80004224:	0a 9c       	mov	r12,r5
80004226:	f0 1f 00 71 	mcall	800043e8 <acc_raw_2_velocity+0x21c>
	strcat(Ay,ACC_Data[3]);
8000422a:	0f bb       	ld.ub	r11,r7[0x3]
8000422c:	0a 9c       	mov	r12,r5
8000422e:	f0 1f 00 70 	mcall	800043ec <acc_raw_2_velocity+0x220>
	 
	strcpy(Az,ACC_Data[4]);
80004232:	0f cb       	ld.ub	r11,r7[0x4]
80004234:	1a 9c       	mov	r12,sp
80004236:	f0 1f 00 6d 	mcall	800043e8 <acc_raw_2_velocity+0x21c>
	strcat(Az,ACC_Data[5]);
8000423a:	0f db       	ld.ub	r11,r7[0x5]
8000423c:	1a 9c       	mov	r12,sp
8000423e:	f0 1f 00 6c 	mcall	800043ec <acc_raw_2_velocity+0x220>
	 
	//convert x,y,z to decimal
	float X = binary_to_decimal_converter(Ax);
80004242:	0c 9c       	mov	r12,r6
80004244:	f0 1f 00 6b 	mcall	800043f0 <acc_raw_2_velocity+0x224>
80004248:	18 96       	mov	r6,r12
	float Y = binary_to_decimal_converter(Ay);
8000424a:	0a 9c       	mov	r12,r5
8000424c:	f0 1f 00 69 	mcall	800043f0 <acc_raw_2_velocity+0x224>
80004250:	18 95       	mov	r5,r12
	float Z = binary_to_decimal_converter(Az);
80004252:	1a 9c       	mov	r12,sp
80004254:	f0 1f 00 67 	mcall	800043f0 <acc_raw_2_velocity+0x224>
80004258:	18 93       	mov	r3,r12
	
	//formula
	float accX = roundf(((X * VREF / (pow(2,16)-1)) - VZEROG)/(SENSITIVITY) * 100.0f)/100.0f;
8000425a:	e0 67 33 33 	mov	r7,13107
8000425e:	ea 17 40 53 	orh	r7,0x4053
80004262:	e5 a2 0c 67 	cop	cp0,cr12,cr6,cr7,0x44
80004266:	f0 1f 00 64 	mcall	800043f4 <acc_raw_2_velocity+0x228>
8000426a:	30 08       	mov	r8,0
8000426c:	e0 69 ff e0 	mov	r9,65504
80004270:	ea 19 40 ef 	orh	r9,0x40ef
80004274:	f0 1f 00 61 	mcall	800043f8 <acc_raw_2_velocity+0x22c>
80004278:	fc 18 60 00 	movh	r8,0x6000
8000427c:	e0 69 66 66 	mov	r9,26214
80004280:	ea 19 3f fa 	orh	r9,0x3ffa
80004284:	f0 1f 00 5e 	mcall	800043fc <acc_raw_2_velocity+0x230>
80004288:	fc 18 80 00 	movh	r8,0x8000
8000428c:	e0 69 9f be 	mov	r9,40894
80004290:	ea 19 3f de 	orh	r9,0x3fde
80004294:	f0 1f 00 59 	mcall	800043f8 <acc_raw_2_velocity+0x22c>
80004298:	30 08       	mov	r8,0
8000429a:	fc 19 40 59 	movh	r9,0x4059
8000429e:	f0 1f 00 59 	mcall	80004400 <acc_raw_2_velocity+0x234>
800042a2:	f0 1f 00 59 	mcall	80004404 <acc_raw_2_velocity+0x238>
800042a6:	f0 1f 00 59 	mcall	80004408 <acc_raw_2_velocity+0x23c>
800042aa:	18 96       	mov	r6,r12
	float accY = roundf(((Y * VREF / (pow(2,16)-1)) - VZEROG)/(SENSITIVITY) * 100.0f)/100.0f;
800042ac:	e5 a2 0c 57 	cop	cp0,cr12,cr5,cr7,0x44
800042b0:	f0 1f 00 51 	mcall	800043f4 <acc_raw_2_velocity+0x228>
800042b4:	30 08       	mov	r8,0
800042b6:	e0 69 ff e0 	mov	r9,65504
800042ba:	ea 19 40 ef 	orh	r9,0x40ef
800042be:	f0 1f 00 4f 	mcall	800043f8 <acc_raw_2_velocity+0x22c>
800042c2:	fc 18 60 00 	movh	r8,0x6000
800042c6:	e0 69 66 66 	mov	r9,26214
800042ca:	ea 19 3f fa 	orh	r9,0x3ffa
800042ce:	f0 1f 00 4c 	mcall	800043fc <acc_raw_2_velocity+0x230>
800042d2:	fc 18 80 00 	movh	r8,0x8000
800042d6:	e0 69 9f be 	mov	r9,40894
800042da:	ea 19 3f de 	orh	r9,0x3fde
800042de:	f0 1f 00 47 	mcall	800043f8 <acc_raw_2_velocity+0x22c>
800042e2:	30 08       	mov	r8,0
800042e4:	fc 19 40 59 	movh	r9,0x4059
800042e8:	f0 1f 00 46 	mcall	80004400 <acc_raw_2_velocity+0x234>
800042ec:	f0 1f 00 46 	mcall	80004404 <acc_raw_2_velocity+0x238>
800042f0:	f0 1f 00 46 	mcall	80004408 <acc_raw_2_velocity+0x23c>
800042f4:	18 94       	mov	r4,r12
	float accZ = roundf(((Z * VREF / (pow(2,16)-1)) - VZEROG)/(SENSITIVITY) * 100.0f)/100.0f;
800042f6:	e5 a2 0c 37 	cop	cp0,cr12,cr3,cr7,0x44
800042fa:	f0 1f 00 3f 	mcall	800043f4 <acc_raw_2_velocity+0x228>
800042fe:	30 08       	mov	r8,0
80004300:	e0 69 ff e0 	mov	r9,65504
80004304:	ea 19 40 ef 	orh	r9,0x40ef
80004308:	f0 1f 00 3c 	mcall	800043f8 <acc_raw_2_velocity+0x22c>
8000430c:	fc 18 60 00 	movh	r8,0x6000
80004310:	e0 69 66 66 	mov	r9,26214
80004314:	ea 19 3f fa 	orh	r9,0x3ffa
80004318:	f0 1f 00 39 	mcall	800043fc <acc_raw_2_velocity+0x230>
8000431c:	fc 18 80 00 	movh	r8,0x8000
80004320:	e0 69 9f be 	mov	r9,40894
80004324:	ea 19 3f de 	orh	r9,0x3fde
80004328:	f0 1f 00 34 	mcall	800043f8 <acc_raw_2_velocity+0x22c>
8000432c:	30 08       	mov	r8,0
8000432e:	fc 19 40 59 	movh	r9,0x4059
80004332:	f0 1f 00 34 	mcall	80004400 <acc_raw_2_velocity+0x234>
80004336:	f0 1f 00 34 	mcall	80004404 <acc_raw_2_velocity+0x238>
8000433a:	f0 1f 00 34 	mcall	80004408 <acc_raw_2_velocity+0x23c>
8000433e:	18 93       	mov	r3,r12
	
	//update velocity
	velX += (accX * dt);
80004340:	e5 a6 07 02 	cop	cp0,cr7,cr0,cr2,0x4c
80004344:	fc 1b 42 c8 	movh	r11,0x42c8
80004348:	0c 9c       	mov	r12,r6
8000434a:	f0 1f 00 31 	mcall	8000440c <acc_raw_2_velocity+0x240>
8000434e:	4b 18       	lddpc	r8,80004410 <acc_raw_2_velocity+0x244>
80004350:	70 05       	ld.w	r5,r8[0x0]
80004352:	e1 a5 05 7c 	cop	cp0,cr5,cr7,cr12,0xa
80004356:	91 05       	st.w	r8[0x0],r5
	velY += (accY * dt);
80004358:	4a f6       	lddpc	r6,80004414 <acc_raw_2_velocity+0x248>
8000435a:	fc 1b 42 c8 	movh	r11,0x42c8
8000435e:	08 9c       	mov	r12,r4
80004360:	f0 1f 00 2b 	mcall	8000440c <acc_raw_2_velocity+0x240>
80004364:	6c 04       	ld.w	r4,r6[0x0]
80004366:	e1 a4 04 c7 	cop	cp0,cr4,cr12,cr7,0x8
8000436a:	8d 04       	st.w	r6[0x0],r4
	velZ += (accZ * dt);
8000436c:	4a b6       	lddpc	r6,80004418 <acc_raw_2_velocity+0x24c>
8000436e:	fc 1b 42 c8 	movh	r11,0x42c8
80004372:	06 9c       	mov	r12,r3
80004374:	f0 1f 00 26 	mcall	8000440c <acc_raw_2_velocity+0x240>
80004378:	6c 08       	ld.w	r8,r6[0x0]
8000437a:	e1 a8 07 c7 	cop	cp0,cr7,cr12,cr7,0x10
8000437e:	8d 07       	st.w	r6[0x0],r7
	
	//final velocity
	return (float) sqrt(pow(velX,2) + pow(velY,2) + pow(velZ,2));
80004380:	0a 9c       	mov	r12,r5
80004382:	f0 1f 00 1d 	mcall	800043f4 <acc_raw_2_velocity+0x228>
80004386:	14 98       	mov	r8,r10
80004388:	16 99       	mov	r9,r11
8000438a:	f0 1f 00 1e 	mcall	80004400 <acc_raw_2_velocity+0x234>
8000438e:	14 92       	mov	r2,r10
80004390:	16 93       	mov	r3,r11
80004392:	08 9c       	mov	r12,r4
80004394:	f0 1f 00 18 	mcall	800043f4 <acc_raw_2_velocity+0x228>
80004398:	14 98       	mov	r8,r10
8000439a:	16 99       	mov	r9,r11
8000439c:	f0 1f 00 19 	mcall	80004400 <acc_raw_2_velocity+0x234>
800043a0:	14 94       	mov	r4,r10
800043a2:	16 95       	mov	r5,r11
800043a4:	0e 9c       	mov	r12,r7
800043a6:	f0 1f 00 14 	mcall	800043f4 <acc_raw_2_velocity+0x228>
800043aa:	14 98       	mov	r8,r10
800043ac:	16 99       	mov	r9,r11
800043ae:	f0 1f 00 15 	mcall	80004400 <acc_raw_2_velocity+0x234>
800043b2:	14 96       	mov	r6,r10
800043b4:	16 97       	mov	r7,r11
800043b6:	08 98       	mov	r8,r4
800043b8:	0a 99       	mov	r9,r5
800043ba:	04 9a       	mov	r10,r2
800043bc:	06 9b       	mov	r11,r3
800043be:	f0 1f 00 18 	mcall	8000441c <acc_raw_2_velocity+0x250>
800043c2:	0c 98       	mov	r8,r6
800043c4:	0e 99       	mov	r9,r7
800043c6:	f0 1f 00 16 	mcall	8000441c <acc_raw_2_velocity+0x250>
800043ca:	f0 1f 00 16 	mcall	80004420 <acc_raw_2_velocity+0x254>
800043ce:	f0 1f 00 0e 	mcall	80004404 <acc_raw_2_velocity+0x238>
}
800043d2:	2f 0d       	sub	sp,-64
800043d4:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
800043d8:	80 00       	ld.sh	r0,r0[0x0]
800043da:	8c 18       	ld.sh	r8,r6[0x2]
800043dc:	80 00       	ld.sh	r0,r0[0x0]
800043de:	3f b8       	mov	r8,-5
800043e0:	00 00       	add	r0,r0
800043e2:	54 e0       	stdsp	sp[0x138],r0
800043e4:	00 00       	add	r0,r0
800043e6:	54 e8       	stdsp	sp[0x138],r8
800043e8:	80 00       	ld.sh	r0,r0[0x0]
800043ea:	7e d6       	ld.w	r6,pc[0x34]
800043ec:	80 00       	ld.sh	r0,r0[0x0]
800043ee:	7e b4       	ld.w	r4,pc[0x2c]
800043f0:	80 00       	ld.sh	r0,r0[0x0]
800043f2:	41 2c       	lddsp	r12,sp[0x48]
800043f4:	80 00       	ld.sh	r0,r0[0x0]
800043f6:	77 b4       	ld.w	r4,r11[0x6c]
800043f8:	80 00       	ld.sh	r0,r0[0x0]
800043fa:	71 bc       	ld.w	r12,r8[0x6c]
800043fc:	80 00       	ld.sh	r0,r0[0x0]
800043fe:	6d 30       	ld.w	r0,r6[0x4c]
80004400:	80 00       	ld.sh	r0,r0[0x0]
80004402:	6b 58       	ld.w	r8,r5[0x54]
80004404:	80 00       	ld.sh	r0,r0[0x0]
80004406:	78 14       	ld.w	r4,r12[0x4]
80004408:	80 00       	ld.sh	r0,r0[0x0]
8000440a:	59 50       	cp.w	r0,21
8000440c:	80 00       	ld.sh	r0,r0[0x0]
8000440e:	74 d4       	ld.w	r4,r10[0x34]
80004410:	00 00       	add	r0,r0
80004412:	0a 28       	rsub	r8,r5
80004414:	00 00       	add	r0,r0
80004416:	0a 2c       	rsub	r12,r5
80004418:	00 00       	add	r0,r0
8000441a:	0a 30       	cp.w	r0,r5
8000441c:	80 00       	ld.sh	r0,r0[0x0]
8000441e:	6e cc       	ld.w	r12,r7[0x30]
80004420:	80 00       	ld.sh	r0,r0[0x0]
80004422:	5c 58       	castu.b	r8

80004424 <duplex_com>:
	
	// Assign I/Os to SPI
	gpio_enable_module(IMU_SPI_GPIO_MAP, sizeof(IMU_SPI_GPIO_MAP) / sizeof(IMU_SPI_GPIO_MAP[0]));
}

void duplex_com(uint16_t *confdata, size_t confsize){
80004424:	eb cd 40 fe 	pushm	r1-r7,lr
80004428:	18 91       	mov	r1,r12
8000442a:	16 92       	mov	r2,r11
	int i = 0;
	for(i = 0 ; i < confsize; i++){	
8000442c:	58 0b       	cp.w	r11,0
8000442e:	c1 a0       	breq	80004462 <duplex_com+0x3e>
80004430:	30 04       	mov	r4,0
80004432:	08 95       	mov	r5,r4
		//Select given device on the SPI bus
		spi_selectChip(IMU_SPI, SPI_SLAVECHIP_NUMBER);
80004434:	08 93       	mov	r3,r4
80004436:	fc 77 18 00 	mov	r7,-190464
8000443a:	06 9b       	mov	r11,r3
8000443c:	0e 9c       	mov	r12,r7
8000443e:	f0 1f 00 0b 	mcall	80004468 <duplex_com+0x44>
 * \param data The data byte to be loaded
 *
 */
static inline void spi_put(volatile avr32_spi_t *spi, uint16_t data)
{
	spi->tdr = data << AVR32_SPI_TDR_TD_OFFSET;
80004442:	e2 04 05 18 	ld.uh	r8,r1[r4<<0x1]
80004446:	8f 38       	st.w	r7[0xc],r8
 *   \retval 1  All transmissions complete.
 *   \retval 0  Transmissions not complete.
 */
static inline bool spi_is_tx_empty(volatile avr32_spi_t *spi)
{
	return (spi->sr & AVR32_SPI_SR_TXEMPTY_MASK) != 0;
80004448:	6e 48       	ld.w	r8,r7[0x10]
		
		//put the address(based on confdata
		spi_put(IMU_SPI,confdata[i]);
		
		//Wait for a complete transmission
		while(!spi_is_tx_empty(IMU_SPI));
8000444a:	e2 18 02 00 	andl	r8,0x200,COH
8000444e:	cf d0       	breq	80004448 <duplex_com+0x24>
		
		// De-select the slave
		spi_unselectChip(IMU_SPI,SPI_SLAVECHIP_NUMBER);
80004450:	06 9b       	mov	r11,r3
80004452:	0e 9c       	mov	r12,r7
80004454:	f0 1f 00 06 	mcall	8000446c <duplex_com+0x48>
	gpio_enable_module(IMU_SPI_GPIO_MAP, sizeof(IMU_SPI_GPIO_MAP) / sizeof(IMU_SPI_GPIO_MAP[0]));
}

void duplex_com(uint16_t *confdata, size_t confsize){
	int i = 0;
	for(i = 0 ; i < confsize; i++){	
80004458:	2f f5       	sub	r5,-1
8000445a:	0a 94       	mov	r4,r5
8000445c:	0a 32       	cp.w	r2,r5
8000445e:	fe 9b ff ee 	brhi	8000443a <duplex_com+0x16>
80004462:	e3 cd 80 fe 	ldm	sp++,r1-r7,pc
80004466:	00 00       	add	r0,r0
80004468:	80 00       	ld.sh	r0,r0[0x0]
8000446a:	22 0e       	sub	lr,32
8000446c:	80 00       	ld.sh	r0,r0[0x0]
8000446e:	22 5a       	sub	r10,37

80004470 <spi_init_module>:

#include <asf.h>
#include "imu_spi.h"

void spi_init_module(void)
{
80004470:	eb cd 40 80 	pushm	r7,lr
80004474:	20 4d       	sub	sp,16
		SPI_MODE_0,
		// Disables the mode fault detection.
		// With this bit cleared, the SPI master mode will disable itself if another
		// master tries to address it.
		1
	};
80004476:	49 18       	lddpc	r8,800044b8 <spi_init_module+0x48>
80004478:	1a 97       	mov	r7,sp
8000447a:	70 09       	ld.w	r9,r8[0x0]
8000447c:	50 09       	stdsp	sp[0x0],r9
8000447e:	70 19       	ld.w	r9,r8[0x4]
80004480:	50 19       	stdsp	sp[0x4],r9
80004482:	70 29       	ld.w	r9,r8[0x8]
80004484:	50 29       	stdsp	sp[0x8],r9
80004486:	70 38       	ld.w	r8,r8[0xc]
80004488:	50 38       	stdsp	sp[0xc],r8
	
	//Init SPI module as master
	spi_initMaster(IMU_SPI,&my_spi_options);
8000448a:	1a 9b       	mov	r11,sp
8000448c:	fc 7c 18 00 	mov	r12,-190464
80004490:	f0 1f 00 0b 	mcall	800044bc <spi_init_module+0x4c>
	//Setup configuration for chip connected to CS1
	spi_setupChipReg(IMU_SPI,&my_spi_options,sysclk_get_pba_hz());
80004494:	e0 7a c1 38 	mov	r10,115000
80004498:	1a 9b       	mov	r11,sp
8000449a:	fc 7c 18 00 	mov	r12,-190464
8000449e:	f0 1f 00 09 	mcall	800044c0 <spi_init_module+0x50>
	//Allow the module to transfer data
	spi_enable(IMU_SPI);
800044a2:	fc 7c 18 00 	mov	r12,-190464
800044a6:	f0 1f 00 08 	mcall	800044c4 <spi_init_module+0x54>
		{IMU_SPI_NPCS_PIN,IMU_SPI_NPCS_FUNCTION}  // CS
		// Chip Select NPCS handled manually!
	};
	
	// Assign I/Os to SPI
	gpio_enable_module(IMU_SPI_GPIO_MAP, sizeof(IMU_SPI_GPIO_MAP) / sizeof(IMU_SPI_GPIO_MAP[0]));
800044aa:	30 4b       	mov	r11,4
800044ac:	48 7c       	lddpc	r12,800044c8 <spi_init_module+0x58>
800044ae:	f0 1f 00 08 	mcall	800044cc <spi_init_module+0x5c>
}
800044b2:	2f cd       	sub	sp,-16
800044b4:	e3 cd 80 80 	ldm	sp++,r7,pc
800044b8:	80 00       	ld.sh	r0,r0[0x0]
800044ba:	a3 cc       	cbr	r12,0x2
800044bc:	80 00       	ld.sh	r0,r0[0x0]
800044be:	21 98       	sub	r8,25
800044c0:	80 00       	ld.sh	r0,r0[0x0]
800044c2:	22 80       	sub	r0,40
800044c4:	80 00       	ld.sh	r0,r0[0x0]
800044c6:	23 38       	sub	r8,51
800044c8:	80 00       	ld.sh	r0,r0[0x0]
800044ca:	a3 dc       	cbr	r12,0x3
800044cc:	80 00       	ld.sh	r0,r0[0x0]
800044ce:	47 d0       	lddsp	r0,sp[0x1f4]

800044d0 <imu_spi_configuration>:
		// De-select the slave
		spi_unselectChip(IMU_SPI,SPI_SLAVECHIP_NUMBER);
	}
}

void imu_spi_configuration(){
800044d0:	eb cd 40 80 	pushm	r7,lr
800044d4:	20 5d       	sub	sp,20
	sysclk_init();
800044d6:	f0 1f 00 0c 	mcall	80004504 <imu_spi_configuration+0x34>
	spi_init_module();
800044da:	f0 1f 00 0c 	mcall	80004508 <imu_spi_configuration+0x38>
 *   \retval 1  All transmissions complete.
 *   \retval 0  Transmissions not complete.
 */
static inline bool spi_is_tx_ready(volatile avr32_spi_t *spi)
{
	return (spi->sr & AVR32_SPI_SR_TDRE_MASK) != 0;
800044de:	fc 79 18 00 	mov	r9,-190464
800044e2:	72 48       	ld.w	r8,r9[0x10]
	
	//Wait for the transmitter to be ready
	while(!spi_is_tx_ready(IMU_SPI));	
800044e4:	e2 18 00 02 	andl	r8,0x2,COH
800044e8:	cf d0       	breq	800044e2 <imu_spi_configuration+0x12>
						   0x2000, // Write ACCEL_WOM_X_THR Registers
						   0x2100, // Write ACCEL_WOM_Y_THR Registers
						   0x2200, // Write ACCEL_WOM_Z_THR Registers
						   0x69C1, // Write ACCEL_INTEL_CTRL Registers
						   0x1900 // Write SMPLRT_DIV Registers
						  };
800044ea:	1a 97       	mov	r7,sp
800044ec:	31 4a       	mov	r10,20
800044ee:	48 8b       	lddpc	r11,8000450c <imu_spi_configuration+0x3c>
800044f0:	1a 9c       	mov	r12,sp
800044f2:	f0 1f 00 08 	mcall	80004510 <imu_spi_configuration+0x40>
	duplex_com(confdata,sizeof(confdata)/sizeof(*confdata));
800044f6:	30 ab       	mov	r11,10
800044f8:	1a 9c       	mov	r12,sp
800044fa:	f0 1f 00 07 	mcall	80004514 <imu_spi_configuration+0x44>
800044fe:	2f bd       	sub	sp,-20
80004500:	e3 cd 80 80 	ldm	sp++,r7,pc
80004504:	80 00       	ld.sh	r0,r0[0x0]
80004506:	46 6c       	lddsp	r12,sp[0x198]
80004508:	80 00       	ld.sh	r0,r0[0x0]
8000450a:	44 70       	lddsp	r0,sp[0x11c]
8000450c:	80 00       	ld.sh	r0,r0[0x0]
8000450e:	a3 fc       	*unknown*
80004510:	80 00       	ld.sh	r0,r0[0x0]
80004512:	7d 3c       	ld.w	r12,lr[0x4c]
80004514:	80 00       	ld.sh	r0,r0[0x0]
80004516:	44 24       	lddsp	r4,sp[0x108]

80004518 <main>:
/* Defines */
#define mainBLE_TASK_PRIORITY ( tskIDLE_PRIORITY + 1 )
#define mainCAN_TASK_PRIORITY ( tskIDLE_PRIORITY + 1 )

int main( void )
{
80004518:	d4 01       	pushm	lr
	pcl_switch_to_osc(PCL_OSC0, FOSC0, OSC0_STARTUP);
8000451a:	30 3a       	mov	r10,3
8000451c:	e0 6b 24 00 	mov	r11,9216
80004520:	ea 1b 00 f4 	orh	r11,0xf4
80004524:	30 0c       	mov	r12,0
80004526:	f0 1f 00 0e 	mcall	8000455c <main+0x44>

	// Initialize USART for stdio debugging
	init_dbg_rs232(FPBA_HZ);
8000452a:	e0 6c 24 00 	mov	r12,9216
8000452e:	ea 1c 00 f4 	orh	r12,0xf4
80004532:	f0 1f 00 0c 	mcall	80004560 <main+0x48>
	print_dbg(CURSOFF CLEARSCR);
80004536:	48 cc       	lddpc	r12,80004564 <main+0x4c>
80004538:	f0 1f 00 0c 	mcall	80004568 <main+0x50>
		
	irq_initialize_vectors();
8000453c:	f0 1f 00 0c 	mcall	8000456c <main+0x54>
	cpu_irq_enable();
80004540:	d5 03       	csrf	0x10
	
	//init & start timer
	timer_init();
80004542:	f0 1f 00 0c 	mcall	80004570 <main+0x58>
	timer_start();
80004546:	f0 1f 00 0c 	mcall	80004574 <main+0x5c>

	vStartCANTask( mainCAN_TASK_PRIORITY );
8000454a:	30 1c       	mov	r12,1
8000454c:	f0 1f 00 0b 	mcall	80004578 <main+0x60>
	vStartBLETask( mainBLE_TASK_PRIORITY );
80004550:	30 1c       	mov	r12,1
80004552:	f0 1f 00 0b 	mcall	8000457c <main+0x64>
	
	vTaskStartScheduler();
80004556:	f0 1f 00 0b 	mcall	80004580 <main+0x68>

	return 0;
8000455a:	d8 0a       	popm	pc,r12=0
8000455c:	80 00       	ld.sh	r0,r0[0x0]
8000455e:	4a c8       	lddpc	r8,8000460c <timer_init+0x38>
80004560:	80 00       	ld.sh	r0,r0[0x0]
80004562:	2c 40       	sub	r0,-60
80004564:	80 00       	ld.sh	r0,r0[0x0]
80004566:	a4 10       	st.h	r2[0x2],r0
80004568:	80 00       	ld.sh	r0,r0[0x0]
8000456a:	2b ec       	sub	r12,-66
8000456c:	80 00       	ld.sh	r0,r0[0x0]
8000456e:	4a 1c       	lddpc	r12,800045f0 <timer_init+0x1c>
80004570:	80 00       	ld.sh	r0,r0[0x0]
80004572:	45 d4       	lddsp	r4,sp[0x174]
80004574:	80 00       	ld.sh	r0,r0[0x0]
80004576:	45 b4       	lddsp	r4,sp[0x16c]
80004578:	80 00       	ld.sh	r0,r0[0x0]
8000457a:	38 cc       	mov	r12,-116
8000457c:	80 00       	ld.sh	r0,r0[0x0]
8000457e:	31 84       	mov	r4,24
80004580:	80 00       	ld.sh	r0,r0[0x0]
80004582:	59 04       	cp.w	r4,16

80004584 <timer_set_callback>:
		timer_callback1(timer_count_ms);
	}
}

void timer_set_callback(U8 callback_no, void (*callback)(U32 ms)) {
	switch(callback_no) {
80004584:	58 0c       	cp.w	r12,0
80004586:	c0 60       	breq	80004592 <timer_set_callback+0xe>
80004588:	30 18       	mov	r8,1
8000458a:	f0 0c 18 00 	cp.b	r12,r8
8000458e:	5e 1c       	retne	r12
80004590:	c0 48       	rjmp	80004598 <timer_set_callback+0x14>
		case 0: timer_callback0 = callback; break;
80004592:	48 48       	lddpc	r8,800045a0 <timer_set_callback+0x1c>
80004594:	91 0b       	st.w	r8[0x0],r11
80004596:	5e fc       	retal	r12
		case 1: timer_callback1 = callback; break;
80004598:	48 38       	lddpc	r8,800045a4 <timer_set_callback+0x20>
8000459a:	91 0b       	st.w	r8[0x0],r11
8000459c:	5e fc       	retal	r12
8000459e:	00 00       	add	r0,r0
800045a0:	00 00       	add	r0,r0
800045a2:	54 f0       	stdsp	sp[0x13c],r0
800045a4:	00 00       	add	r0,r0
800045a6:	54 f8       	stdsp	sp[0x13c],r8

800045a8 <timer_get_ms>:
	timer_count_ms = 0;
	tc_start(tc, TC_CHANNEL);
}

U32 timer_get_ms(void) {
	return timer_count_ms;
800045a8:	48 28       	lddpc	r8,800045b0 <timer_get_ms+0x8>
800045aa:	70 0c       	ld.w	r12,r8[0x0]
800045ac:	5e fc       	retal	r12
800045ae:	00 00       	add	r0,r0
800045b0:	00 00       	add	r0,r0
800045b2:	54 f4       	stdsp	sp[0x13c],r4

800045b4 <timer_start>:
	tc_write_rc(tc, TC_CHANNEL, (FPBA_HZ / 8) / 1000);

	tc_configure_interrupts(tc, TC_CHANNEL, &TC_INTERRUPT);
}

void timer_start(void) {
800045b4:	d4 01       	pushm	lr
	timer_count_ms = 0;
800045b6:	30 0b       	mov	r11,0
800045b8:	48 48       	lddpc	r8,800045c8 <timer_start+0x14>
800045ba:	91 0b       	st.w	r8[0x0],r11
	tc_start(tc, TC_CHANNEL);
800045bc:	48 48       	lddpc	r8,800045cc <timer_start+0x18>
800045be:	70 0c       	ld.w	r12,r8[0x0]
800045c0:	f0 1f 00 04 	mcall	800045d0 <timer_start+0x1c>
}
800045c4:	d8 02       	popm	pc
800045c6:	00 00       	add	r0,r0
800045c8:	00 00       	add	r0,r0
800045ca:	54 f4       	stdsp	sp[0x13c],r4
800045cc:	00 00       	add	r0,r0
800045ce:	04 74       	tst	r4,r2
800045d0:	80 00       	ld.sh	r0,r0[0x0]
800045d2:	4d e0       	lddpc	r0,80004748 <gpio_enable_module_pin+0xc>

800045d4 <timer_init>:
}

volatile avr32_tc_t *tc = TC_INSTANCE;

void timer_init(void)
{	
800045d4:	eb cd 40 80 	pushm	r7,lr
		.cpas  = 0,
		.lovrs = 0,
		.covfs = 0
	};
	// Register the TC interrupt handler to the interrupt controller.
	INTC_register_interrupt(&timer_interrupt, TC_INSTANCE_IRQ, AVR32_INTC_INT0);
800045d8:	30 0a       	mov	r10,0
800045da:	e0 6b 04 20 	mov	r11,1056
800045de:	48 bc       	lddpc	r12,80004608 <timer_init+0x34>
800045e0:	f0 1f 00 0b 	mcall	8000460c <timer_init+0x38>
	
	// Initialize the timer/counter.
	tc_init_waveform(tc, &WAVEFORM_OPT);
800045e4:	48 b7       	lddpc	r7,80004610 <timer_init+0x3c>
800045e6:	48 cb       	lddpc	r11,80004614 <timer_init+0x40>
800045e8:	6e 0c       	ld.w	r12,r7[0x0]
800045ea:	f0 1f 00 0c 	mcall	80004618 <timer_init+0x44>

	// Set the compare triggers.
	// We want: (1 / (FPBA_HZ / 8)) * RC = 1 ms, hence RC = (FPBA_HZ / 8) / 1000
	tc_write_rc(tc, TC_CHANNEL, (FPBA_HZ / 8) / 1000);
800045ee:	e0 6a 07 d0 	mov	r10,2000
800045f2:	30 0b       	mov	r11,0
800045f4:	6e 0c       	ld.w	r12,r7[0x0]
800045f6:	f0 1f 00 0a 	mcall	8000461c <timer_init+0x48>

	tc_configure_interrupts(tc, TC_CHANNEL, &TC_INTERRUPT);
800045fa:	48 aa       	lddpc	r10,80004620 <timer_init+0x4c>
800045fc:	30 0b       	mov	r11,0
800045fe:	6e 0c       	ld.w	r12,r7[0x0]
80004600:	f0 1f 00 09 	mcall	80004624 <timer_init+0x50>
}
80004604:	e3 cd 80 80 	ldm	sp++,r7,pc
80004608:	80 00       	ld.sh	r0,r0[0x0]
8000460a:	46 28       	lddsp	r8,sp[0x188]
8000460c:	80 00       	ld.sh	r0,r0[0x0]
8000460e:	49 9c       	lddpc	r12,80004670 <flashc_set_wait_state+0x2>
80004610:	00 00       	add	r0,r0
80004612:	04 74       	tst	r4,r2
80004614:	80 00       	ld.sh	r0,r0[0x0]
80004616:	a4 20       	st.h	r2[0x4],r0
80004618:	80 00       	ld.sh	r0,r0[0x0]
8000461a:	4d 44       	lddpc	r4,80004768 <gpio_enable_module_pin+0x2c>
8000461c:	80 00       	ld.sh	r0,r0[0x0]
8000461e:	4e 04       	lddpc	r4,8000479c <gpio_enable_module_pin+0x60>
80004620:	80 00       	ld.sh	r0,r0[0x0]
80004622:	a4 28       	st.h	r2[0x4],r8
80004624:	80 00       	ld.sh	r0,r0[0x0]
80004626:	4e 38       	lddpc	r8,800047b0 <gpio_enable_module_pin+0x74>

80004628 <timer_interrupt>:

/*! \brief TC interrupt.
 */
__attribute__((__interrupt__))
static void timer_interrupt(void)
{
80004628:	d4 01       	pushm	lr
	// Clear the interrupt flag. This is a side effect of reading the TC SR.
	tc_read_sr(TC_INSTANCE, TC_CHANNEL);
8000462a:	30 0b       	mov	r11,0
8000462c:	fc 7c 20 00 	mov	r12,-188416
80004630:	f0 1f 00 0b 	mcall	8000465c <timer_interrupt+0x34>
	
	timer_count_ms++;
80004634:	48 b8       	lddpc	r8,80004660 <timer_interrupt+0x38>
80004636:	70 09       	ld.w	r9,r8[0x0]
80004638:	2f f9       	sub	r9,-1
8000463a:	91 09       	st.w	r8[0x0],r9
	
	if(timer_callback0 != NULL) {
8000463c:	48 a8       	lddpc	r8,80004664 <timer_interrupt+0x3c>
8000463e:	70 08       	ld.w	r8,r8[0x0]
80004640:	58 08       	cp.w	r8,0
80004642:	c0 40       	breq	8000464a <timer_interrupt+0x22>
		timer_callback0(timer_count_ms);
80004644:	48 79       	lddpc	r9,80004660 <timer_interrupt+0x38>
80004646:	72 0c       	ld.w	r12,r9[0x0]
80004648:	5d 18       	icall	r8
	}
	if(timer_callback1 != NULL) {
8000464a:	48 88       	lddpc	r8,80004668 <timer_interrupt+0x40>
8000464c:	70 08       	ld.w	r8,r8[0x0]
8000464e:	58 08       	cp.w	r8,0
80004650:	c0 40       	breq	80004658 <timer_interrupt+0x30>
		timer_callback1(timer_count_ms);
80004652:	48 49       	lddpc	r9,80004660 <timer_interrupt+0x38>
80004654:	72 0c       	ld.w	r12,r9[0x0]
80004656:	5d 18       	icall	r8
	}
}
80004658:	d4 02       	popm	lr
8000465a:	d6 03       	rete
8000465c:	80 00       	ld.sh	r0,r0[0x0]
8000465e:	4d f2       	lddpc	r2,800047d8 <gpio_enable_module+0x8>
80004660:	00 00       	add	r0,r0
80004662:	54 f4       	stdsp	sp[0x13c],r4
80004664:	00 00       	add	r0,r0
80004666:	54 f0       	stdsp	sp[0x13c],r0
80004668:	00 00       	add	r0,r0
8000466a:	54 f8       	stdsp	sp[0x13c],r8

8000466c <sysclk_init>:
8000466c:	5e fc       	retal	r12

8000466e <flashc_set_wait_state>:
8000466e:	fe 68 00 00 	mov	r8,-131072
80004672:	70 09       	ld.w	r9,r8[0x0]
80004674:	f3 dc d0 c1 	bfins	r9,r12,0x6,0x1
80004678:	91 09       	st.w	r8[0x0],r9
8000467a:	5e fc       	retal	r12

8000467c <flashc_is_ready>:
8000467c:	fe 68 00 00 	mov	r8,-131072
80004680:	70 2c       	ld.w	r12,r8[0x8]
80004682:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
80004686:	5e fc       	retal	r12

80004688 <flashc_default_wait_until_ready>:
80004688:	d4 01       	pushm	lr
8000468a:	f0 1f 00 03 	mcall	80004694 <flashc_default_wait_until_ready+0xc>
8000468e:	cf e0       	breq	8000468a <flashc_default_wait_until_ready+0x2>
80004690:	d8 02       	popm	pc
80004692:	00 00       	add	r0,r0
80004694:	80 00       	ld.sh	r0,r0[0x0]
80004696:	46 7c       	lddsp	r12,sp[0x19c]

80004698 <flashc_issue_command>:
80004698:	eb cd 40 c0 	pushm	r6-r7,lr
8000469c:	18 96       	mov	r6,r12
8000469e:	16 97       	mov	r7,r11
800046a0:	48 e8       	lddpc	r8,800046d8 <flashc_issue_command+0x40>
800046a2:	70 08       	ld.w	r8,r8[0x0]
800046a4:	5d 18       	icall	r8
800046a6:	fe 68 00 00 	mov	r8,-131072
800046aa:	70 18       	ld.w	r8,r8[0x4]
800046ac:	f1 d6 d0 06 	bfins	r8,r6,0x0,0x6
800046b0:	58 07       	cp.w	r7,0
800046b2:	c0 35       	brlt	800046b8 <flashc_issue_command+0x20>
800046b4:	f1 d7 d1 10 	bfins	r8,r7,0x8,0x10
800046b8:	3a 59       	mov	r9,-91
800046ba:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
800046be:	fe 69 00 00 	mov	r9,-131072
800046c2:	93 18       	st.w	r9[0x4],r8
800046c4:	72 29       	ld.w	r9,r9[0x8]
800046c6:	e2 19 00 0c 	andl	r9,0xc,COH
800046ca:	48 58       	lddpc	r8,800046dc <flashc_issue_command+0x44>
800046cc:	91 09       	st.w	r8[0x0],r9
800046ce:	48 38       	lddpc	r8,800046d8 <flashc_issue_command+0x40>
800046d0:	70 08       	ld.w	r8,r8[0x0]
800046d2:	5d 18       	icall	r8
800046d4:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800046d8:	00 00       	add	r0,r0
800046da:	04 78       	tst	r8,r2
800046dc:	00 00       	add	r0,r0
800046de:	0a 34       	cp.w	r4,r5

800046e0 <flashc_set_flash_waitstate_and_readmode>:
800046e0:	eb cd 40 80 	pushm	r7,lr
800046e4:	18 97       	mov	r7,r12
800046e6:	e0 68 8a 40 	mov	r8,35392
800046ea:	ea 18 01 f7 	orh	r8,0x1f7
800046ee:	10 3c       	cp.w	r12,r8
800046f0:	e0 88 00 18 	brls	80004720 <flashc_set_flash_waitstate_and_readmode+0x40>
800046f4:	30 1c       	mov	r12,1
800046f6:	f0 1f 00 10 	mcall	80004734 <flashc_set_flash_waitstate_and_readmode+0x54>
800046fa:	e0 68 14 80 	mov	r8,5248
800046fe:	ea 18 03 ef 	orh	r8,0x3ef
80004702:	10 37       	cp.w	r7,r8
80004704:	e0 8b 00 08 	brhi	80004714 <flashc_set_flash_waitstate_and_readmode+0x34>
80004708:	3f fb       	mov	r11,-1
8000470a:	31 1c       	mov	r12,17
8000470c:	f0 1f 00 0b 	mcall	80004738 <flashc_set_flash_waitstate_and_readmode+0x58>
80004710:	e3 cd 80 80 	ldm	sp++,r7,pc
80004714:	3f fb       	mov	r11,-1
80004716:	31 0c       	mov	r12,16
80004718:	f0 1f 00 08 	mcall	80004738 <flashc_set_flash_waitstate_and_readmode+0x58>
8000471c:	e3 cd 80 80 	ldm	sp++,r7,pc
80004720:	30 0c       	mov	r12,0
80004722:	f0 1f 00 05 	mcall	80004734 <flashc_set_flash_waitstate_and_readmode+0x54>
80004726:	3f fb       	mov	r11,-1
80004728:	31 1c       	mov	r12,17
8000472a:	f0 1f 00 04 	mcall	80004738 <flashc_set_flash_waitstate_and_readmode+0x58>
8000472e:	e3 cd 80 80 	ldm	sp++,r7,pc
80004732:	00 00       	add	r0,r0
80004734:	80 00       	ld.sh	r0,r0[0x0]
80004736:	46 6e       	lddsp	lr,sp[0x198]
80004738:	80 00       	ld.sh	r0,r0[0x0]
8000473a:	46 98       	lddsp	r8,sp[0x1a4]

8000473c <gpio_enable_module_pin>:
8000473c:	f8 08 16 05 	lsr	r8,r12,0x5
80004740:	a9 78       	lsl	r8,0x9
80004742:	e0 28 e0 00 	sub	r8,57344
80004746:	58 7b       	cp.w	r11,7
80004748:	e0 8b 00 05 	brhi	80004752 <gpio_enable_module_pin+0x16>
8000474c:	4a 09       	lddpc	r9,800047cc <gpio_enable_module_pin+0x90>
8000474e:	f2 0b 03 2f 	ld.w	pc,r9[r11<<0x2]
80004752:	5e ff       	retal	1
80004754:	30 19       	mov	r9,1
80004756:	f2 0c 09 49 	lsl	r9,r9,r12
8000475a:	91 69       	st.w	r8[0x18],r9
8000475c:	91 a9       	st.w	r8[0x28],r9
8000475e:	91 e9       	st.w	r8[0x38],r9
80004760:	c3 18       	rjmp	800047c2 <gpio_enable_module_pin+0x86>
80004762:	30 19       	mov	r9,1
80004764:	f2 0c 09 49 	lsl	r9,r9,r12
80004768:	91 59       	st.w	r8[0x14],r9
8000476a:	91 a9       	st.w	r8[0x28],r9
8000476c:	91 e9       	st.w	r8[0x38],r9
8000476e:	c2 a8       	rjmp	800047c2 <gpio_enable_module_pin+0x86>
80004770:	30 19       	mov	r9,1
80004772:	f2 0c 09 49 	lsl	r9,r9,r12
80004776:	91 69       	st.w	r8[0x18],r9
80004778:	91 99       	st.w	r8[0x24],r9
8000477a:	91 e9       	st.w	r8[0x38],r9
8000477c:	c2 38       	rjmp	800047c2 <gpio_enable_module_pin+0x86>
8000477e:	30 19       	mov	r9,1
80004780:	f2 0c 09 49 	lsl	r9,r9,r12
80004784:	91 59       	st.w	r8[0x14],r9
80004786:	91 99       	st.w	r8[0x24],r9
80004788:	91 e9       	st.w	r8[0x38],r9
8000478a:	c1 c8       	rjmp	800047c2 <gpio_enable_module_pin+0x86>
8000478c:	30 19       	mov	r9,1
8000478e:	f2 0c 09 49 	lsl	r9,r9,r12
80004792:	91 69       	st.w	r8[0x18],r9
80004794:	91 a9       	st.w	r8[0x28],r9
80004796:	91 d9       	st.w	r8[0x34],r9
80004798:	c1 58       	rjmp	800047c2 <gpio_enable_module_pin+0x86>
8000479a:	30 19       	mov	r9,1
8000479c:	f2 0c 09 49 	lsl	r9,r9,r12
800047a0:	91 59       	st.w	r8[0x14],r9
800047a2:	91 a9       	st.w	r8[0x28],r9
800047a4:	91 d9       	st.w	r8[0x34],r9
800047a6:	c0 e8       	rjmp	800047c2 <gpio_enable_module_pin+0x86>
800047a8:	30 19       	mov	r9,1
800047aa:	f2 0c 09 49 	lsl	r9,r9,r12
800047ae:	91 69       	st.w	r8[0x18],r9
800047b0:	91 99       	st.w	r8[0x24],r9
800047b2:	91 d9       	st.w	r8[0x34],r9
800047b4:	c0 78       	rjmp	800047c2 <gpio_enable_module_pin+0x86>
800047b6:	30 19       	mov	r9,1
800047b8:	f2 0c 09 49 	lsl	r9,r9,r12
800047bc:	91 59       	st.w	r8[0x14],r9
800047be:	91 99       	st.w	r8[0x24],r9
800047c0:	91 d9       	st.w	r8[0x34],r9
800047c2:	30 19       	mov	r9,1
800047c4:	f2 0c 09 4c 	lsl	r12,r9,r12
800047c8:	91 2c       	st.w	r8[0x8],r12
800047ca:	5e fd       	retal	0
800047cc:	80 00       	ld.sh	r0,r0[0x0]
800047ce:	a4 2c       	st.h	r2[0x4],r12

800047d0 <gpio_enable_module>:
800047d0:	d4 21       	pushm	r4-r7,lr
800047d2:	18 97       	mov	r7,r12
800047d4:	16 94       	mov	r4,r11
800047d6:	58 0b       	cp.w	r11,0
800047d8:	c0 31       	brne	800047de <gpio_enable_module+0xe>
800047da:	30 05       	mov	r5,0
800047dc:	c0 d8       	rjmp	800047f6 <gpio_enable_module+0x26>
800047de:	30 06       	mov	r6,0
800047e0:	0c 95       	mov	r5,r6
800047e2:	6e 1b       	ld.w	r11,r7[0x4]
800047e4:	6e 0c       	ld.w	r12,r7[0x0]
800047e6:	f0 1f 00 06 	mcall	800047fc <gpio_enable_module+0x2c>
800047ea:	18 45       	or	r5,r12
800047ec:	2f 87       	sub	r7,-8
800047ee:	2f f6       	sub	r6,-1
800047f0:	0c 34       	cp.w	r4,r6
800047f2:	fe 9b ff f8 	brhi	800047e2 <gpio_enable_module+0x12>
800047f6:	0a 9c       	mov	r12,r5
800047f8:	d8 22       	popm	r4-r7,pc
800047fa:	00 00       	add	r0,r0
800047fc:	80 00       	ld.sh	r0,r0[0x0]
800047fe:	47 3c       	lddsp	r12,sp[0x1cc]

80004800 <gpio_configure_pin>:
80004800:	f8 08 16 05 	lsr	r8,r12,0x5
80004804:	a9 78       	lsl	r8,0x9
80004806:	e0 28 e0 00 	sub	r8,57344
8000480a:	16 99       	mov	r9,r11
8000480c:	e2 19 00 08 	andl	r9,0x8,COH
80004810:	c0 70       	breq	8000481e <gpio_configure_pin+0x1e>
80004812:	30 19       	mov	r9,1
80004814:	f2 0c 09 49 	lsl	r9,r9,r12
80004818:	f1 49 00 84 	st.w	r8[132],r9
8000481c:	c0 68       	rjmp	80004828 <gpio_configure_pin+0x28>
8000481e:	30 19       	mov	r9,1
80004820:	f2 0c 09 49 	lsl	r9,r9,r12
80004824:	f1 49 00 88 	st.w	r8[136],r9
80004828:	16 99       	mov	r9,r11
8000482a:	e2 19 00 04 	andl	r9,0x4,COH
8000482e:	c0 70       	breq	8000483c <gpio_configure_pin+0x3c>
80004830:	30 19       	mov	r9,1
80004832:	f2 0c 09 49 	lsl	r9,r9,r12
80004836:	f1 49 00 74 	st.w	r8[116],r9
8000483a:	c0 68       	rjmp	80004846 <gpio_configure_pin+0x46>
8000483c:	30 19       	mov	r9,1
8000483e:	f2 0c 09 49 	lsl	r9,r9,r12
80004842:	f1 49 00 78 	st.w	r8[120],r9
80004846:	16 99       	mov	r9,r11
80004848:	e2 19 00 40 	andl	r9,0x40,COH
8000484c:	c0 70       	breq	8000485a <gpio_configure_pin+0x5a>
8000484e:	30 19       	mov	r9,1
80004850:	f2 0c 09 49 	lsl	r9,r9,r12
80004854:	f1 49 00 e4 	st.w	r8[228],r9
80004858:	c0 68       	rjmp	80004864 <gpio_configure_pin+0x64>
8000485a:	30 19       	mov	r9,1
8000485c:	f2 0c 09 49 	lsl	r9,r9,r12
80004860:	f1 49 00 e8 	st.w	r8[232],r9
80004864:	16 99       	mov	r9,r11
80004866:	e2 19 00 10 	andl	r9,0x10,COH
8000486a:	c0 70       	breq	80004878 <gpio_configure_pin+0x78>
8000486c:	30 19       	mov	r9,1
8000486e:	f2 0c 09 49 	lsl	r9,r9,r12
80004872:	f1 49 01 04 	st.w	r8[260],r9
80004876:	c0 68       	rjmp	80004882 <gpio_configure_pin+0x82>
80004878:	30 19       	mov	r9,1
8000487a:	f2 0c 09 49 	lsl	r9,r9,r12
8000487e:	f1 49 01 08 	st.w	r8[264],r9
80004882:	16 99       	mov	r9,r11
80004884:	e2 19 00 20 	andl	r9,0x20,COH
80004888:	c0 70       	breq	80004896 <gpio_configure_pin+0x96>
8000488a:	30 19       	mov	r9,1
8000488c:	f2 0c 09 49 	lsl	r9,r9,r12
80004890:	f1 49 01 14 	st.w	r8[276],r9
80004894:	c0 68       	rjmp	800048a0 <gpio_configure_pin+0xa0>
80004896:	30 19       	mov	r9,1
80004898:	f2 0c 09 49 	lsl	r9,r9,r12
8000489c:	f1 49 01 18 	st.w	r8[280],r9
800048a0:	16 99       	mov	r9,r11
800048a2:	e2 19 00 80 	andl	r9,0x80,COH
800048a6:	c2 40       	breq	800048ee <gpio_configure_pin+0xee>
800048a8:	16 99       	mov	r9,r11
800048aa:	e2 19 01 80 	andl	r9,0x180,COH
800048ae:	c0 90       	breq	800048c0 <gpio_configure_pin+0xc0>
800048b0:	30 19       	mov	r9,1
800048b2:	f2 0c 09 49 	lsl	r9,r9,r12
800048b6:	f1 49 00 a8 	st.w	r8[168],r9
800048ba:	f1 49 00 b8 	st.w	r8[184],r9
800048be:	c1 88       	rjmp	800048ee <gpio_configure_pin+0xee>
800048c0:	16 99       	mov	r9,r11
800048c2:	e2 19 02 80 	andl	r9,0x280,COH
800048c6:	c0 90       	breq	800048d8 <gpio_configure_pin+0xd8>
800048c8:	30 19       	mov	r9,1
800048ca:	f2 0c 09 49 	lsl	r9,r9,r12
800048ce:	f1 49 00 a4 	st.w	r8[164],r9
800048d2:	f1 49 00 b8 	st.w	r8[184],r9
800048d6:	c0 c8       	rjmp	800048ee <gpio_configure_pin+0xee>
800048d8:	16 99       	mov	r9,r11
800048da:	e2 19 03 80 	andl	r9,0x380,COH
800048de:	c0 80       	breq	800048ee <gpio_configure_pin+0xee>
800048e0:	30 19       	mov	r9,1
800048e2:	f2 0c 09 49 	lsl	r9,r9,r12
800048e6:	f1 49 00 a8 	st.w	r8[168],r9
800048ea:	f1 49 00 b4 	st.w	r8[180],r9
800048ee:	f3 db c0 01 	bfextu	r9,r11,0x0,0x1
800048f2:	c1 50       	breq	8000491c <gpio_configure_pin+0x11c>
800048f4:	e2 1b 00 02 	andl	r11,0x2,COH
800048f8:	c0 70       	breq	80004906 <gpio_configure_pin+0x106>
800048fa:	30 19       	mov	r9,1
800048fc:	f2 0c 09 49 	lsl	r9,r9,r12
80004900:	f1 49 00 54 	st.w	r8[84],r9
80004904:	c0 68       	rjmp	80004910 <gpio_configure_pin+0x110>
80004906:	30 19       	mov	r9,1
80004908:	f2 0c 09 49 	lsl	r9,r9,r12
8000490c:	f1 49 00 58 	st.w	r8[88],r9
80004910:	30 19       	mov	r9,1
80004912:	f2 0c 09 49 	lsl	r9,r9,r12
80004916:	f1 49 00 44 	st.w	r8[68],r9
8000491a:	c0 68       	rjmp	80004926 <gpio_configure_pin+0x126>
8000491c:	30 19       	mov	r9,1
8000491e:	f2 0c 09 49 	lsl	r9,r9,r12
80004922:	f1 49 00 48 	st.w	r8[72],r9
80004926:	30 19       	mov	r9,1
80004928:	f2 0c 09 4c 	lsl	r12,r9,r12
8000492c:	91 1c       	st.w	r8[0x4],r12
8000492e:	5e fc       	retal	r12

80004930 <gpio_get_pin_value>:
80004930:	f8 08 16 05 	lsr	r8,r12,0x5
80004934:	a9 78       	lsl	r8,0x9
80004936:	e0 28 e0 00 	sub	r8,57344
8000493a:	71 88       	ld.w	r8,r8[0x60]
8000493c:	f0 0c 0a 4c 	lsr	r12,r8,r12
80004940:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
80004944:	5e fc       	retal	r12

80004946 <gpio_set_gpio_pin>:
80004946:	f8 08 16 05 	lsr	r8,r12,0x5
8000494a:	a9 78       	lsl	r8,0x9
8000494c:	e0 28 e0 00 	sub	r8,57344
80004950:	30 19       	mov	r9,1
80004952:	f2 0c 09 4c 	lsl	r12,r9,r12
80004956:	f1 4c 00 54 	st.w	r8[84],r12
8000495a:	f1 4c 00 44 	st.w	r8[68],r12
8000495e:	91 1c       	st.w	r8[0x4],r12
80004960:	5e fc       	retal	r12

80004962 <gpio_clr_gpio_pin>:
80004962:	f8 08 16 05 	lsr	r8,r12,0x5
80004966:	a9 78       	lsl	r8,0x9
80004968:	e0 28 e0 00 	sub	r8,57344
8000496c:	30 19       	mov	r9,1
8000496e:	f2 0c 09 4c 	lsl	r12,r9,r12
80004972:	f1 4c 00 58 	st.w	r8[88],r12
80004976:	f1 4c 00 44 	st.w	r8[68],r12
8000497a:	91 1c       	st.w	r8[0x4],r12
8000497c:	5e fc       	retal	r12

8000497e <gpio_tgl_gpio_pin>:
8000497e:	f8 08 16 05 	lsr	r8,r12,0x5
80004982:	a9 78       	lsl	r8,0x9
80004984:	e0 28 e0 00 	sub	r8,57344
80004988:	30 19       	mov	r9,1
8000498a:	f2 0c 09 4c 	lsl	r12,r9,r12
8000498e:	f1 4c 00 5c 	st.w	r8[92],r12
80004992:	f1 4c 00 44 	st.w	r8[68],r12
80004996:	91 1c       	st.w	r8[0x4],r12
80004998:	5e fc       	retal	r12

8000499a <_unhandled_interrupt>:
8000499a:	c0 08       	rjmp	8000499a <_unhandled_interrupt>

8000499c <INTC_register_interrupt>:
8000499c:	f6 08 16 05 	lsr	r8,r11,0x5
800049a0:	49 99       	lddpc	r9,80004a04 <INTC_register_interrupt+0x68>
800049a2:	f2 08 00 39 	add	r9,r9,r8<<0x3
800049a6:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
800049aa:	72 19       	ld.w	r9,r9[0x4]
800049ac:	f2 0b 09 2c 	st.w	r9[r11<<0x2],r12
800049b0:	58 0a       	cp.w	r10,0
800049b2:	c0 91       	brne	800049c4 <INTC_register_interrupt+0x28>
800049b4:	49 59       	lddpc	r9,80004a08 <INTC_register_interrupt+0x6c>
800049b6:	49 6a       	lddpc	r10,80004a0c <INTC_register_interrupt+0x70>
800049b8:	12 1a       	sub	r10,r9
800049ba:	fe 79 00 00 	mov	r9,-65536
800049be:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800049c2:	5e fc       	retal	r12
800049c4:	58 1a       	cp.w	r10,1
800049c6:	c0 a1       	brne	800049da <INTC_register_interrupt+0x3e>
800049c8:	49 09       	lddpc	r9,80004a08 <INTC_register_interrupt+0x6c>
800049ca:	49 2a       	lddpc	r10,80004a10 <INTC_register_interrupt+0x74>
800049cc:	12 1a       	sub	r10,r9
800049ce:	bf aa       	sbr	r10,0x1e
800049d0:	fe 79 00 00 	mov	r9,-65536
800049d4:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800049d8:	5e fc       	retal	r12
800049da:	58 2a       	cp.w	r10,2
800049dc:	c0 a1       	brne	800049f0 <INTC_register_interrupt+0x54>
800049de:	48 b9       	lddpc	r9,80004a08 <INTC_register_interrupt+0x6c>
800049e0:	48 da       	lddpc	r10,80004a14 <INTC_register_interrupt+0x78>
800049e2:	12 1a       	sub	r10,r9
800049e4:	bf ba       	sbr	r10,0x1f
800049e6:	fe 79 00 00 	mov	r9,-65536
800049ea:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800049ee:	5e fc       	retal	r12
800049f0:	48 69       	lddpc	r9,80004a08 <INTC_register_interrupt+0x6c>
800049f2:	48 aa       	lddpc	r10,80004a18 <INTC_register_interrupt+0x7c>
800049f4:	12 1a       	sub	r10,r9
800049f6:	ea 1a c0 00 	orh	r10,0xc000
800049fa:	fe 79 00 00 	mov	r9,-65536
800049fe:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80004a02:	5e fc       	retal	r12
80004a04:	80 00       	ld.sh	r0,r0[0x0]
80004a06:	a4 4c       	st.h	r2[0x8],r12
80004a08:	80 00       	ld.sh	r0,r0[0x0]
80004a0a:	a0 00       	st.h	r0[0x0],r0
80004a0c:	80 00       	ld.sh	r0,r0[0x0]
80004a0e:	a1 04       	ld.d	r4,r0
80004a10:	80 00       	ld.sh	r0,r0[0x0]
80004a12:	a1 12       	ld.d	r2,--r0
80004a14:	80 00       	ld.sh	r0,r0[0x0]
80004a16:	a1 20       	st.d	r0++,r0
80004a18:	80 00       	ld.sh	r0,r0[0x0]
80004a1a:	a1 2e       	st.d	r0++,lr

80004a1c <INTC_init_interrupts>:
80004a1c:	d4 21       	pushm	r4-r7,lr
80004a1e:	49 18       	lddpc	r8,80004a60 <INTC_init_interrupts+0x44>
80004a20:	e3 b8 00 01 	mtsr	0x4,r8
80004a24:	49 0e       	lddpc	lr,80004a64 <INTC_init_interrupts+0x48>
80004a26:	30 07       	mov	r7,0
80004a28:	0e 94       	mov	r4,r7
80004a2a:	49 0c       	lddpc	r12,80004a68 <INTC_init_interrupts+0x4c>
80004a2c:	49 05       	lddpc	r5,80004a6c <INTC_init_interrupts+0x50>
80004a2e:	10 15       	sub	r5,r8
80004a30:	fe 76 00 00 	mov	r6,-65536
80004a34:	c1 18       	rjmp	80004a56 <INTC_init_interrupts+0x3a>
80004a36:	08 98       	mov	r8,r4
80004a38:	7c 1b       	ld.w	r11,lr[0x4]
80004a3a:	7c 0a       	ld.w	r10,lr[0x0]
80004a3c:	f6 08 09 2c 	st.w	r11[r8<<0x2],r12
80004a40:	2f f8       	sub	r8,-1
80004a42:	10 3a       	cp.w	r10,r8
80004a44:	fe 9b ff fc 	brhi	80004a3c <INTC_init_interrupts+0x20>
80004a48:	ec 07 09 25 	st.w	r6[r7<<0x2],r5
80004a4c:	2f f7       	sub	r7,-1
80004a4e:	2f 8e       	sub	lr,-8
80004a50:	e0 47 00 2f 	cp.w	r7,47
80004a54:	c0 50       	breq	80004a5e <INTC_init_interrupts+0x42>
80004a56:	7c 08       	ld.w	r8,lr[0x0]
80004a58:	58 08       	cp.w	r8,0
80004a5a:	ce e1       	brne	80004a36 <INTC_init_interrupts+0x1a>
80004a5c:	cf 6b       	rjmp	80004a48 <INTC_init_interrupts+0x2c>
80004a5e:	d8 22       	popm	r4-r7,pc
80004a60:	80 00       	ld.sh	r0,r0[0x0]
80004a62:	a0 00       	st.h	r0[0x0],r0
80004a64:	80 00       	ld.sh	r0,r0[0x0]
80004a66:	a4 4c       	st.h	r2[0x8],r12
80004a68:	80 00       	ld.sh	r0,r0[0x0]
80004a6a:	49 9a       	lddpc	r10,80004acc <pcl_switch_to_osc+0x4>
80004a6c:	80 00       	ld.sh	r0,r0[0x0]
80004a6e:	a1 04       	ld.d	r4,r0

80004a70 <_get_interrupt_handler>:
80004a70:	fe 78 00 00 	mov	r8,-65536
80004a74:	e0 69 00 83 	mov	r9,131
80004a78:	f2 0c 01 0c 	sub	r12,r9,r12
80004a7c:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
80004a80:	f2 ca ff c0 	sub	r10,r9,-64
80004a84:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
80004a88:	58 08       	cp.w	r8,0
80004a8a:	c0 21       	brne	80004a8e <_get_interrupt_handler+0x1e>
80004a8c:	5e fd       	retal	0
80004a8e:	f0 08 12 00 	clz	r8,r8
80004a92:	48 5a       	lddpc	r10,80004aa4 <_get_interrupt_handler+0x34>
80004a94:	f4 09 00 39 	add	r9,r10,r9<<0x3
80004a98:	f0 08 11 1f 	rsub	r8,r8,31
80004a9c:	72 19       	ld.w	r9,r9[0x4]
80004a9e:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
80004aa2:	5e fc       	retal	r12
80004aa4:	80 00       	ld.sh	r0,r0[0x0]
80004aa6:	a4 4c       	st.h	r2[0x8],r12

80004aa8 <pm_set_mclk_source>:
80004aa8:	e1 b9 00 00 	mfsr	r9,0x0
80004aac:	d3 03       	ssrf	0x10
80004aae:	fe 78 04 00 	mov	r8,-64512
80004ab2:	fc 1a aa 00 	movh	r10,0xaa00
80004ab6:	f1 4a 00 58 	st.w	r8[88],r10
80004aba:	91 0c       	st.w	r8[0x0],r12
80004abc:	12 98       	mov	r8,r9
80004abe:	e6 18 00 01 	andh	r8,0x1,COH
80004ac2:	c0 21       	brne	80004ac6 <pm_set_mclk_source+0x1e>
80004ac4:	d5 03       	csrf	0x10
80004ac6:	5e fd       	retal	0

80004ac8 <pcl_switch_to_osc>:
80004ac8:	eb cd 40 c0 	pushm	r6-r7,lr
80004acc:	16 97       	mov	r7,r11
80004ace:	14 96       	mov	r6,r10
80004ad0:	58 0c       	cp.w	r12,0
80004ad2:	c0 50       	breq	80004adc <pcl_switch_to_osc+0x14>
80004ad4:	fe 7c d8 f0 	mov	r12,-10000
80004ad8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80004adc:	30 0c       	mov	r12,0
80004ade:	f0 1f 00 08 	mcall	80004afc <pcl_switch_to_osc+0x34>
80004ae2:	30 1a       	mov	r10,1
80004ae4:	0c 9b       	mov	r11,r6
80004ae6:	30 0c       	mov	r12,0
80004ae8:	f0 1f 00 06 	mcall	80004b00 <pcl_switch_to_osc+0x38>
80004aec:	0e 9c       	mov	r12,r7
80004aee:	f0 1f 00 06 	mcall	80004b04 <pcl_switch_to_osc+0x3c>
80004af2:	30 1c       	mov	r12,1
80004af4:	f0 1f 00 05 	mcall	80004b08 <pcl_switch_to_osc+0x40>
80004af8:	e3 cf 80 c0 	ldm	sp++,r6-r7,pc,r12=0
80004afc:	80 00       	ld.sh	r0,r0[0x0]
80004afe:	4c 74       	lddpc	r4,80004c18 <scif_enable_osc+0x18>
80004b00:	80 00       	ld.sh	r0,r0[0x0]
80004b02:	4c 00       	lddpc	r0,80004c00 <scif_enable_osc>
80004b04:	80 00       	ld.sh	r0,r0[0x0]
80004b06:	46 e0       	lddsp	r0,sp[0x1b8]
80004b08:	80 00       	ld.sh	r0,r0[0x0]
80004b0a:	4a a8       	lddpc	r8,80004bb0 <scif_gc_setup+0x58>

80004b0c <scif_pclksr_statushigh_wait>:
80004b0c:	e0 78 86 a0 	mov	r8,100000
80004b10:	fe 7a 08 00 	mov	r10,-63488
80004b14:	c0 48       	rjmp	80004b1c <scif_pclksr_statushigh_wait+0x10>
80004b16:	20 18       	sub	r8,1
80004b18:	c0 21       	brne	80004b1c <scif_pclksr_statushigh_wait+0x10>
80004b1a:	5e fe       	retal	-1
80004b1c:	74 59       	ld.w	r9,r10[0x14]
80004b1e:	f9 e9 00 09 	and	r9,r12,r9
80004b22:	cf a0       	breq	80004b16 <scif_pclksr_statushigh_wait+0xa>
80004b24:	5e fd       	retal	0

80004b26 <scif_stop_gclk>:
80004b26:	fe 78 08 00 	mov	r8,-63488
80004b2a:	f8 c9 ff e7 	sub	r9,r12,-25
80004b2e:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
80004b32:	a1 ca       	cbr	r10,0x0
80004b34:	f0 09 09 2a 	st.w	r8[r9<<0x2],r10
80004b38:	e0 78 86 a0 	mov	r8,100000
80004b3c:	fe 7a 08 00 	mov	r10,-63488
80004b40:	12 9c       	mov	r12,r9
80004b42:	c0 48       	rjmp	80004b4a <scif_stop_gclk+0x24>
80004b44:	20 18       	sub	r8,1
80004b46:	c0 21       	brne	80004b4a <scif_stop_gclk+0x24>
80004b48:	5e fe       	retal	-1
80004b4a:	f4 0c 03 29 	ld.w	r9,r10[r12<<0x2]
80004b4e:	f3 d9 c0 01 	bfextu	r9,r9,0x0,0x1
80004b52:	cf 91       	brne	80004b44 <scif_stop_gclk+0x1e>
80004b54:	5e fd       	retal	0
80004b56:	d7 03       	nop

80004b58 <scif_gc_setup>:
80004b58:	d4 21       	pushm	r4-r7,lr
80004b5a:	18 97       	mov	r7,r12
80004b5c:	16 95       	mov	r5,r11
80004b5e:	14 96       	mov	r6,r10
80004b60:	a1 99       	lsr	r9,0x1
80004b62:	f2 c4 00 01 	sub	r4,r9,1
80004b66:	f8 c9 ff e7 	sub	r9,r12,-25
80004b6a:	fe 78 08 00 	mov	r8,-63488
80004b6e:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
80004b72:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80004b76:	c0 50       	breq	80004b80 <scif_gc_setup+0x28>
80004b78:	f0 1f 00 18 	mcall	80004bd8 <scif_gc_setup+0x80>
80004b7c:	c1 44       	brge	80004ba4 <scif_gc_setup+0x4c>
80004b7e:	dc 2a       	popm	r4-r7,pc,r12=-1
80004b80:	a1 76       	lsl	r6,0x1
80004b82:	e2 16 00 02 	andl	r6,0x2,COH
80004b86:	a9 65       	lsl	r5,0x8
80004b88:	e2 15 0f 00 	andl	r5,0xf00,COH
80004b8c:	0a 46       	or	r6,r5
80004b8e:	b1 64       	lsl	r4,0x10
80004b90:	e6 14 00 ff 	andh	r4,0xff,COH
80004b94:	ed e4 10 04 	or	r4,r6,r4
80004b98:	2e 77       	sub	r7,-25
80004b9a:	fe 78 08 00 	mov	r8,-63488
80004b9e:	f0 07 09 24 	st.w	r8[r7<<0x2],r4
80004ba2:	d8 2a       	popm	r4-r7,pc,r12=0
80004ba4:	ec 09 15 01 	lsl	r9,r6,0x1
80004ba8:	e2 19 00 02 	andl	r9,0x2,COH
80004bac:	ea 08 15 08 	lsl	r8,r5,0x8
80004bb0:	e2 18 0f 00 	andl	r8,0xf00,COH
80004bb4:	10 49       	or	r9,r8
80004bb6:	e8 08 15 10 	lsl	r8,r4,0x10
80004bba:	e6 18 00 ff 	andh	r8,0xff,COH
80004bbe:	10 49       	or	r9,r8
80004bc0:	fe 78 08 00 	mov	r8,-63488
80004bc4:	2e 77       	sub	r7,-25
80004bc6:	f0 07 09 29 	st.w	r8[r7<<0x2],r9
80004bca:	f0 07 03 29 	ld.w	r9,r8[r7<<0x2]
80004bce:	a1 a9       	sbr	r9,0x0
80004bd0:	f0 07 09 29 	st.w	r8[r7<<0x2],r9
80004bd4:	d8 2a       	popm	r4-r7,pc,r12=0
80004bd6:	00 00       	add	r0,r0
80004bd8:	80 00       	ld.sh	r0,r0[0x0]
80004bda:	4b 26       	lddpc	r6,80004ca0 <scif_configure_osc_crystalmode+0x2c>

80004bdc <scif_gc_enable>:
80004bdc:	f8 c9 ff e7 	sub	r9,r12,-25
80004be0:	fe 78 08 00 	mov	r8,-63488
80004be4:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
80004be8:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80004bec:	c0 91       	brne	80004bfe <scif_gc_enable+0x22>
80004bee:	fe 78 08 00 	mov	r8,-63488
80004bf2:	12 9c       	mov	r12,r9
80004bf4:	f0 09 03 29 	ld.w	r9,r8[r9<<0x2]
80004bf8:	a1 a9       	sbr	r9,0x0
80004bfa:	f0 0c 09 29 	st.w	r8[r12<<0x2],r9
80004bfe:	5e fd       	retal	0

80004c00 <scif_enable_osc>:
80004c00:	eb cd 40 80 	pushm	r7,lr
80004c04:	20 2d       	sub	sp,8
80004c06:	fa c8 ff f8 	sub	r8,sp,-8
80004c0a:	f0 0c 00 2e 	add	lr,r8,r12<<0x2
80004c0e:	fe 78 08 00 	mov	r8,-63488
80004c12:	f8 c9 ff f7 	sub	r9,r12,-9
80004c16:	f0 09 03 27 	ld.w	r7,r8[r9<<0x2]
80004c1a:	ef db d1 04 	bfins	r7,r11,0x8,0x4
80004c1e:	30 1b       	mov	r11,1
80004c20:	ef db d2 01 	bfins	r7,r11,0x10,0x1
80004c24:	fd 47 ff f8 	st.w	lr[-8],r7
80004c28:	e1 bb 00 00 	mfsr	r11,0x0
80004c2c:	d3 03       	ssrf	0x10
80004c2e:	f2 07 15 02 	lsl	r7,r9,0x2
80004c32:	ea 17 aa 00 	orh	r7,0xaa00
80004c36:	91 67       	st.w	r8[0x18],r7
80004c38:	fc fe ff f8 	ld.w	lr,lr[-8]
80004c3c:	f0 09 09 2e 	st.w	r8[r9<<0x2],lr
80004c40:	16 98       	mov	r8,r11
80004c42:	e6 18 00 01 	andh	r8,0x1,COH
80004c46:	c0 21       	brne	80004c4a <scif_enable_osc+0x4a>
80004c48:	d5 03       	csrf	0x10
80004c4a:	58 0a       	cp.w	r10,0
80004c4c:	c0 e0       	breq	80004c68 <scif_enable_osc+0x68>
80004c4e:	58 0c       	cp.w	r12,0
80004c50:	c0 61       	brne	80004c5c <scif_enable_osc+0x5c>
80004c52:	30 1c       	mov	r12,1
80004c54:	f0 1f 00 07 	mcall	80004c70 <scif_enable_osc+0x70>
80004c58:	c0 80       	breq	80004c68 <scif_enable_osc+0x68>
80004c5a:	c0 58       	rjmp	80004c64 <scif_enable_osc+0x64>
80004c5c:	30 2c       	mov	r12,2
80004c5e:	f0 1f 00 05 	mcall	80004c70 <scif_enable_osc+0x70>
80004c62:	c0 30       	breq	80004c68 <scif_enable_osc+0x68>
80004c64:	3f fc       	mov	r12,-1
80004c66:	c0 28       	rjmp	80004c6a <scif_enable_osc+0x6a>
80004c68:	30 0c       	mov	r12,0
80004c6a:	2f ed       	sub	sp,-8
80004c6c:	e3 cd 80 80 	ldm	sp++,r7,pc
80004c70:	80 00       	ld.sh	r0,r0[0x0]
80004c72:	4b 0c       	lddpc	r12,80004d30 <scif_configure_osc_crystalmode+0xbc>

80004c74 <scif_configure_osc_crystalmode>:
80004c74:	58 0c       	cp.w	r12,0
80004c76:	c3 41       	brne	80004cde <scif_configure_osc_crystalmode+0x6a>
80004c78:	fe 78 08 00 	mov	r8,-63488
80004c7c:	70 98       	ld.w	r8,r8[0x24]
80004c7e:	e0 69 84 7f 	mov	r9,33919
80004c82:	ea 19 00 1e 	orh	r9,0x1e
80004c86:	12 3b       	cp.w	r11,r9
80004c88:	e0 8b 00 04 	brhi	80004c90 <scif_configure_osc_crystalmode+0x1c>
80004c8c:	30 0b       	mov	r11,0
80004c8e:	c1 38       	rjmp	80004cb4 <scif_configure_osc_crystalmode+0x40>
80004c90:	e0 69 96 7f 	mov	r9,38527
80004c94:	ea 19 00 98 	orh	r9,0x98
80004c98:	12 3b       	cp.w	r11,r9
80004c9a:	e0 8b 00 04 	brhi	80004ca2 <scif_configure_osc_crystalmode+0x2e>
80004c9e:	30 1b       	mov	r11,1
80004ca0:	c0 a8       	rjmp	80004cb4 <scif_configure_osc_crystalmode+0x40>
80004ca2:	e0 69 24 00 	mov	r9,9216
80004ca6:	ea 19 00 f4 	orh	r9,0xf4
80004caa:	12 3b       	cp.w	r11,r9
80004cac:	f9 bb 03 02 	movlo	r11,2
80004cb0:	f9 bb 02 03 	movhs	r11,3
80004cb4:	30 19       	mov	r9,1
80004cb6:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80004cba:	f1 db d0 22 	bfins	r8,r11,0x1,0x2
80004cbe:	e1 ba 00 00 	mfsr	r10,0x0
80004cc2:	d3 03       	ssrf	0x10
80004cc4:	fe 79 08 00 	mov	r9,-63488
80004cc8:	32 4b       	mov	r11,36
80004cca:	ea 1b aa 00 	orh	r11,0xaa00
80004cce:	93 6b       	st.w	r9[0x18],r11
80004cd0:	93 98       	st.w	r9[0x24],r8
80004cd2:	14 98       	mov	r8,r10
80004cd4:	e6 18 00 01 	andh	r8,0x1,COH
80004cd8:	c3 51       	brne	80004d42 <scif_configure_osc_crystalmode+0xce>
80004cda:	d5 03       	csrf	0x10
80004cdc:	c3 38       	rjmp	80004d42 <scif_configure_osc_crystalmode+0xce>
80004cde:	fe 78 08 00 	mov	r8,-63488
80004ce2:	70 a8       	ld.w	r8,r8[0x28]
80004ce4:	e0 69 84 7f 	mov	r9,33919
80004ce8:	ea 19 00 1e 	orh	r9,0x1e
80004cec:	12 3b       	cp.w	r11,r9
80004cee:	e0 8b 00 04 	brhi	80004cf6 <scif_configure_osc_crystalmode+0x82>
80004cf2:	30 0b       	mov	r11,0
80004cf4:	c1 38       	rjmp	80004d1a <scif_configure_osc_crystalmode+0xa6>
80004cf6:	e0 69 96 7f 	mov	r9,38527
80004cfa:	ea 19 00 98 	orh	r9,0x98
80004cfe:	12 3b       	cp.w	r11,r9
80004d00:	e0 8b 00 04 	brhi	80004d08 <scif_configure_osc_crystalmode+0x94>
80004d04:	30 1b       	mov	r11,1
80004d06:	c0 a8       	rjmp	80004d1a <scif_configure_osc_crystalmode+0xa6>
80004d08:	e0 69 24 00 	mov	r9,9216
80004d0c:	ea 19 00 f4 	orh	r9,0xf4
80004d10:	12 3b       	cp.w	r11,r9
80004d12:	f9 bb 03 02 	movlo	r11,2
80004d16:	f9 bb 02 03 	movhs	r11,3
80004d1a:	30 19       	mov	r9,1
80004d1c:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80004d20:	f1 db d0 22 	bfins	r8,r11,0x1,0x2
80004d24:	e1 ba 00 00 	mfsr	r10,0x0
80004d28:	d3 03       	ssrf	0x10
80004d2a:	fe 79 08 00 	mov	r9,-63488
80004d2e:	32 8b       	mov	r11,40
80004d30:	ea 1b aa 00 	orh	r11,0xaa00
80004d34:	93 6b       	st.w	r9[0x18],r11
80004d36:	93 a8       	st.w	r9[0x28],r8
80004d38:	14 98       	mov	r8,r10
80004d3a:	e6 18 00 01 	andh	r8,0x1,COH
80004d3e:	c0 21       	brne	80004d42 <scif_configure_osc_crystalmode+0xce>
80004d40:	d5 03       	csrf	0x10
80004d42:	5e fd       	retal	0

80004d44 <tc_init_waveform>:
80004d44:	76 09       	ld.w	r9,r11[0x0]
80004d46:	58 29       	cp.w	r9,2
80004d48:	e0 88 00 03 	brls	80004d4e <tc_init_waveform+0xa>
80004d4c:	5e fe       	retal	-1
80004d4e:	76 18       	ld.w	r8,r11[0x4]
80004d50:	f5 d8 c0 03 	bfextu	r10,r8,0x0,0x3
80004d54:	af ba       	sbr	r10,0xf
80004d56:	10 9b       	mov	r11,r8
80004d58:	e6 1b c0 00 	andh	r11,0xc000,COH
80004d5c:	16 4a       	or	r10,r11
80004d5e:	10 9b       	mov	r11,r8
80004d60:	e6 1b 30 00 	andh	r11,0x3000,COH
80004d64:	16 4a       	or	r10,r11
80004d66:	10 9b       	mov	r11,r8
80004d68:	e6 1b 0c 00 	andh	r11,0xc00,COH
80004d6c:	16 4a       	or	r10,r11
80004d6e:	10 9b       	mov	r11,r8
80004d70:	e6 1b 03 00 	andh	r11,0x300,COH
80004d74:	16 4a       	or	r10,r11
80004d76:	10 9b       	mov	r11,r8
80004d78:	e6 1b 00 c0 	andh	r11,0xc0,COH
80004d7c:	16 4a       	or	r10,r11
80004d7e:	10 9b       	mov	r11,r8
80004d80:	e6 1b 00 30 	andh	r11,0x30,COH
80004d84:	16 4a       	or	r10,r11
80004d86:	10 9b       	mov	r11,r8
80004d88:	e6 1b 00 0c 	andh	r11,0xc,COH
80004d8c:	16 4a       	or	r10,r11
80004d8e:	10 9b       	mov	r11,r8
80004d90:	e6 1b 00 03 	andh	r11,0x3,COH
80004d94:	16 4a       	or	r10,r11
80004d96:	10 9b       	mov	r11,r8
80004d98:	e2 1b 60 00 	andl	r11,0x6000,COH
80004d9c:	16 4a       	or	r10,r11
80004d9e:	f7 d8 c1 81 	bfextu	r11,r8,0xc,0x1
80004da2:	f5 eb 10 ca 	or	r10,r10,r11<<0xc
80004da6:	10 9b       	mov	r11,r8
80004da8:	e2 1b 0c 00 	andl	r11,0xc00,COH
80004dac:	16 4a       	or	r10,r11
80004dae:	10 9b       	mov	r11,r8
80004db0:	e2 1b 03 00 	andl	r11,0x300,COH
80004db4:	16 4a       	or	r10,r11
80004db6:	f7 d8 c0 e1 	bfextu	r11,r8,0x7,0x1
80004dba:	f5 eb 10 7a 	or	r10,r10,r11<<0x7
80004dbe:	f7 d8 c0 c1 	bfextu	r11,r8,0x6,0x1
80004dc2:	f5 eb 10 6a 	or	r10,r10,r11<<0x6
80004dc6:	10 9b       	mov	r11,r8
80004dc8:	e2 1b 00 30 	andl	r11,0x30,COH
80004dcc:	16 4a       	or	r10,r11
80004dce:	f1 d8 c0 61 	bfextu	r8,r8,0x3,0x1
80004dd2:	f5 e8 10 38 	or	r8,r10,r8<<0x3
80004dd6:	a5 69       	lsl	r9,0x4
80004dd8:	2f f9       	sub	r9,-1
80004dda:	f8 09 09 28 	st.w	r12[r9<<0x2],r8
80004dde:	5e fd       	retal	0

80004de0 <tc_start>:
80004de0:	58 2b       	cp.w	r11,2
80004de2:	e0 88 00 03 	brls	80004de8 <tc_start+0x8>
80004de6:	5e fe       	retal	-1
80004de8:	a7 6b       	lsl	r11,0x6
80004dea:	16 0c       	add	r12,r11
80004dec:	30 58       	mov	r8,5
80004dee:	99 08       	st.w	r12[0x0],r8
80004df0:	5e fd       	retal	0

80004df2 <tc_read_sr>:
80004df2:	58 2b       	cp.w	r11,2
80004df4:	e0 88 00 03 	brls	80004dfa <tc_read_sr+0x8>
80004df8:	5e fe       	retal	-1
80004dfa:	a7 6b       	lsl	r11,0x6
80004dfc:	2e 0b       	sub	r11,-32
80004dfe:	16 0c       	add	r12,r11
80004e00:	78 0c       	ld.w	r12,r12[0x0]
80004e02:	5e fc       	retal	r12

80004e04 <tc_write_rc>:
80004e04:	58 2b       	cp.w	r11,2
80004e06:	e0 88 00 03 	brls	80004e0c <tc_write_rc+0x8>
80004e0a:	5e fe       	retal	-1
80004e0c:	f6 08 15 04 	lsl	r8,r11,0x4
80004e10:	2f f8       	sub	r8,-1
80004e12:	f8 08 03 28 	ld.w	r8,r12[r8<<0x2]
80004e16:	e2 18 80 00 	andl	r8,0x8000,COH
80004e1a:	c0 c0       	breq	80004e32 <tc_write_rc+0x2e>
80004e1c:	a7 6b       	lsl	r11,0x6
80004e1e:	16 0c       	add	r12,r11
80004e20:	2e 4c       	sub	r12,-28
80004e22:	78 08       	ld.w	r8,r12[0x0]
80004e24:	f3 da c0 10 	bfextu	r9,r10,0x0,0x10
80004e28:	e0 18 00 00 	andl	r8,0x0
80004e2c:	f3 e8 10 08 	or	r8,r9,r8
80004e30:	99 08       	st.w	r12[0x0],r8
80004e32:	f9 da c0 10 	bfextu	r12,r10,0x0,0x10
80004e36:	5e fc       	retal	r12

80004e38 <tc_configure_interrupts>:
80004e38:	eb cd 40 fc 	pushm	r2-r7,lr
80004e3c:	e1 b9 00 00 	mfsr	r9,0x0
80004e40:	58 2b       	cp.w	r11,2
80004e42:	e0 88 00 04 	brls	80004e4a <tc_configure_interrupts+0x12>
80004e46:	e3 cf c0 fc 	ldm	sp++,r2-r7,pc,r12=-1
80004e4a:	ee 19 00 01 	eorh	r9,0x1
80004e4e:	f3 d9 c2 01 	bfextu	r9,r9,0x10,0x1
80004e52:	74 08       	ld.w	r8,r10[0x0]
80004e54:	ef d8 c0 e1 	bfextu	r7,r8,0x7,0x1
80004e58:	fd d8 c0 c1 	bfextu	lr,r8,0x6,0x1
80004e5c:	a7 6e       	lsl	lr,0x6
80004e5e:	fd e7 10 7e 	or	lr,lr,r7<<0x7
80004e62:	ef d8 c0 01 	bfextu	r7,r8,0x0,0x1
80004e66:	0e 4e       	or	lr,r7
80004e68:	ef d8 c0 a1 	bfextu	r7,r8,0x5,0x1
80004e6c:	fd e7 10 5e 	or	lr,lr,r7<<0x5
80004e70:	ef d8 c0 81 	bfextu	r7,r8,0x4,0x1
80004e74:	fd e7 10 4e 	or	lr,lr,r7<<0x4
80004e78:	ef d8 c0 61 	bfextu	r7,r8,0x3,0x1
80004e7c:	fd e7 10 3e 	or	lr,lr,r7<<0x3
80004e80:	ef d8 c0 41 	bfextu	r7,r8,0x2,0x1
80004e84:	fd e7 10 2e 	or	lr,lr,r7<<0x2
80004e88:	f1 d8 c0 21 	bfextu	r8,r8,0x1,0x1
80004e8c:	fd e8 10 18 	or	r8,lr,r8<<0x1
80004e90:	f6 0e 15 06 	lsl	lr,r11,0x6
80004e94:	f8 0e 00 0e 	add	lr,r12,lr
80004e98:	2d ce       	sub	lr,-36
80004e9a:	9d 08       	st.w	lr[0x0],r8
80004e9c:	58 09       	cp.w	r9,0
80004e9e:	c0 20       	breq	80004ea2 <tc_configure_interrupts+0x6a>
80004ea0:	d3 03       	ssrf	0x10
80004ea2:	74 08       	ld.w	r8,r10[0x0]
80004ea4:	f1 d8 c0 e1 	bfextu	r8,r8,0x7,0x1
80004ea8:	e0 65 00 80 	mov	r5,128
80004eac:	f9 b5 01 00 	movne	r5,0
80004eb0:	74 08       	ld.w	r8,r10[0x0]
80004eb2:	f1 d8 c0 c1 	bfextu	r8,r8,0x6,0x1
80004eb6:	f9 b4 00 40 	moveq	r4,64
80004eba:	f9 b4 01 00 	movne	r4,0
80004ebe:	74 08       	ld.w	r8,r10[0x0]
80004ec0:	f1 d8 c0 a1 	bfextu	r8,r8,0x5,0x1
80004ec4:	f9 b3 00 20 	moveq	r3,32
80004ec8:	f9 b3 01 00 	movne	r3,0
80004ecc:	74 08       	ld.w	r8,r10[0x0]
80004ece:	f1 d8 c0 81 	bfextu	r8,r8,0x4,0x1
80004ed2:	f9 b2 00 10 	moveq	r2,16
80004ed6:	f9 b2 01 00 	movne	r2,0
80004eda:	74 08       	ld.w	r8,r10[0x0]
80004edc:	f1 d8 c0 61 	bfextu	r8,r8,0x3,0x1
80004ee0:	f9 b6 00 08 	moveq	r6,8
80004ee4:	f9 b6 01 00 	movne	r6,0
80004ee8:	74 08       	ld.w	r8,r10[0x0]
80004eea:	f1 d8 c0 41 	bfextu	r8,r8,0x2,0x1
80004eee:	f9 b7 00 04 	moveq	r7,4
80004ef2:	f9 b7 01 00 	movne	r7,0
80004ef6:	74 08       	ld.w	r8,r10[0x0]
80004ef8:	f1 d8 c0 21 	bfextu	r8,r8,0x1,0x1
80004efc:	f9 be 00 02 	moveq	lr,2
80004f00:	f9 be 01 00 	movne	lr,0
80004f04:	74 08       	ld.w	r8,r10[0x0]
80004f06:	ec 18 00 01 	eorl	r8,0x1
80004f0a:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80004f0e:	eb e8 10 08 	or	r8,r5,r8
80004f12:	08 48       	or	r8,r4
80004f14:	06 48       	or	r8,r3
80004f16:	04 48       	or	r8,r2
80004f18:	0c 48       	or	r8,r6
80004f1a:	0e 48       	or	r8,r7
80004f1c:	1c 48       	or	r8,lr
80004f1e:	f6 0a 15 06 	lsl	r10,r11,0x6
80004f22:	f8 0a 00 0a 	add	r10,r12,r10
80004f26:	2d 8a       	sub	r10,-40
80004f28:	95 08       	st.w	r10[0x0],r8
80004f2a:	a7 6b       	lsl	r11,0x6
80004f2c:	2e 0b       	sub	r11,-32
80004f2e:	16 0c       	add	r12,r11
80004f30:	78 08       	ld.w	r8,r12[0x0]
80004f32:	58 09       	cp.w	r9,0
80004f34:	c0 31       	brne	80004f3a <tc_configure_interrupts+0x102>
80004f36:	e3 cf 80 fc 	ldm	sp++,r2-r7,pc,r12=0
80004f3a:	d5 03       	csrf	0x10
80004f3c:	e3 cf 80 fc 	ldm	sp++,r2-r7,pc,r12=0

80004f40 <usart_set_async_baudrate>:
80004f40:	d4 01       	pushm	lr
80004f42:	f6 08 15 04 	lsl	r8,r11,0x4
80004f46:	14 38       	cp.w	r8,r10
80004f48:	f9 b8 08 10 	movls	r8,16
80004f4c:	f9 b8 0b 08 	movhi	r8,8
80004f50:	f0 0b 02 4b 	mul	r11,r8,r11
80004f54:	f6 09 16 01 	lsr	r9,r11,0x1
80004f58:	f2 0a 00 3a 	add	r10,r9,r10<<0x3
80004f5c:	f4 0b 0d 0a 	divu	r10,r10,r11
80004f60:	f4 09 16 03 	lsr	r9,r10,0x3
80004f64:	f2 cb 00 01 	sub	r11,r9,1
80004f68:	e0 4b ff fe 	cp.w	r11,65534
80004f6c:	e0 88 00 03 	brls	80004f72 <usart_set_async_baudrate+0x32>
80004f70:	da 0a       	popm	pc,r12=1
80004f72:	78 1b       	ld.w	r11,r12[0x4]
80004f74:	e8 6e 00 00 	mov	lr,524288
80004f78:	59 08       	cp.w	r8,16
80004f7a:	fc 08 17 10 	movne	r8,lr
80004f7e:	f9 b8 00 00 	moveq	r8,0
80004f82:	e4 1b ff f7 	andh	r11,0xfff7
80004f86:	e0 1b fe cf 	andl	r11,0xfecf
80004f8a:	16 48       	or	r8,r11
80004f8c:	99 18       	st.w	r12[0x4],r8
80004f8e:	f5 da c0 03 	bfextu	r10,r10,0x0,0x3
80004f92:	f3 ea 11 09 	or	r9,r9,r10<<0x10
80004f96:	99 89       	st.w	r12[0x20],r9
80004f98:	d8 0a       	popm	pc,r12=0

80004f9a <usart_write_char>:
80004f9a:	78 58       	ld.w	r8,r12[0x14]
80004f9c:	e2 18 00 02 	andl	r8,0x2,COH
80004fa0:	c0 31       	brne	80004fa6 <usart_write_char+0xc>
80004fa2:	30 2c       	mov	r12,2
80004fa4:	5e fc       	retal	r12
80004fa6:	f7 db c0 09 	bfextu	r11,r11,0x0,0x9
80004faa:	99 7b       	st.w	r12[0x1c],r11
80004fac:	5e fd       	retal	0
80004fae:	d7 03       	nop

80004fb0 <usart_putchar>:
80004fb0:	eb cd 40 e0 	pushm	r5-r7,lr
80004fb4:	18 96       	mov	r6,r12
80004fb6:	16 95       	mov	r5,r11
80004fb8:	e0 67 27 0f 	mov	r7,9999
80004fbc:	c0 68       	rjmp	80004fc8 <usart_putchar+0x18>
80004fbe:	58 07       	cp.w	r7,0
80004fc0:	c0 31       	brne	80004fc6 <usart_putchar+0x16>
80004fc2:	e3 cf c0 e0 	ldm	sp++,r5-r7,pc,r12=-1
80004fc6:	20 17       	sub	r7,1
80004fc8:	0a 9b       	mov	r11,r5
80004fca:	0c 9c       	mov	r12,r6
80004fcc:	f0 1f 00 03 	mcall	80004fd8 <usart_putchar+0x28>
80004fd0:	cf 71       	brne	80004fbe <usart_putchar+0xe>
80004fd2:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80004fd6:	00 00       	add	r0,r0
80004fd8:	80 00       	ld.sh	r0,r0[0x0]
80004fda:	4f 9a       	lddpc	r10,800051bc <pxPortInitialiseStack+0x68>

80004fdc <usart_write_line>:
80004fdc:	eb cd 40 c0 	pushm	r6-r7,lr
80004fe0:	18 96       	mov	r6,r12
80004fe2:	16 97       	mov	r7,r11
80004fe4:	17 8b       	ld.ub	r11,r11[0x0]
80004fe6:	58 0b       	cp.w	r11,0
80004fe8:	c0 80       	breq	80004ff8 <usart_write_line+0x1c>
80004fea:	2f f7       	sub	r7,-1
80004fec:	0c 9c       	mov	r12,r6
80004fee:	f0 1f 00 04 	mcall	80004ffc <usart_write_line+0x20>
80004ff2:	0f 8b       	ld.ub	r11,r7[0x0]
80004ff4:	58 0b       	cp.w	r11,0
80004ff6:	cf a1       	brne	80004fea <usart_write_line+0xe>
80004ff8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80004ffc:	80 00       	ld.sh	r0,r0[0x0]
80004ffe:	4f b0       	lddpc	r0,800051e8 <vPortEnterCritical>

80005000 <usart_reset>:
80005000:	e1 b8 00 00 	mfsr	r8,0x0
80005004:	e6 18 00 01 	andh	r8,0x1,COH
80005008:	c0 71       	brne	80005016 <usart_reset+0x16>
8000500a:	d3 03       	ssrf	0x10
8000500c:	3f f8       	mov	r8,-1
8000500e:	99 38       	st.w	r12[0xc],r8
80005010:	78 58       	ld.w	r8,r12[0x14]
80005012:	d5 03       	csrf	0x10
80005014:	c0 48       	rjmp	8000501c <usart_reset+0x1c>
80005016:	3f f8       	mov	r8,-1
80005018:	99 38       	st.w	r12[0xc],r8
8000501a:	78 58       	ld.w	r8,r12[0x14]
8000501c:	30 08       	mov	r8,0
8000501e:	99 18       	st.w	r12[0x4],r8
80005020:	99 98       	st.w	r12[0x24],r8
80005022:	99 a8       	st.w	r12[0x28],r8
80005024:	ea 68 61 0c 	mov	r8,680204
80005028:	99 08       	st.w	r12[0x0],r8
8000502a:	5e fc       	retal	r12

8000502c <usart_init_rs232>:
8000502c:	eb cd 40 e0 	pushm	r5-r7,lr
80005030:	18 96       	mov	r6,r12
80005032:	16 97       	mov	r7,r11
80005034:	14 95       	mov	r5,r10
80005036:	f0 1f 00 2f 	mcall	800050f0 <usart_init_rs232+0xc4>
8000503a:	58 07       	cp.w	r7,0
8000503c:	c5 80       	breq	800050ec <usart_init_rs232+0xc0>
8000503e:	0f c8       	ld.ub	r8,r7[0x4]
80005040:	30 49       	mov	r9,4
80005042:	f2 08 18 00 	cp.b	r8,r9
80005046:	e0 88 00 53 	brls	800050ec <usart_init_rs232+0xc0>
8000504a:	30 99       	mov	r9,9
8000504c:	f2 08 18 00 	cp.b	r8,r9
80005050:	e0 8b 00 4e 	brhi	800050ec <usart_init_rs232+0xc0>
80005054:	0f d9       	ld.ub	r9,r7[0x5]
80005056:	30 78       	mov	r8,7
80005058:	f0 09 18 00 	cp.b	r9,r8
8000505c:	e0 8b 00 48 	brhi	800050ec <usart_init_rs232+0xc0>
80005060:	8e 39       	ld.sh	r9,r7[0x6]
80005062:	e0 68 01 01 	mov	r8,257
80005066:	f0 09 19 00 	cp.h	r9,r8
8000506a:	e0 8b 00 41 	brhi	800050ec <usart_init_rs232+0xc0>
8000506e:	ef 39 00 08 	ld.ub	r9,r7[8]
80005072:	30 38       	mov	r8,3
80005074:	f0 09 18 00 	cp.b	r9,r8
80005078:	e0 8b 00 3a 	brhi	800050ec <usart_init_rs232+0xc0>
8000507c:	0a 9a       	mov	r10,r5
8000507e:	6e 0b       	ld.w	r11,r7[0x0]
80005080:	0c 9c       	mov	r12,r6
80005082:	f0 1f 00 1d 	mcall	800050f4 <usart_init_rs232+0xc8>
80005086:	58 1c       	cp.w	r12,1
80005088:	c3 20       	breq	800050ec <usart_init_rs232+0xc0>
8000508a:	0f c8       	ld.ub	r8,r7[0x4]
8000508c:	30 99       	mov	r9,9
8000508e:	f2 08 18 00 	cp.b	r8,r9
80005092:	c0 51       	brne	8000509c <usart_init_rs232+0x70>
80005094:	6c 18       	ld.w	r8,r6[0x4]
80005096:	b1 b8       	sbr	r8,0x11
80005098:	8d 18       	st.w	r6[0x4],r8
8000509a:	c0 68       	rjmp	800050a6 <usart_init_rs232+0x7a>
8000509c:	6c 19       	ld.w	r9,r6[0x4]
8000509e:	20 58       	sub	r8,5
800050a0:	f3 e8 10 68 	or	r8,r9,r8<<0x6
800050a4:	8d 18       	st.w	r6[0x4],r8
800050a6:	6c 19       	ld.w	r9,r6[0x4]
800050a8:	ef 3a 00 08 	ld.ub	r10,r7[8]
800050ac:	0f d8       	ld.ub	r8,r7[0x5]
800050ae:	a9 78       	lsl	r8,0x9
800050b0:	f1 ea 10 e8 	or	r8,r8,r10<<0xe
800050b4:	12 48       	or	r8,r9
800050b6:	8d 18       	st.w	r6[0x4],r8
800050b8:	8e 38       	ld.sh	r8,r7[0x6]
800050ba:	30 29       	mov	r9,2
800050bc:	f2 08 19 00 	cp.h	r8,r9
800050c0:	e0 88 00 09 	brls	800050d2 <usart_init_rs232+0xa6>
800050c4:	6c 18       	ld.w	r8,r6[0x4]
800050c6:	ad b8       	sbr	r8,0xd
800050c8:	8d 18       	st.w	r6[0x4],r8
800050ca:	8e b8       	ld.uh	r8,r7[0x6]
800050cc:	20 28       	sub	r8,2
800050ce:	8d a8       	st.w	r6[0x28],r8
800050d0:	c0 68       	rjmp	800050dc <usart_init_rs232+0xb0>
800050d2:	6c 19       	ld.w	r9,r6[0x4]
800050d4:	5c 78       	castu.h	r8
800050d6:	f3 e8 10 c8 	or	r8,r9,r8<<0xc
800050da:	8d 18       	st.w	r6[0x4],r8
800050dc:	6c 18       	ld.w	r8,r6[0x4]
800050de:	e0 18 ff f0 	andl	r8,0xfff0
800050e2:	8d 18       	st.w	r6[0x4],r8
800050e4:	35 08       	mov	r8,80
800050e6:	8d 08       	st.w	r6[0x0],r8
800050e8:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0
800050ec:	e3 cf 90 e0 	ldm	sp++,r5-r7,pc,r12=1
800050f0:	80 00       	ld.sh	r0,r0[0x0]
800050f2:	50 00       	stdsp	sp[0x0],r0
800050f4:	80 00       	ld.sh	r0,r0[0x0]
800050f6:	4f 40       	lddpc	r0,800052c4 <SCALLYield+0x74>

800050f8 <vListInitialise>:
800050f8:	f8 c8 ff f8 	sub	r8,r12,-8
800050fc:	99 18       	st.w	r12[0x4],r8
800050fe:	3f f9       	mov	r9,-1
80005100:	99 29       	st.w	r12[0x8],r9
80005102:	99 38       	st.w	r12[0xc],r8
80005104:	99 48       	st.w	r12[0x10],r8
80005106:	30 08       	mov	r8,0
80005108:	99 08       	st.w	r12[0x0],r8
8000510a:	5e fc       	retal	r12

8000510c <vListInitialiseItem>:
8000510c:	30 08       	mov	r8,0
8000510e:	99 48       	st.w	r12[0x10],r8
80005110:	5e fc       	retal	r12

80005112 <vListInsertEnd>:
80005112:	78 18       	ld.w	r8,r12[0x4]
80005114:	70 19       	ld.w	r9,r8[0x4]
80005116:	97 19       	st.w	r11[0x4],r9
80005118:	78 19       	ld.w	r9,r12[0x4]
8000511a:	97 29       	st.w	r11[0x8],r9
8000511c:	70 19       	ld.w	r9,r8[0x4]
8000511e:	93 2b       	st.w	r9[0x8],r11
80005120:	91 1b       	st.w	r8[0x4],r11
80005122:	99 1b       	st.w	r12[0x4],r11
80005124:	97 4c       	st.w	r11[0x10],r12
80005126:	78 08       	ld.w	r8,r12[0x0]
80005128:	2f f8       	sub	r8,-1
8000512a:	99 08       	st.w	r12[0x0],r8
8000512c:	5e fc       	retal	r12

8000512e <vListRemove>:
8000512e:	78 18       	ld.w	r8,r12[0x4]
80005130:	78 29       	ld.w	r9,r12[0x8]
80005132:	91 29       	st.w	r8[0x8],r9
80005134:	78 28       	ld.w	r8,r12[0x8]
80005136:	78 19       	ld.w	r9,r12[0x4]
80005138:	91 19       	st.w	r8[0x4],r9
8000513a:	78 48       	ld.w	r8,r12[0x10]
8000513c:	70 19       	ld.w	r9,r8[0x4]
8000513e:	18 39       	cp.w	r9,r12
80005140:	f9 f9 00 02 	ld.weq	r9,r12[0x8]
80005144:	f1 f9 0a 01 	st.weq	r8[0x4],r9
80005148:	30 09       	mov	r9,0
8000514a:	99 49       	st.w	r12[0x10],r9
8000514c:	70 09       	ld.w	r9,r8[0x0]
8000514e:	20 19       	sub	r9,1
80005150:	91 09       	st.w	r8[0x0],r9
80005152:	5e fc       	retal	r12

80005154 <pxPortInitialiseStack>:
80005154:	e0 68 08 08 	mov	r8,2056
80005158:	ea 18 08 08 	orh	r8,0x808
8000515c:	18 d8       	st.w	--r12,r8
8000515e:	e0 68 09 09 	mov	r8,2313
80005162:	ea 18 09 09 	orh	r8,0x909
80005166:	18 d8       	st.w	--r12,r8
80005168:	e0 68 0a 0a 	mov	r8,2570
8000516c:	ea 18 0a 0a 	orh	r8,0xa0a
80005170:	18 d8       	st.w	--r12,r8
80005172:	e0 68 0b 0b 	mov	r8,2827
80005176:	ea 18 0b 0b 	orh	r8,0xb0b
8000517a:	18 d8       	st.w	--r12,r8
8000517c:	18 da       	st.w	--r12,r10
8000517e:	e0 68 be ef 	mov	r8,48879
80005182:	ea 18 de ad 	orh	r8,0xdead
80005186:	18 d8       	st.w	--r12,r8
80005188:	18 db       	st.w	--r12,r11
8000518a:	fc 18 00 40 	movh	r8,0x40
8000518e:	18 d8       	st.w	--r12,r8
80005190:	e0 68 00 ff 	mov	r8,255
80005194:	ea 18 ff 00 	orh	r8,0xff00
80005198:	18 d8       	st.w	--r12,r8
8000519a:	e0 68 01 01 	mov	r8,257
8000519e:	ea 18 01 01 	orh	r8,0x101
800051a2:	18 d8       	st.w	--r12,r8
800051a4:	e0 68 02 02 	mov	r8,514
800051a8:	ea 18 02 02 	orh	r8,0x202
800051ac:	18 d8       	st.w	--r12,r8
800051ae:	e0 68 03 03 	mov	r8,771
800051b2:	ea 18 03 03 	orh	r8,0x303
800051b6:	18 d8       	st.w	--r12,r8
800051b8:	e0 68 04 04 	mov	r8,1028
800051bc:	ea 18 04 04 	orh	r8,0x404
800051c0:	18 d8       	st.w	--r12,r8
800051c2:	e0 68 05 05 	mov	r8,1285
800051c6:	ea 18 05 05 	orh	r8,0x505
800051ca:	18 d8       	st.w	--r12,r8
800051cc:	e0 68 06 06 	mov	r8,1542
800051d0:	ea 18 06 06 	orh	r8,0x606
800051d4:	18 d8       	st.w	--r12,r8
800051d6:	e0 68 07 07 	mov	r8,1799
800051da:	ea 18 07 07 	orh	r8,0x707
800051de:	18 d8       	st.w	--r12,r8
800051e0:	30 08       	mov	r8,0
800051e2:	18 d8       	st.w	--r12,r8
800051e4:	5e fc       	retal	r12
800051e6:	d7 03       	nop

800051e8 <vPortEnterCritical>:
800051e8:	d3 03       	ssrf	0x10
800051ea:	48 38       	lddpc	r8,800051f4 <vPortEnterCritical+0xc>
800051ec:	70 09       	ld.w	r9,r8[0x0]
800051ee:	2f f9       	sub	r9,-1
800051f0:	91 09       	st.w	r8[0x0],r9
800051f2:	5e fc       	retal	r12
800051f4:	00 00       	add	r0,r0
800051f6:	04 7c       	tst	r12,r2

800051f8 <xPortStartScheduler>:
800051f8:	d4 01       	pushm	lr
800051fa:	d3 03       	ssrf	0x10
800051fc:	30 0a       	mov	r10,0
800051fe:	14 9b       	mov	r11,r10
80005200:	49 2c       	lddpc	r12,80005248 <xPortStartScheduler+0x50>
80005202:	f0 1f 00 13 	mcall	8000524c <xPortStartScheduler+0x54>
80005206:	e0 68 3e 80 	mov	r8,16000
8000520a:	e3 b8 00 43 	mtsr	0x10c,r8
8000520e:	30 08       	mov	r8,0
80005210:	e3 b8 00 42 	mtsr	0x108,r8
80005214:	e0 68 0c d0 	mov	r8,3280
80005218:	ea 18 00 00 	orh	r8,0x0
8000521c:	70 00       	ld.w	r0,r8[0x0]
8000521e:	60 0d       	ld.w	sp,r0[0x0]
80005220:	1b 00       	ld.w	r0,sp++
80005222:	e0 68 04 7c 	mov	r8,1148
80005226:	ea 18 00 00 	orh	r8,0x0
8000522a:	91 00       	st.w	r8[0x0],r0
8000522c:	e3 cd 00 ff 	ldm	sp++,r0-r7
80005230:	2f ed       	sub	sp,-8
80005232:	e3 cd 5f 00 	ldm	sp++,r8-r12,lr
80005236:	fa f0 ff e0 	ld.w	r0,sp[-32]
8000523a:	e3 b0 00 00 	mtsr	0x0,r0
8000523e:	fa f0 ff dc 	ld.w	r0,sp[-36]
80005242:	fa ff ff e4 	ld.w	pc,sp[-28]
80005246:	d8 0a       	popm	pc,r12=0
80005248:	80 00       	ld.sh	r0,r0[0x0]
8000524a:	53 14       	stdsp	sp[0xc4],r4
8000524c:	80 00       	ld.sh	r0,r0[0x0]
8000524e:	49 9c       	lddpc	r12,800052b0 <SCALLYield+0x60>

80005250 <SCALLYield>:
80005250:	20 6d       	sub	sp,24
80005252:	eb cd 00 ff 	pushm	r0-r7
80005256:	fa c7 ff c0 	sub	r7,sp,-64
8000525a:	ee f0 ff f8 	ld.w	r0,r7[-8]
8000525e:	ef 40 ff e0 	st.w	r7[-32],r0
80005262:	ee f0 ff fc 	ld.w	r0,r7[-4]
80005266:	ef 40 ff e4 	st.w	r7[-28],r0
8000526a:	eb c7 5f 00 	stm	--r7,r8-r12,lr
8000526e:	e0 68 04 7c 	mov	r8,1148
80005272:	ea 18 00 00 	orh	r8,0x0
80005276:	70 00       	ld.w	r0,r8[0x0]
80005278:	1a d0       	st.w	--sp,r0
8000527a:	f0 1f 00 1a 	mcall	800052e0 <LABEL_RET_SCALL_260+0x14>
8000527e:	e0 68 0c d0 	mov	r8,3280
80005282:	ea 18 00 00 	orh	r8,0x0
80005286:	70 00       	ld.w	r0,r8[0x0]
80005288:	81 0d       	st.w	r0[0x0],sp
8000528a:	f0 1f 00 17 	mcall	800052e4 <LABEL_RET_SCALL_260+0x18>
8000528e:	e0 68 0c d0 	mov	r8,3280
80005292:	ea 18 00 00 	orh	r8,0x0
80005296:	70 00       	ld.w	r0,r8[0x0]
80005298:	60 0d       	ld.w	sp,r0[0x0]
8000529a:	1b 00       	ld.w	r0,sp++
8000529c:	e0 68 04 7c 	mov	r8,1148
800052a0:	ea 18 00 00 	orh	r8,0x0
800052a4:	91 00       	st.w	r8[0x0],r0
800052a6:	fa c7 ff d8 	sub	r7,sp,-40
800052aa:	e3 c7 5f 00 	ldm	r7++,r8-r12,lr
800052ae:	ee f0 ff e0 	ld.w	r0,r7[-32]
800052b2:	e0 61 04 7c 	mov	r1,1148
800052b6:	ea 11 00 00 	orh	r1,0x0
800052ba:	62 02       	ld.w	r2,r1[0x0]
800052bc:	58 02       	cp.w	r2,0
800052be:	c0 70       	breq	800052cc <LABEL_RET_SCALL_260>
800052c0:	e4 c2 00 01 	sub	r2,r2,1
800052c4:	83 02       	st.w	r1[0x0],r2
800052c6:	58 02       	cp.w	r2,0
800052c8:	c0 21       	brne	800052cc <LABEL_RET_SCALL_260>
800052ca:	b1 c0       	cbr	r0,0x10

800052cc <LABEL_RET_SCALL_260>:
800052cc:	ef 40 ff f8 	st.w	r7[-8],r0
800052d0:	ee f0 ff e4 	ld.w	r0,r7[-28]
800052d4:	ef 40 ff fc 	st.w	r7[-4],r0
800052d8:	e3 cd 00 ff 	ldm	sp++,r0-r7
800052dc:	2f ad       	sub	sp,-24
800052de:	d6 13       	rets
800052e0:	80 00       	ld.sh	r0,r0[0x0]
800052e2:	51 e8       	stdsp	sp[0x78],r8
800052e4:	80 00       	ld.sh	r0,r0[0x0]
800052e6:	54 28       	stdsp	sp[0x108],r8

800052e8 <prvClearCcInt>:
800052e8:	e1 b8 00 43 	mfsr	r8,0x10c
800052ec:	e3 b8 00 43 	mtsr	0x10c,r8
800052f0:	5e fc       	retal	r12
800052f2:	d7 03       	nop

800052f4 <vPortExitCritical>:
800052f4:	48 78       	lddpc	r8,80005310 <vPortExitCritical+0x1c>
800052f6:	70 08       	ld.w	r8,r8[0x0]
800052f8:	58 08       	cp.w	r8,0
800052fa:	5e 0c       	reteq	r12
800052fc:	48 58       	lddpc	r8,80005310 <vPortExitCritical+0x1c>
800052fe:	70 09       	ld.w	r9,r8[0x0]
80005300:	20 19       	sub	r9,1
80005302:	91 09       	st.w	r8[0x0],r9
80005304:	70 08       	ld.w	r8,r8[0x0]
80005306:	58 08       	cp.w	r8,0
80005308:	5e 1c       	retne	r12
8000530a:	d5 03       	csrf	0x10
8000530c:	5e fc       	retal	r12
8000530e:	00 00       	add	r0,r0
80005310:	00 00       	add	r0,r0
80005312:	04 7c       	tst	r12,r2

80005314 <vTick>:
80005314:	eb cd 00 ff 	pushm	r0-r7
80005318:	e0 68 04 7c 	mov	r8,1148
8000531c:	ea 18 00 00 	orh	r8,0x0
80005320:	70 00       	ld.w	r0,r8[0x0]
80005322:	1a d0       	st.w	--sp,r0
80005324:	7a 90       	ld.w	r0,sp[0x24]
80005326:	e1 d0 c2 c3 	bfextu	r0,r0,0x16,0x3
8000532a:	58 10       	cp.w	r0,1
8000532c:	e0 8b 00 08 	brhi	8000533c <LABEL_INT_SKIP_SAVE_CONTEXT_234>
80005330:	e0 68 0c d0 	mov	r8,3280
80005334:	ea 18 00 00 	orh	r8,0x0
80005338:	70 00       	ld.w	r0,r8[0x0]
8000533a:	81 0d       	st.w	r0[0x0],sp

8000533c <LABEL_INT_SKIP_SAVE_CONTEXT_234>:
8000533c:	f0 1f 00 12 	mcall	80005384 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x14>
80005340:	f0 1f 00 12 	mcall	80005388 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x18>
80005344:	f0 1f 00 12 	mcall	8000538c <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x1c>
80005348:	f0 1f 00 12 	mcall	80005390 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x20>
8000534c:	7a 90       	ld.w	r0,sp[0x24]
8000534e:	e1 d0 c2 c3 	bfextu	r0,r0,0x16,0x3
80005352:	58 10       	cp.w	r0,1
80005354:	e0 8b 00 0e 	brhi	80005370 <LABEL_INT_SKIP_RESTORE_CONTEXT_251>
80005358:	f0 1f 00 0c 	mcall	80005388 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x18>
8000535c:	f0 1f 00 0e 	mcall	80005394 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x24>
80005360:	f0 1f 00 0c 	mcall	80005390 <LABEL_INT_SKIP_RESTORE_CONTEXT_251+0x20>
80005364:	e0 68 0c d0 	mov	r8,3280
80005368:	ea 18 00 00 	orh	r8,0x0
8000536c:	70 00       	ld.w	r0,r8[0x0]
8000536e:	60 0d       	ld.w	sp,r0[0x0]

80005370 <LABEL_INT_SKIP_RESTORE_CONTEXT_251>:
80005370:	1b 00       	ld.w	r0,sp++
80005372:	e0 68 04 7c 	mov	r8,1148
80005376:	ea 18 00 00 	orh	r8,0x0
8000537a:	91 00       	st.w	r8[0x0],r0
8000537c:	e3 cd 00 ff 	ldm	sp++,r0-r7
80005380:	d6 03       	rete
80005382:	00 00       	add	r0,r0
80005384:	80 00       	ld.sh	r0,r0[0x0]
80005386:	52 e8       	stdsp	sp[0xb8],r8
80005388:	80 00       	ld.sh	r0,r0[0x0]
8000538a:	51 e8       	stdsp	sp[0x78],r8
8000538c:	80 00       	ld.sh	r0,r0[0x0]
8000538e:	54 a4       	stdsp	sp[0x128],r4
80005390:	80 00       	ld.sh	r0,r0[0x0]
80005392:	52 f4       	stdsp	sp[0xbc],r4
80005394:	80 00       	ld.sh	r0,r0[0x0]
80005396:	54 28       	stdsp	sp[0x108],r8

80005398 <__malloc_lock>:
80005398:	d4 01       	pushm	lr
8000539a:	f0 1f 00 02 	mcall	800053a0 <__malloc_lock+0x8>
8000539e:	d8 02       	popm	pc
800053a0:	80 00       	ld.sh	r0,r0[0x0]
800053a2:	54 18       	stdsp	sp[0x104],r8

800053a4 <__malloc_unlock>:
800053a4:	d4 01       	pushm	lr
800053a6:	f0 1f 00 02 	mcall	800053ac <__malloc_unlock+0x8>
800053aa:	d8 02       	popm	pc
800053ac:	80 00       	ld.sh	r0,r0[0x0]
800053ae:	55 b8       	stdsp	sp[0x16c],r8

800053b0 <_init_startup>:
800053b0:	d4 01       	pushm	lr
800053b2:	48 48       	lddpc	r8,800053c0 <_init_startup+0x10>
800053b4:	e3 b8 00 01 	mtsr	0x4,r8
800053b8:	d5 53       	csrf	0x15
800053ba:	f0 1f 00 03 	mcall	800053c4 <_init_startup+0x14>
800053be:	da 0a       	popm	pc,r12=1
800053c0:	80 00       	ld.sh	r0,r0[0x0]
800053c2:	a0 00       	st.h	r0[0x0],r0
800053c4:	80 00       	ld.sh	r0,r0[0x0]
800053c6:	4a 1c       	lddpc	r12,80005448 <vTaskSwitchContext+0x20>

800053c8 <vPortFree>:
800053c8:	eb cd 40 80 	pushm	r7,lr
800053cc:	18 97       	mov	r7,r12
800053ce:	58 0c       	cp.w	r12,0
800053d0:	c0 80       	breq	800053e0 <vPortFree+0x18>
800053d2:	f0 1f 00 05 	mcall	800053e4 <vPortFree+0x1c>
800053d6:	0e 9c       	mov	r12,r7
800053d8:	f0 1f 00 04 	mcall	800053e8 <vPortFree+0x20>
800053dc:	f0 1f 00 04 	mcall	800053ec <vPortFree+0x24>
800053e0:	e3 cd 80 80 	ldm	sp++,r7,pc
800053e4:	80 00       	ld.sh	r0,r0[0x0]
800053e6:	54 18       	stdsp	sp[0x104],r8
800053e8:	80 00       	ld.sh	r0,r0[0x0]
800053ea:	78 e8       	ld.w	r8,r12[0x38]
800053ec:	80 00       	ld.sh	r0,r0[0x0]
800053ee:	55 b8       	stdsp	sp[0x16c],r8

800053f0 <pvPortMalloc>:
800053f0:	eb cd 40 80 	pushm	r7,lr
800053f4:	18 97       	mov	r7,r12
800053f6:	f0 1f 00 06 	mcall	8000540c <pvPortMalloc+0x1c>
800053fa:	0e 9c       	mov	r12,r7
800053fc:	f0 1f 00 05 	mcall	80005410 <pvPortMalloc+0x20>
80005400:	18 97       	mov	r7,r12
80005402:	f0 1f 00 05 	mcall	80005414 <pvPortMalloc+0x24>
80005406:	0e 9c       	mov	r12,r7
80005408:	e3 cd 80 80 	ldm	sp++,r7,pc
8000540c:	80 00       	ld.sh	r0,r0[0x0]
8000540e:	54 18       	stdsp	sp[0x104],r8
80005410:	80 00       	ld.sh	r0,r0[0x0]
80005412:	78 f8       	ld.w	r8,r12[0x3c]
80005414:	80 00       	ld.sh	r0,r0[0x0]
80005416:	55 b8       	stdsp	sp[0x16c],r8

80005418 <vTaskSuspendAll>:
80005418:	48 38       	lddpc	r8,80005424 <vTaskSuspendAll+0xc>
8000541a:	70 09       	ld.w	r9,r8[0x0]
8000541c:	2f f9       	sub	r9,-1
8000541e:	91 09       	st.w	r8[0x0],r9
80005420:	5e fc       	retal	r12
80005422:	00 00       	add	r0,r0
80005424:	00 00       	add	r0,r0
80005426:	0d 00       	ld.w	r0,r6++

80005428 <vTaskSwitchContext>:
80005428:	49 a8       	lddpc	r8,80005490 <vTaskSwitchContext+0x68>
8000542a:	70 08       	ld.w	r8,r8[0x0]
8000542c:	58 08       	cp.w	r8,0
8000542e:	c0 b1       	brne	80005444 <vTaskSwitchContext+0x1c>
80005430:	49 98       	lddpc	r8,80005494 <vTaskSwitchContext+0x6c>
80005432:	70 08       	ld.w	r8,r8[0x0]
80005434:	f0 08 00 28 	add	r8,r8,r8<<0x2
80005438:	49 89       	lddpc	r9,80005498 <vTaskSwitchContext+0x70>
8000543a:	f2 08 03 28 	ld.w	r8,r9[r8<<0x2]
8000543e:	58 08       	cp.w	r8,0
80005440:	c0 60       	breq	8000544c <vTaskSwitchContext+0x24>
80005442:	c1 18       	rjmp	80005464 <vTaskSwitchContext+0x3c>
80005444:	30 19       	mov	r9,1
80005446:	49 68       	lddpc	r8,8000549c <vTaskSwitchContext+0x74>
80005448:	91 09       	st.w	r8[0x0],r9
8000544a:	5e fc       	retal	r12
8000544c:	49 28       	lddpc	r8,80005494 <vTaskSwitchContext+0x6c>
8000544e:	49 3a       	lddpc	r10,80005498 <vTaskSwitchContext+0x70>
80005450:	70 09       	ld.w	r9,r8[0x0]
80005452:	20 19       	sub	r9,1
80005454:	91 09       	st.w	r8[0x0],r9
80005456:	70 09       	ld.w	r9,r8[0x0]
80005458:	f2 09 00 29 	add	r9,r9,r9<<0x2
8000545c:	f4 09 03 29 	ld.w	r9,r10[r9<<0x2]
80005460:	58 09       	cp.w	r9,0
80005462:	cf 70       	breq	80005450 <vTaskSwitchContext+0x28>
80005464:	48 c8       	lddpc	r8,80005494 <vTaskSwitchContext+0x6c>
80005466:	70 08       	ld.w	r8,r8[0x0]
80005468:	f0 08 00 28 	add	r8,r8,r8<<0x2
8000546c:	48 b9       	lddpc	r9,80005498 <vTaskSwitchContext+0x70>
8000546e:	f2 08 00 28 	add	r8,r9,r8<<0x2
80005472:	70 19       	ld.w	r9,r8[0x4]
80005474:	72 19       	ld.w	r9,r9[0x4]
80005476:	91 19       	st.w	r8[0x4],r9
80005478:	f0 ca ff f8 	sub	r10,r8,-8
8000547c:	14 39       	cp.w	r9,r10
8000547e:	f3 f9 00 01 	ld.weq	r9,r9[0x4]
80005482:	f1 f9 0a 01 	st.weq	r8[0x4],r9
80005486:	70 18       	ld.w	r8,r8[0x4]
80005488:	70 39       	ld.w	r9,r8[0xc]
8000548a:	48 68       	lddpc	r8,800054a0 <vTaskSwitchContext+0x78>
8000548c:	91 09       	st.w	r8[0x0],r9
8000548e:	5e fc       	retal	r12
80005490:	00 00       	add	r0,r0
80005492:	0d 00       	ld.w	r0,r6++
80005494:	00 00       	add	r0,r0
80005496:	0d 38       	ld.ub	r8,r6++
80005498:	00 00       	add	r0,r0
8000549a:	0c 1c       	sub	r12,r6
8000549c:	00 00       	add	r0,r0
8000549e:	0d 20       	ld.uh	r0,r6++
800054a0:	00 00       	add	r0,r0
800054a2:	0c d0       	st.w	--r6,r0

800054a4 <vTaskIncrementTick>:
800054a4:	eb cd 40 fc 	pushm	r2-r7,lr
800054a8:	4b 98       	lddpc	r8,8000558c <vTaskIncrementTick+0xe8>
800054aa:	70 08       	ld.w	r8,r8[0x0]
800054ac:	58 08       	cp.w	r8,0
800054ae:	c6 91       	brne	80005580 <vTaskIncrementTick+0xdc>
800054b0:	4b 88       	lddpc	r8,80005590 <vTaskIncrementTick+0xec>
800054b2:	70 09       	ld.w	r9,r8[0x0]
800054b4:	2f f9       	sub	r9,-1
800054b6:	91 09       	st.w	r8[0x0],r9
800054b8:	70 08       	ld.w	r8,r8[0x0]
800054ba:	58 08       	cp.w	r8,0
800054bc:	c1 a1       	brne	800054f0 <vTaskIncrementTick+0x4c>
800054be:	4b 68       	lddpc	r8,80005594 <vTaskIncrementTick+0xf0>
800054c0:	70 0a       	ld.w	r10,r8[0x0]
800054c2:	4b 69       	lddpc	r9,80005598 <vTaskIncrementTick+0xf4>
800054c4:	72 0b       	ld.w	r11,r9[0x0]
800054c6:	91 0b       	st.w	r8[0x0],r11
800054c8:	93 0a       	st.w	r9[0x0],r10
800054ca:	4b 59       	lddpc	r9,8000559c <vTaskIncrementTick+0xf8>
800054cc:	72 0a       	ld.w	r10,r9[0x0]
800054ce:	2f fa       	sub	r10,-1
800054d0:	93 0a       	st.w	r9[0x0],r10
800054d2:	70 08       	ld.w	r8,r8[0x0]
800054d4:	70 08       	ld.w	r8,r8[0x0]
800054d6:	58 08       	cp.w	r8,0
800054d8:	c0 51       	brne	800054e2 <vTaskIncrementTick+0x3e>
800054da:	3f f9       	mov	r9,-1
800054dc:	4b 18       	lddpc	r8,800055a0 <vTaskIncrementTick+0xfc>
800054de:	91 09       	st.w	r8[0x0],r9
800054e0:	c0 88       	rjmp	800054f0 <vTaskIncrementTick+0x4c>
800054e2:	4a d8       	lddpc	r8,80005594 <vTaskIncrementTick+0xf0>
800054e4:	70 08       	ld.w	r8,r8[0x0]
800054e6:	70 38       	ld.w	r8,r8[0xc]
800054e8:	70 38       	ld.w	r8,r8[0xc]
800054ea:	70 19       	ld.w	r9,r8[0x4]
800054ec:	4a d8       	lddpc	r8,800055a0 <vTaskIncrementTick+0xfc>
800054ee:	91 09       	st.w	r8[0x0],r9
800054f0:	4a 88       	lddpc	r8,80005590 <vTaskIncrementTick+0xec>
800054f2:	70 09       	ld.w	r9,r8[0x0]
800054f4:	4a b8       	lddpc	r8,800055a0 <vTaskIncrementTick+0xfc>
800054f6:	70 08       	ld.w	r8,r8[0x0]
800054f8:	10 39       	cp.w	r9,r8
800054fa:	c4 73       	brcs	80005588 <vTaskIncrementTick+0xe4>
800054fc:	4a 68       	lddpc	r8,80005594 <vTaskIncrementTick+0xf0>
800054fe:	70 08       	ld.w	r8,r8[0x0]
80005500:	70 08       	ld.w	r8,r8[0x0]
80005502:	58 08       	cp.w	r8,0
80005504:	c0 c0       	breq	8000551c <vTaskIncrementTick+0x78>
80005506:	4a 48       	lddpc	r8,80005594 <vTaskIncrementTick+0xf0>
80005508:	70 08       	ld.w	r8,r8[0x0]
8000550a:	70 38       	ld.w	r8,r8[0xc]
8000550c:	70 37       	ld.w	r7,r8[0xc]
8000550e:	6e 18       	ld.w	r8,r7[0x4]
80005510:	4a 09       	lddpc	r9,80005590 <vTaskIncrementTick+0xec>
80005512:	72 09       	ld.w	r9,r9[0x0]
80005514:	12 38       	cp.w	r8,r9
80005516:	e0 88 00 14 	brls	8000553e <vTaskIncrementTick+0x9a>
8000551a:	c0 e8       	rjmp	80005536 <vTaskIncrementTick+0x92>
8000551c:	3f f9       	mov	r9,-1
8000551e:	4a 18       	lddpc	r8,800055a0 <vTaskIncrementTick+0xfc>
80005520:	91 09       	st.w	r8[0x0],r9
80005522:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80005526:	6a 08       	ld.w	r8,r5[0x0]
80005528:	70 38       	ld.w	r8,r8[0xc]
8000552a:	70 37       	ld.w	r7,r8[0xc]
8000552c:	6e 18       	ld.w	r8,r7[0x4]
8000552e:	64 09       	ld.w	r9,r2[0x0]
80005530:	12 38       	cp.w	r8,r9
80005532:	e0 88 00 0a 	brls	80005546 <vTaskIncrementTick+0xa2>
80005536:	49 b9       	lddpc	r9,800055a0 <vTaskIncrementTick+0xfc>
80005538:	93 08       	st.w	r9[0x0],r8
8000553a:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
8000553e:	49 a4       	lddpc	r4,800055a4 <vTaskIncrementTick+0x100>
80005540:	49 a3       	lddpc	r3,800055a8 <vTaskIncrementTick+0x104>
80005542:	49 55       	lddpc	r5,80005594 <vTaskIncrementTick+0xf0>
80005544:	49 32       	lddpc	r2,80005590 <vTaskIncrementTick+0xec>
80005546:	ee c6 ff fc 	sub	r6,r7,-4
8000554a:	0c 9c       	mov	r12,r6
8000554c:	f0 1f 00 18 	mcall	800055ac <vTaskIncrementTick+0x108>
80005550:	6e a8       	ld.w	r8,r7[0x28]
80005552:	58 08       	cp.w	r8,0
80005554:	c0 50       	breq	8000555e <vTaskIncrementTick+0xba>
80005556:	ee cc ff e8 	sub	r12,r7,-24
8000555a:	f0 1f 00 15 	mcall	800055ac <vTaskIncrementTick+0x108>
8000555e:	6e bc       	ld.w	r12,r7[0x2c]
80005560:	68 08       	ld.w	r8,r4[0x0]
80005562:	10 3c       	cp.w	r12,r8
80005564:	e9 fc ba 00 	st.whi	r4[0x0],r12
80005568:	f8 0c 00 2c 	add	r12,r12,r12<<0x2
8000556c:	0c 9b       	mov	r11,r6
8000556e:	e6 0c 00 2c 	add	r12,r3,r12<<0x2
80005572:	f0 1f 00 10 	mcall	800055b0 <vTaskIncrementTick+0x10c>
80005576:	6a 08       	ld.w	r8,r5[0x0]
80005578:	70 08       	ld.w	r8,r8[0x0]
8000557a:	58 08       	cp.w	r8,0
8000557c:	cd 51       	brne	80005526 <vTaskIncrementTick+0x82>
8000557e:	cc fb       	rjmp	8000551c <vTaskIncrementTick+0x78>
80005580:	48 d8       	lddpc	r8,800055b4 <vTaskIncrementTick+0x110>
80005582:	70 09       	ld.w	r9,r8[0x0]
80005584:	2f f9       	sub	r9,-1
80005586:	91 09       	st.w	r8[0x0],r9
80005588:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
8000558c:	00 00       	add	r0,r0
8000558e:	0d 00       	ld.w	r0,r6++
80005590:	00 00       	add	r0,r0
80005592:	0c fc       	st.b	--r6,r12
80005594:	00 00       	add	r0,r0
80005596:	0c 08       	add	r8,r6
80005598:	00 00       	add	r0,r0
8000559a:	0c 18       	sub	r8,r6
8000559c:	00 00       	add	r0,r0
8000559e:	0c 14       	sub	r4,r6
800055a0:	00 00       	add	r0,r0
800055a2:	04 80       	andn	r0,r2
800055a4:	00 00       	add	r0,r0
800055a6:	0d 38       	ld.ub	r8,r6++
800055a8:	00 00       	add	r0,r0
800055aa:	0c 1c       	sub	r12,r6
800055ac:	80 00       	ld.sh	r0,r0[0x0]
800055ae:	51 2e       	stdsp	sp[0x48],lr
800055b0:	80 00       	ld.sh	r0,r0[0x0]
800055b2:	51 12       	stdsp	sp[0x44],r2
800055b4:	00 00       	add	r0,r0
800055b6:	0c 00       	add	r0,r6

800055b8 <xTaskResumeAll>:
800055b8:	eb cd 40 fe 	pushm	r1-r7,lr
800055bc:	f0 1f 00 2c 	mcall	8000566c <xTaskResumeAll+0xb4>
800055c0:	4a c8       	lddpc	r8,80005670 <xTaskResumeAll+0xb8>
800055c2:	70 09       	ld.w	r9,r8[0x0]
800055c4:	20 19       	sub	r9,1
800055c6:	91 09       	st.w	r8[0x0],r9
800055c8:	70 08       	ld.w	r8,r8[0x0]
800055ca:	58 08       	cp.w	r8,0
800055cc:	c4 91       	brne	8000565e <xTaskResumeAll+0xa6>
800055ce:	4a a8       	lddpc	r8,80005674 <xTaskResumeAll+0xbc>
800055d0:	70 08       	ld.w	r8,r8[0x0]
800055d2:	58 08       	cp.w	r8,0
800055d4:	c4 50       	breq	8000565e <xTaskResumeAll+0xa6>
800055d6:	30 04       	mov	r4,0
800055d8:	4a 85       	lddpc	r5,80005678 <xTaskResumeAll+0xc0>
800055da:	4a 93       	lddpc	r3,8000567c <xTaskResumeAll+0xc4>
800055dc:	4a 92       	lddpc	r2,80005680 <xTaskResumeAll+0xc8>
800055de:	4a a1       	lddpc	r1,80005684 <xTaskResumeAll+0xcc>
800055e0:	c1 e8       	rjmp	8000561c <xTaskResumeAll+0x64>
800055e2:	6a 38       	ld.w	r8,r5[0xc]
800055e4:	70 37       	ld.w	r7,r8[0xc]
800055e6:	ee cc ff e8 	sub	r12,r7,-24
800055ea:	f0 1f 00 28 	mcall	80005688 <xTaskResumeAll+0xd0>
800055ee:	ee c6 ff fc 	sub	r6,r7,-4
800055f2:	0c 9c       	mov	r12,r6
800055f4:	f0 1f 00 25 	mcall	80005688 <xTaskResumeAll+0xd0>
800055f8:	6e bc       	ld.w	r12,r7[0x2c]
800055fa:	66 08       	ld.w	r8,r3[0x0]
800055fc:	10 3c       	cp.w	r12,r8
800055fe:	e7 fc ba 00 	st.whi	r3[0x0],r12
80005602:	f8 0c 00 2c 	add	r12,r12,r12<<0x2
80005606:	0c 9b       	mov	r11,r6
80005608:	e4 0c 00 2c 	add	r12,r2,r12<<0x2
8000560c:	f0 1f 00 20 	mcall	8000568c <xTaskResumeAll+0xd4>
80005610:	62 08       	ld.w	r8,r1[0x0]
80005612:	6e b9       	ld.w	r9,r7[0x2c]
80005614:	70 b8       	ld.w	r8,r8[0x2c]
80005616:	10 39       	cp.w	r9,r8
80005618:	f9 b4 02 01 	movhs	r4,1
8000561c:	6a 08       	ld.w	r8,r5[0x0]
8000561e:	58 08       	cp.w	r8,0
80005620:	ce 11       	brne	800055e2 <xTaskResumeAll+0x2a>
80005622:	49 c8       	lddpc	r8,80005690 <xTaskResumeAll+0xd8>
80005624:	70 08       	ld.w	r8,r8[0x0]
80005626:	58 08       	cp.w	r8,0
80005628:	c0 f0       	breq	80005646 <xTaskResumeAll+0x8e>
8000562a:	49 a8       	lddpc	r8,80005690 <xTaskResumeAll+0xd8>
8000562c:	70 08       	ld.w	r8,r8[0x0]
8000562e:	58 08       	cp.w	r8,0
80005630:	c1 10       	breq	80005652 <xTaskResumeAll+0x9a>
80005632:	49 87       	lddpc	r7,80005690 <xTaskResumeAll+0xd8>
80005634:	f0 1f 00 18 	mcall	80005694 <xTaskResumeAll+0xdc>
80005638:	6e 08       	ld.w	r8,r7[0x0]
8000563a:	20 18       	sub	r8,1
8000563c:	8f 08       	st.w	r7[0x0],r8
8000563e:	6e 08       	ld.w	r8,r7[0x0]
80005640:	58 08       	cp.w	r8,0
80005642:	cf 91       	brne	80005634 <xTaskResumeAll+0x7c>
80005644:	c0 78       	rjmp	80005652 <xTaskResumeAll+0x9a>
80005646:	58 14       	cp.w	r4,1
80005648:	c0 50       	breq	80005652 <xTaskResumeAll+0x9a>
8000564a:	49 48       	lddpc	r8,80005698 <xTaskResumeAll+0xe0>
8000564c:	70 08       	ld.w	r8,r8[0x0]
8000564e:	58 18       	cp.w	r8,1
80005650:	c0 71       	brne	8000565e <xTaskResumeAll+0xa6>
80005652:	30 09       	mov	r9,0
80005654:	49 18       	lddpc	r8,80005698 <xTaskResumeAll+0xe0>
80005656:	91 09       	st.w	r8[0x0],r9
80005658:	d7 33       	scall
8000565a:	30 17       	mov	r7,1
8000565c:	c0 28       	rjmp	80005660 <xTaskResumeAll+0xa8>
8000565e:	30 07       	mov	r7,0
80005660:	f0 1f 00 0f 	mcall	8000569c <xTaskResumeAll+0xe4>
80005664:	0e 9c       	mov	r12,r7
80005666:	e3 cd 80 fe 	ldm	sp++,r1-r7,pc
8000566a:	00 00       	add	r0,r0
8000566c:	80 00       	ld.sh	r0,r0[0x0]
8000566e:	51 e8       	stdsp	sp[0x78],r8
80005670:	00 00       	add	r0,r0
80005672:	0d 00       	ld.w	r0,r6++
80005674:	00 00       	add	r0,r0
80005676:	0d 1c       	ld.sh	r12,r6++
80005678:	00 00       	add	r0,r0
8000567a:	0c d4       	st.w	--r6,r4
8000567c:	00 00       	add	r0,r0
8000567e:	0d 38       	ld.ub	r8,r6++
80005680:	00 00       	add	r0,r0
80005682:	0c 1c       	sub	r12,r6
80005684:	00 00       	add	r0,r0
80005686:	0c d0       	st.w	--r6,r0
80005688:	80 00       	ld.sh	r0,r0[0x0]
8000568a:	51 2e       	stdsp	sp[0x48],lr
8000568c:	80 00       	ld.sh	r0,r0[0x0]
8000568e:	51 12       	stdsp	sp[0x44],r2
80005690:	00 00       	add	r0,r0
80005692:	0c 00       	add	r0,r6
80005694:	80 00       	ld.sh	r0,r0[0x0]
80005696:	54 a4       	stdsp	sp[0x128],r4
80005698:	00 00       	add	r0,r0
8000569a:	0d 20       	ld.uh	r0,r6++
8000569c:	80 00       	ld.sh	r0,r0[0x0]
8000569e:	52 f4       	stdsp	sp[0xbc],r4

800056a0 <prvIdleTask>:
800056a0:	eb cd 40 f8 	pushm	r3-r7,lr
800056a4:	49 57       	lddpc	r7,800056f8 <prvIdleTask+0x58>
800056a6:	49 64       	lddpc	r4,800056fc <prvIdleTask+0x5c>
800056a8:	49 63       	lddpc	r3,80005700 <prvIdleTask+0x60>
800056aa:	49 75       	lddpc	r5,80005704 <prvIdleTask+0x64>
800056ac:	6e 08       	ld.w	r8,r7[0x0]
800056ae:	58 08       	cp.w	r8,0
800056b0:	c1 e0       	breq	800056ec <prvIdleTask+0x4c>
800056b2:	f0 1f 00 16 	mcall	80005708 <prvIdleTask+0x68>
800056b6:	68 06       	ld.w	r6,r4[0x0]
800056b8:	f0 1f 00 15 	mcall	8000570c <prvIdleTask+0x6c>
800056bc:	58 06       	cp.w	r6,0
800056be:	c1 70       	breq	800056ec <prvIdleTask+0x4c>
800056c0:	f0 1f 00 14 	mcall	80005710 <prvIdleTask+0x70>
800056c4:	68 38       	ld.w	r8,r4[0xc]
800056c6:	70 36       	ld.w	r6,r8[0xc]
800056c8:	ec cc ff fc 	sub	r12,r6,-4
800056cc:	f0 1f 00 12 	mcall	80005714 <prvIdleTask+0x74>
800056d0:	66 08       	ld.w	r8,r3[0x0]
800056d2:	20 18       	sub	r8,1
800056d4:	87 08       	st.w	r3[0x0],r8
800056d6:	6e 08       	ld.w	r8,r7[0x0]
800056d8:	20 18       	sub	r8,1
800056da:	8f 08       	st.w	r7[0x0],r8
800056dc:	f0 1f 00 0f 	mcall	80005718 <prvIdleTask+0x78>
800056e0:	6c cc       	ld.w	r12,r6[0x30]
800056e2:	f0 1f 00 0f 	mcall	8000571c <prvIdleTask+0x7c>
800056e6:	0c 9c       	mov	r12,r6
800056e8:	f0 1f 00 0d 	mcall	8000571c <prvIdleTask+0x7c>
800056ec:	6a 08       	ld.w	r8,r5[0x0]
800056ee:	58 18       	cp.w	r8,1
800056f0:	fe 98 ff de 	brls	800056ac <prvIdleTask+0xc>
800056f4:	d7 33       	scall
800056f6:	cd bb       	rjmp	800056ac <prvIdleTask+0xc>
800056f8:	00 00       	add	r0,r0
800056fa:	0c 10       	sub	r0,r6
800056fc:	00 00       	add	r0,r0
800056fe:	0c bc       	st.h	r6++,r12
80005700:	00 00       	add	r0,r0
80005702:	0d 1c       	ld.sh	r12,r6++
80005704:	00 00       	add	r0,r0
80005706:	0c 1c       	sub	r12,r6
80005708:	80 00       	ld.sh	r0,r0[0x0]
8000570a:	54 18       	stdsp	sp[0x104],r8
8000570c:	80 00       	ld.sh	r0,r0[0x0]
8000570e:	55 b8       	stdsp	sp[0x16c],r8
80005710:	80 00       	ld.sh	r0,r0[0x0]
80005712:	51 e8       	stdsp	sp[0x78],r8
80005714:	80 00       	ld.sh	r0,r0[0x0]
80005716:	51 2e       	stdsp	sp[0x48],lr
80005718:	80 00       	ld.sh	r0,r0[0x0]
8000571a:	52 f4       	stdsp	sp[0xbc],r4
8000571c:	80 00       	ld.sh	r0,r0[0x0]
8000571e:	53 c8       	stdsp	sp[0xf0],r8

80005720 <xTaskGenericCreate>:
80005720:	d4 31       	pushm	r0-r7,lr
80005722:	20 1d       	sub	sp,4
80005724:	fa c4 ff d8 	sub	r4,sp,-40
80005728:	50 0c       	stdsp	sp[0x0],r12
8000572a:	16 91       	mov	r1,r11
8000572c:	14 97       	mov	r7,r10
8000572e:	12 90       	mov	r0,r9
80005730:	10 93       	mov	r3,r8
80005732:	68 02       	ld.w	r2,r4[0x0]
80005734:	68 16       	ld.w	r6,r4[0x4]
80005736:	34 4c       	mov	r12,68
80005738:	f0 1f 00 5b 	mcall	800058a4 <xTaskGenericCreate+0x184>
8000573c:	18 95       	mov	r5,r12
8000573e:	c0 31       	brne	80005744 <xTaskGenericCreate+0x24>
80005740:	3f fc       	mov	r12,-1
80005742:	ca d8       	rjmp	8000589c <xTaskGenericCreate+0x17c>
80005744:	58 06       	cp.w	r6,0
80005746:	e0 81 00 ad 	brne	800058a0 <xTaskGenericCreate+0x180>
8000574a:	0e 9c       	mov	r12,r7
8000574c:	5c 7c       	castu.h	r12
8000574e:	a3 6c       	lsl	r12,0x2
80005750:	f0 1f 00 55 	mcall	800058a4 <xTaskGenericCreate+0x184>
80005754:	18 96       	mov	r6,r12
80005756:	8b cc       	st.w	r5[0x30],r12
80005758:	c0 61       	brne	80005764 <xTaskGenericCreate+0x44>
8000575a:	0a 9c       	mov	r12,r5
8000575c:	f0 1f 00 53 	mcall	800058a8 <xTaskGenericCreate+0x188>
80005760:	3f fc       	mov	r12,-1
80005762:	c9 d8       	rjmp	8000589c <xTaskGenericCreate+0x17c>
80005764:	5c 77       	castu.h	r7
80005766:	ee 0a 15 02 	lsl	r10,r7,0x2
8000576a:	e0 6b 00 a5 	mov	r11,165
8000576e:	0c 9c       	mov	r12,r6
80005770:	f0 1f 00 4f 	mcall	800058ac <xTaskGenericCreate+0x18c>
80005774:	ee c6 00 01 	sub	r6,r7,1
80005778:	6a c8       	ld.w	r8,r5[0x30]
8000577a:	f0 06 00 26 	add	r6,r8,r6<<0x2
8000577e:	e0 16 ff fc 	andl	r6,0xfffc
80005782:	31 0a       	mov	r10,16
80005784:	02 9b       	mov	r11,r1
80005786:	ea cc ff cc 	sub	r12,r5,-52
8000578a:	f0 1f 00 4a 	mcall	800058b0 <xTaskGenericCreate+0x190>
8000578e:	30 08       	mov	r8,0
80005790:	eb 68 00 43 	st.b	r5[67],r8
80005794:	58 73       	cp.w	r3,7
80005796:	e6 07 17 80 	movls	r7,r3
8000579a:	f9 b7 0b 07 	movhi	r7,7
8000579e:	8b b7       	st.w	r5[0x2c],r7
800057a0:	ea c4 ff fc 	sub	r4,r5,-4
800057a4:	08 9c       	mov	r12,r4
800057a6:	f0 1f 00 44 	mcall	800058b4 <xTaskGenericCreate+0x194>
800057aa:	ea cc ff e8 	sub	r12,r5,-24
800057ae:	f0 1f 00 42 	mcall	800058b4 <xTaskGenericCreate+0x194>
800057b2:	8b 45       	st.w	r5[0x10],r5
800057b4:	ee 07 11 08 	rsub	r7,r7,8
800057b8:	8b 67       	st.w	r5[0x18],r7
800057ba:	8b 95       	st.w	r5[0x24],r5
800057bc:	00 9a       	mov	r10,r0
800057be:	40 0b       	lddsp	r11,sp[0x0]
800057c0:	0c 9c       	mov	r12,r6
800057c2:	f0 1f 00 3e 	mcall	800058b8 <xTaskGenericCreate+0x198>
800057c6:	8b 0c       	st.w	r5[0x0],r12
800057c8:	58 02       	cp.w	r2,0
800057ca:	e5 f5 1a 00 	st.wne	r2[0x0],r5
800057ce:	f0 1f 00 3c 	mcall	800058bc <xTaskGenericCreate+0x19c>
800057d2:	4b c8       	lddpc	r8,800058c0 <xTaskGenericCreate+0x1a0>
800057d4:	70 09       	ld.w	r9,r8[0x0]
800057d6:	2f f9       	sub	r9,-1
800057d8:	91 09       	st.w	r8[0x0],r9
800057da:	4b b8       	lddpc	r8,800058c4 <xTaskGenericCreate+0x1a4>
800057dc:	70 08       	ld.w	r8,r8[0x0]
800057de:	58 08       	cp.w	r8,0
800057e0:	c2 61       	brne	8000582c <xTaskGenericCreate+0x10c>
800057e2:	4b 98       	lddpc	r8,800058c4 <xTaskGenericCreate+0x1a4>
800057e4:	91 05       	st.w	r8[0x0],r5
800057e6:	4b 78       	lddpc	r8,800058c0 <xTaskGenericCreate+0x1a0>
800057e8:	70 08       	ld.w	r8,r8[0x0]
800057ea:	58 18       	cp.w	r8,1
800057ec:	c2 b1       	brne	80005842 <xTaskGenericCreate+0x122>
800057ee:	4b 77       	lddpc	r7,800058c8 <xTaskGenericCreate+0x1a8>
800057f0:	ee c6 ff 60 	sub	r6,r7,-160
800057f4:	0e 9c       	mov	r12,r7
800057f6:	f0 1f 00 36 	mcall	800058cc <xTaskGenericCreate+0x1ac>
800057fa:	2e c7       	sub	r7,-20
800057fc:	0c 37       	cp.w	r7,r6
800057fe:	cf b1       	brne	800057f4 <xTaskGenericCreate+0xd4>
80005800:	4b 47       	lddpc	r7,800058d0 <xTaskGenericCreate+0x1b0>
80005802:	0e 9c       	mov	r12,r7
80005804:	f0 1f 00 32 	mcall	800058cc <xTaskGenericCreate+0x1ac>
80005808:	4b 36       	lddpc	r6,800058d4 <xTaskGenericCreate+0x1b4>
8000580a:	0c 9c       	mov	r12,r6
8000580c:	f0 1f 00 30 	mcall	800058cc <xTaskGenericCreate+0x1ac>
80005810:	4b 2c       	lddpc	r12,800058d8 <xTaskGenericCreate+0x1b8>
80005812:	f0 1f 00 2f 	mcall	800058cc <xTaskGenericCreate+0x1ac>
80005816:	4b 2c       	lddpc	r12,800058dc <xTaskGenericCreate+0x1bc>
80005818:	f0 1f 00 2d 	mcall	800058cc <xTaskGenericCreate+0x1ac>
8000581c:	4b 1c       	lddpc	r12,800058e0 <xTaskGenericCreate+0x1c0>
8000581e:	f0 1f 00 2c 	mcall	800058cc <xTaskGenericCreate+0x1ac>
80005822:	4b 18       	lddpc	r8,800058e4 <xTaskGenericCreate+0x1c4>
80005824:	91 07       	st.w	r8[0x0],r7
80005826:	4b 18       	lddpc	r8,800058e8 <xTaskGenericCreate+0x1c8>
80005828:	91 06       	st.w	r8[0x0],r6
8000582a:	c0 c8       	rjmp	80005842 <xTaskGenericCreate+0x122>
8000582c:	4b 08       	lddpc	r8,800058ec <xTaskGenericCreate+0x1cc>
8000582e:	70 08       	ld.w	r8,r8[0x0]
80005830:	58 08       	cp.w	r8,0
80005832:	c0 81       	brne	80005842 <xTaskGenericCreate+0x122>
80005834:	4a 48       	lddpc	r8,800058c4 <xTaskGenericCreate+0x1a4>
80005836:	70 08       	ld.w	r8,r8[0x0]
80005838:	70 b8       	ld.w	r8,r8[0x2c]
8000583a:	10 33       	cp.w	r3,r8
8000583c:	c0 33       	brcs	80005842 <xTaskGenericCreate+0x122>
8000583e:	4a 28       	lddpc	r8,800058c4 <xTaskGenericCreate+0x1a4>
80005840:	91 05       	st.w	r8[0x0],r5
80005842:	6a b8       	ld.w	r8,r5[0x2c]
80005844:	4a b9       	lddpc	r9,800058f0 <xTaskGenericCreate+0x1d0>
80005846:	72 09       	ld.w	r9,r9[0x0]
80005848:	12 38       	cp.w	r8,r9
8000584a:	e0 88 00 04 	brls	80005852 <xTaskGenericCreate+0x132>
8000584e:	4a 99       	lddpc	r9,800058f0 <xTaskGenericCreate+0x1d0>
80005850:	93 08       	st.w	r9[0x0],r8
80005852:	4a 98       	lddpc	r8,800058f4 <xTaskGenericCreate+0x1d4>
80005854:	70 09       	ld.w	r9,r8[0x0]
80005856:	2f f9       	sub	r9,-1
80005858:	91 09       	st.w	r8[0x0],r9
8000585a:	6a b8       	ld.w	r8,r5[0x2c]
8000585c:	4a 79       	lddpc	r9,800058f8 <xTaskGenericCreate+0x1d8>
8000585e:	72 09       	ld.w	r9,r9[0x0]
80005860:	12 38       	cp.w	r8,r9
80005862:	e0 88 00 04 	brls	8000586a <xTaskGenericCreate+0x14a>
80005866:	4a 59       	lddpc	r9,800058f8 <xTaskGenericCreate+0x1d8>
80005868:	93 08       	st.w	r9[0x0],r8
8000586a:	6a bc       	ld.w	r12,r5[0x2c]
8000586c:	f8 0c 00 2c 	add	r12,r12,r12<<0x2
80005870:	08 9b       	mov	r11,r4
80005872:	49 68       	lddpc	r8,800058c8 <xTaskGenericCreate+0x1a8>
80005874:	f0 0c 00 2c 	add	r12,r8,r12<<0x2
80005878:	f0 1f 00 21 	mcall	800058fc <xTaskGenericCreate+0x1dc>
8000587c:	f0 1f 00 21 	mcall	80005900 <xTaskGenericCreate+0x1e0>
80005880:	49 b8       	lddpc	r8,800058ec <xTaskGenericCreate+0x1cc>
80005882:	70 08       	ld.w	r8,r8[0x0]
80005884:	58 08       	cp.w	r8,0
80005886:	c0 a0       	breq	8000589a <xTaskGenericCreate+0x17a>
80005888:	48 f8       	lddpc	r8,800058c4 <xTaskGenericCreate+0x1a4>
8000588a:	70 08       	ld.w	r8,r8[0x0]
8000588c:	70 b8       	ld.w	r8,r8[0x2c]
8000588e:	10 33       	cp.w	r3,r8
80005890:	e0 88 00 05 	brls	8000589a <xTaskGenericCreate+0x17a>
80005894:	d7 33       	scall
80005896:	30 1c       	mov	r12,1
80005898:	c0 28       	rjmp	8000589c <xTaskGenericCreate+0x17c>
8000589a:	30 1c       	mov	r12,1
8000589c:	2f fd       	sub	sp,-4
8000589e:	d8 32       	popm	r0-r7,pc
800058a0:	99 c6       	st.w	r12[0x30],r6
800058a2:	c6 1b       	rjmp	80005764 <xTaskGenericCreate+0x44>
800058a4:	80 00       	ld.sh	r0,r0[0x0]
800058a6:	53 f0       	stdsp	sp[0xfc],r0
800058a8:	80 00       	ld.sh	r0,r0[0x0]
800058aa:	53 c8       	stdsp	sp[0xf0],r8
800058ac:	80 00       	ld.sh	r0,r0[0x0]
800058ae:	7e 84       	ld.w	r4,pc[0x20]
800058b0:	80 00       	ld.sh	r0,r0[0x0]
800058b2:	7f 00       	ld.w	r0,pc[0x40]
800058b4:	80 00       	ld.sh	r0,r0[0x0]
800058b6:	51 0c       	stdsp	sp[0x40],r12
800058b8:	80 00       	ld.sh	r0,r0[0x0]
800058ba:	51 54       	stdsp	sp[0x54],r4
800058bc:	80 00       	ld.sh	r0,r0[0x0]
800058be:	51 e8       	stdsp	sp[0x78],r8
800058c0:	00 00       	add	r0,r0
800058c2:	0d 1c       	ld.sh	r12,r6++
800058c4:	00 00       	add	r0,r0
800058c6:	0c d0       	st.w	--r6,r0
800058c8:	00 00       	add	r0,r0
800058ca:	0c 1c       	sub	r12,r6
800058cc:	80 00       	ld.sh	r0,r0[0x0]
800058ce:	50 f8       	stdsp	sp[0x3c],r8
800058d0:	00 00       	add	r0,r0
800058d2:	0c e8       	st.h	--r6,r8
800058d4:	00 00       	add	r0,r0
800058d6:	0d 04       	ld.w	r4,r6++
800058d8:	00 00       	add	r0,r0
800058da:	0c d4       	st.w	--r6,r4
800058dc:	00 00       	add	r0,r0
800058de:	0c bc       	st.h	r6++,r12
800058e0:	00 00       	add	r0,r0
800058e2:	0d 24       	ld.uh	r4,r6++
800058e4:	00 00       	add	r0,r0
800058e6:	0c 08       	add	r8,r6
800058e8:	00 00       	add	r0,r0
800058ea:	0c 18       	sub	r8,r6
800058ec:	00 00       	add	r0,r0
800058ee:	0c 0c       	add	r12,r6
800058f0:	00 00       	add	r0,r0
800058f2:	0c 04       	add	r4,r6
800058f4:	00 00       	add	r0,r0
800058f6:	0d 18       	ld.sh	r8,r6++
800058f8:	00 00       	add	r0,r0
800058fa:	0d 38       	ld.ub	r8,r6++
800058fc:	80 00       	ld.sh	r0,r0[0x0]
800058fe:	51 12       	stdsp	sp[0x44],r2
80005900:	80 00       	ld.sh	r0,r0[0x0]
80005902:	52 f4       	stdsp	sp[0xbc],r4

80005904 <vTaskStartScheduler>:
80005904:	d4 01       	pushm	lr
80005906:	30 09       	mov	r9,0
80005908:	1a d9       	st.w	--sp,r9
8000590a:	1a d9       	st.w	--sp,r9
8000590c:	1a d9       	st.w	--sp,r9
8000590e:	12 98       	mov	r8,r9
80005910:	e0 6a 01 00 	mov	r10,256
80005914:	48 9b       	lddpc	r11,80005938 <vTaskStartScheduler+0x34>
80005916:	48 ac       	lddpc	r12,8000593c <vTaskStartScheduler+0x38>
80005918:	f0 1f 00 0a 	mcall	80005940 <vTaskStartScheduler+0x3c>
8000591c:	2f dd       	sub	sp,-12
8000591e:	58 1c       	cp.w	r12,1
80005920:	c0 a1       	brne	80005934 <vTaskStartScheduler+0x30>
80005922:	d3 03       	ssrf	0x10
80005924:	30 19       	mov	r9,1
80005926:	48 88       	lddpc	r8,80005944 <vTaskStartScheduler+0x40>
80005928:	91 09       	st.w	r8[0x0],r9
8000592a:	30 09       	mov	r9,0
8000592c:	48 78       	lddpc	r8,80005948 <vTaskStartScheduler+0x44>
8000592e:	91 09       	st.w	r8[0x0],r9
80005930:	f0 1f 00 07 	mcall	8000594c <vTaskStartScheduler+0x48>
80005934:	d8 02       	popm	pc
80005936:	00 00       	add	r0,r0
80005938:	80 00       	ld.sh	r0,r0[0x0]
8000593a:	a5 c4       	cbr	r4,0x4
8000593c:	80 00       	ld.sh	r0,r0[0x0]
8000593e:	56 a0       	stdsp	sp[0x1a8],r0
80005940:	80 00       	ld.sh	r0,r0[0x0]
80005942:	57 20       	stdsp	sp[0x1c8],r0
80005944:	00 00       	add	r0,r0
80005946:	0c 0c       	add	r12,r6
80005948:	00 00       	add	r0,r0
8000594a:	0c fc       	st.b	--r6,r12
8000594c:	80 00       	ld.sh	r0,r0[0x0]
8000594e:	51 f8       	stdsp	sp[0x7c],r8

80005950 <roundf>:
80005950:	d4 01       	pushm	lr
80005952:	f1 dc c2 e8 	bfextu	r8,r12,0x17,0x8
80005956:	18 9b       	mov	r11,r12
80005958:	18 99       	mov	r9,r12
8000595a:	27 f8       	sub	r8,127
8000595c:	59 68       	cp.w	r8,22
8000595e:	e0 89 00 1f 	brgt	8000599c <roundf+0x4c>
80005962:	58 08       	cp.w	r8,0
80005964:	c0 94       	brge	80005976 <roundf+0x26>
80005966:	18 9b       	mov	r11,r12
80005968:	e6 1b 80 00 	andh	r11,0x8000,COH
8000596c:	5b f8       	cp.w	r8,-1
8000596e:	c1 d1       	brne	800059a8 <roundf+0x58>
80005970:	ea 1b 3f 80 	orh	r11,0x3f80
80005974:	c1 a8       	rjmp	800059a8 <roundf+0x58>
80005976:	e0 6a ff ff 	mov	r10,65535
8000597a:	ea 1a 00 7f 	orh	r10,0x7f
8000597e:	f4 08 08 4a 	asr	r10,r10,r8
80005982:	f5 ec 00 0c 	and	r12,r10,r12
80005986:	c1 10       	breq	800059a8 <roundf+0x58>
80005988:	fc 1b 00 40 	movh	r11,0x40
8000598c:	5c da       	com	r10
8000598e:	f6 08 08 48 	asr	r8,r11,r8
80005992:	f0 09 00 09 	add	r9,r8,r9
80005996:	f5 e9 00 0b 	and	r11,r10,r9
8000599a:	c0 78       	rjmp	800059a8 <roundf+0x58>
8000599c:	e0 48 00 80 	cp.w	r8,128
800059a0:	c0 41       	brne	800059a8 <roundf+0x58>
800059a2:	e0 a0 0e b3 	rcall	80007708 <__avr32_f32_add>
800059a6:	18 9b       	mov	r11,r12
800059a8:	16 9c       	mov	r12,r11
800059aa:	d8 02       	popm	pc

800059ac <pow>:
800059ac:	d4 31       	pushm	r0-r7,lr
800059ae:	20 cd       	sub	sp,48
800059b0:	10 94       	mov	r4,r8
800059b2:	14 92       	mov	r2,r10
800059b4:	16 93       	mov	r3,r11
800059b6:	12 95       	mov	r5,r9
800059b8:	c9 cd       	rcall	80005cf0 <__ieee754_pow>
800059ba:	e0 66 04 84 	mov	r6,1156
800059be:	14 90       	mov	r0,r10
800059c0:	16 91       	mov	r1,r11
800059c2:	6c 08       	ld.w	r8,r6[0x0]
800059c4:	5b f8       	cp.w	r8,-1
800059c6:	e0 80 01 44 	breq	80005c4e <pow+0x2a2>
800059ca:	08 9a       	mov	r10,r4
800059cc:	0a 9b       	mov	r11,r5
800059ce:	e0 a0 07 ab 	rcall	80006924 <__isnand>
800059d2:	50 2c       	stdsp	sp[0x8],r12
800059d4:	e0 81 01 3d 	brne	80005c4e <pow+0x2a2>
800059d8:	04 9a       	mov	r10,r2
800059da:	06 9b       	mov	r11,r3
800059dc:	e0 a0 07 a4 	rcall	80006924 <__isnand>
800059e0:	18 97       	mov	r7,r12
800059e2:	c2 50       	breq	80005a2c <pow+0x80>
800059e4:	30 08       	mov	r8,0
800059e6:	30 09       	mov	r9,0
800059e8:	08 9a       	mov	r10,r4
800059ea:	0a 9b       	mov	r11,r5
800059ec:	e0 a0 0b 6c 	rcall	800070c4 <__avr32_f64_cmp_eq>
800059f0:	e0 80 01 2f 	breq	80005c4e <pow+0x2a2>
800059f4:	30 18       	mov	r8,1
800059f6:	50 38       	stdsp	sp[0xc],r8
800059f8:	fe c8 b4 2c 	sub	r8,pc,-19412
800059fc:	40 2c       	lddsp	r12,sp[0x8]
800059fe:	50 48       	stdsp	sp[0x10],r8
80005a00:	fc 19 3f f0 	movh	r9,0x3ff0
80005a04:	30 08       	mov	r8,0
80005a06:	fa e3 00 14 	st.d	sp[20],r2
80005a0a:	fa e5 00 1c 	st.d	sp[28],r4
80005a0e:	50 bc       	stdsp	sp[0x2c],r12
80005a10:	fa e9 00 24 	st.d	sp[36],r8
80005a14:	6c 0a       	ld.w	r10,r6[0x0]
80005a16:	5b fa       	cp.w	r10,-1
80005a18:	5f 0b       	sreq	r11
80005a1a:	58 2a       	cp.w	r10,2
80005a1c:	5f 0a       	sreq	r10
80005a1e:	f5 eb 10 0b 	or	r11,r10,r11
80005a22:	f8 0b 18 00 	cp.b	r11,r12
80005a26:	e0 81 01 0b 	brne	80005c3c <pow+0x290>
80005a2a:	c7 e8       	rjmp	80005b26 <pow+0x17a>
80005a2c:	30 08       	mov	r8,0
80005a2e:	30 09       	mov	r9,0
80005a30:	04 9a       	mov	r10,r2
80005a32:	06 9b       	mov	r11,r3
80005a34:	e0 a0 0b 48 	rcall	800070c4 <__avr32_f64_cmp_eq>
80005a38:	c4 20       	breq	80005abc <pow+0x110>
80005a3a:	30 08       	mov	r8,0
80005a3c:	30 09       	mov	r9,0
80005a3e:	08 9a       	mov	r10,r4
80005a40:	0a 9b       	mov	r11,r5
80005a42:	e0 a0 0b 41 	rcall	800070c4 <__avr32_f64_cmp_eq>
80005a46:	c1 80       	breq	80005a76 <pow+0xca>
80005a48:	30 18       	mov	r8,1
80005a4a:	50 38       	stdsp	sp[0xc],r8
80005a4c:	fe c8 b4 80 	sub	r8,pc,-19328
80005a50:	30 09       	mov	r9,0
80005a52:	50 48       	stdsp	sp[0x10],r8
80005a54:	50 b7       	stdsp	sp[0x2c],r7
80005a56:	30 08       	mov	r8,0
80005a58:	fa e3 00 14 	st.d	sp[20],r2
80005a5c:	fa e9 00 24 	st.d	sp[36],r8
80005a60:	fa e5 00 1c 	st.d	sp[28],r4
80005a64:	6c 08       	ld.w	r8,r6[0x0]
80005a66:	58 08       	cp.w	r8,0
80005a68:	c5 f0       	breq	80005b26 <pow+0x17a>
80005a6a:	30 08       	mov	r8,0
80005a6c:	fc 19 3f f0 	movh	r9,0x3ff0
80005a70:	fa e9 00 24 	st.d	sp[36],r8
80005a74:	ce 48       	rjmp	80005c3c <pow+0x290>
80005a76:	08 9a       	mov	r10,r4
80005a78:	0a 9b       	mov	r11,r5
80005a7a:	e0 a0 07 4d 	rcall	80006914 <finite>
80005a7e:	e0 80 00 e8 	breq	80005c4e <pow+0x2a2>
80005a82:	30 08       	mov	r8,0
80005a84:	30 09       	mov	r9,0
80005a86:	08 9a       	mov	r10,r4
80005a88:	0a 9b       	mov	r11,r5
80005a8a:	e0 a0 0b 64 	rcall	80007152 <__avr32_f64_cmp_lt>
80005a8e:	e0 80 00 e0 	breq	80005c4e <pow+0x2a2>
80005a92:	30 18       	mov	r8,1
80005a94:	50 b7       	stdsp	sp[0x2c],r7
80005a96:	50 38       	stdsp	sp[0xc],r8
80005a98:	fa e3 00 14 	st.d	sp[20],r2
80005a9c:	fe c8 b4 d0 	sub	r8,pc,-19248
80005aa0:	fa e5 00 1c 	st.d	sp[28],r4
80005aa4:	50 48       	stdsp	sp[0x10],r8
80005aa6:	6c 08       	ld.w	r8,r6[0x0]
80005aa8:	58 08       	cp.w	r8,0
80005aaa:	c2 f0       	breq	80005b08 <pow+0x15c>
80005aac:	30 0a       	mov	r10,0
80005aae:	f0 6b 00 00 	mov	r11,-1048576
80005ab2:	fa eb 00 24 	st.d	sp[36],r10
80005ab6:	58 28       	cp.w	r8,2
80005ab8:	c3 d0       	breq	80005b32 <pow+0x186>
80005aba:	c3 68       	rjmp	80005b26 <pow+0x17a>
80005abc:	00 9a       	mov	r10,r0
80005abe:	02 9b       	mov	r11,r1
80005ac0:	e0 a0 07 2a 	rcall	80006914 <finite>
80005ac4:	18 97       	mov	r7,r12
80005ac6:	e0 81 00 8d 	brne	80005be0 <pow+0x234>
80005aca:	04 9a       	mov	r10,r2
80005acc:	06 9b       	mov	r11,r3
80005ace:	e0 a0 07 23 	rcall	80006914 <finite>
80005ad2:	e0 80 00 87 	breq	80005be0 <pow+0x234>
80005ad6:	08 9a       	mov	r10,r4
80005ad8:	0a 9b       	mov	r11,r5
80005ada:	e0 a0 07 1d 	rcall	80006914 <finite>
80005ade:	e0 80 00 81 	breq	80005be0 <pow+0x234>
80005ae2:	00 9a       	mov	r10,r0
80005ae4:	02 9b       	mov	r11,r1
80005ae6:	e0 a0 07 1f 	rcall	80006924 <__isnand>
80005aea:	fe c8 b5 1e 	sub	r8,pc,-19170
80005aee:	58 0c       	cp.w	r12,0
80005af0:	c2 50       	breq	80005b3a <pow+0x18e>
80005af2:	50 48       	stdsp	sp[0x10],r8
80005af4:	50 b7       	stdsp	sp[0x2c],r7
80005af6:	30 18       	mov	r8,1
80005af8:	fa e3 00 14 	st.d	sp[20],r2
80005afc:	fa e5 00 1c 	st.d	sp[28],r4
80005b00:	50 38       	stdsp	sp[0xc],r8
80005b02:	6c 07       	ld.w	r7,r6[0x0]
80005b04:	58 07       	cp.w	r7,0
80005b06:	c0 61       	brne	80005b12 <pow+0x166>
80005b08:	30 08       	mov	r8,0
80005b0a:	30 09       	mov	r9,0
80005b0c:	fa e9 00 24 	st.d	sp[36],r8
80005b10:	c0 b8       	rjmp	80005b26 <pow+0x17a>
80005b12:	30 08       	mov	r8,0
80005b14:	30 09       	mov	r9,0
80005b16:	10 9a       	mov	r10,r8
80005b18:	12 9b       	mov	r11,r9
80005b1a:	e0 a0 0b 51 	rcall	800071bc <__avr32_f64_div>
80005b1e:	fa eb 00 24 	st.d	sp[36],r10
80005b22:	58 27       	cp.w	r7,2
80005b24:	c0 70       	breq	80005b32 <pow+0x186>
80005b26:	fa cc ff f4 	sub	r12,sp,-12
80005b2a:	e0 a0 07 0b 	rcall	80006940 <matherr>
80005b2e:	e0 81 00 87 	brne	80005c3c <pow+0x290>
80005b32:	e0 a0 0e c5 	rcall	800078bc <__errno>
80005b36:	32 18       	mov	r8,33
80005b38:	c8 18       	rjmp	80005c3a <pow+0x28e>
80005b3a:	50 48       	stdsp	sp[0x10],r8
80005b3c:	50 bc       	stdsp	sp[0x2c],r12
80005b3e:	30 38       	mov	r8,3
80005b40:	fa e3 00 14 	st.d	sp[20],r2
80005b44:	50 38       	stdsp	sp[0xc],r8
80005b46:	fa e5 00 1c 	st.d	sp[28],r4
80005b4a:	6c 08       	ld.w	r8,r6[0x0]
80005b4c:	58 08       	cp.w	r8,0
80005b4e:	c2 81       	brne	80005b9e <pow+0x1f2>
80005b50:	fc 18 e0 00 	movh	r8,0xe000
80005b54:	e0 69 ff ff 	mov	r9,65535
80005b58:	ea 19 47 ef 	orh	r9,0x47ef
80005b5c:	04 9a       	mov	r10,r2
80005b5e:	fa e9 00 24 	st.d	sp[36],r8
80005b62:	06 9b       	mov	r11,r3
80005b64:	30 08       	mov	r8,0
80005b66:	30 09       	mov	r9,0
80005b68:	e0 a0 0a f5 	rcall	80007152 <__avr32_f64_cmp_lt>
80005b6c:	c5 a0       	breq	80005c20 <pow+0x274>
80005b6e:	fc 19 3f e0 	movh	r9,0x3fe0
80005b72:	30 08       	mov	r8,0
80005b74:	08 9a       	mov	r10,r4
80005b76:	0a 9b       	mov	r11,r5
80005b78:	e0 a0 07 f0 	rcall	80006b58 <__avr32_f64_mul>
80005b7c:	16 99       	mov	r9,r11
80005b7e:	50 0a       	stdsp	sp[0x0],r10
80005b80:	50 19       	stdsp	sp[0x4],r9
80005b82:	e0 a0 06 e5 	rcall	8000694c <rint>
80005b86:	40 19       	lddsp	r9,sp[0x4]
80005b88:	40 08       	lddsp	r8,sp[0x0]
80005b8a:	e0 a0 0a 9d 	rcall	800070c4 <__avr32_f64_cmp_eq>
80005b8e:	c4 91       	brne	80005c20 <pow+0x274>
80005b90:	fc 18 e0 00 	movh	r8,0xe000
80005b94:	e0 69 ff ff 	mov	r9,65535
80005b98:	ea 19 c7 ef 	orh	r9,0xc7ef
80005b9c:	c4 08       	rjmp	80005c1c <pow+0x270>
80005b9e:	30 08       	mov	r8,0
80005ba0:	fc 19 7f f0 	movh	r9,0x7ff0
80005ba4:	04 9a       	mov	r10,r2
80005ba6:	fa e9 00 24 	st.d	sp[36],r8
80005baa:	06 9b       	mov	r11,r3
80005bac:	30 08       	mov	r8,0
80005bae:	30 09       	mov	r9,0
80005bb0:	e0 a0 0a d1 	rcall	80007152 <__avr32_f64_cmp_lt>
80005bb4:	c3 60       	breq	80005c20 <pow+0x274>
80005bb6:	fc 19 3f e0 	movh	r9,0x3fe0
80005bba:	30 08       	mov	r8,0
80005bbc:	08 9a       	mov	r10,r4
80005bbe:	0a 9b       	mov	r11,r5
80005bc0:	e0 a0 07 cc 	rcall	80006b58 <__avr32_f64_mul>
80005bc4:	16 99       	mov	r9,r11
80005bc6:	50 0a       	stdsp	sp[0x0],r10
80005bc8:	50 19       	stdsp	sp[0x4],r9
80005bca:	e0 a0 06 c1 	rcall	8000694c <rint>
80005bce:	40 19       	lddsp	r9,sp[0x4]
80005bd0:	40 08       	lddsp	r8,sp[0x0]
80005bd2:	e0 a0 0a 79 	rcall	800070c4 <__avr32_f64_cmp_eq>
80005bd6:	c2 51       	brne	80005c20 <pow+0x274>
80005bd8:	30 08       	mov	r8,0
80005bda:	f0 69 00 00 	mov	r9,-1048576
80005bde:	c1 f8       	rjmp	80005c1c <pow+0x270>
80005be0:	30 08       	mov	r8,0
80005be2:	30 09       	mov	r9,0
80005be4:	00 9a       	mov	r10,r0
80005be6:	02 9b       	mov	r11,r1
80005be8:	e0 a0 0a 6e 	rcall	800070c4 <__avr32_f64_cmp_eq>
80005bec:	c3 10       	breq	80005c4e <pow+0x2a2>
80005bee:	04 9a       	mov	r10,r2
80005bf0:	06 9b       	mov	r11,r3
80005bf2:	e0 a0 06 91 	rcall	80006914 <finite>
80005bf6:	c2 c0       	breq	80005c4e <pow+0x2a2>
80005bf8:	08 9a       	mov	r10,r4
80005bfa:	0a 9b       	mov	r11,r5
80005bfc:	e0 a0 06 8c 	rcall	80006914 <finite>
80005c00:	c2 70       	breq	80005c4e <pow+0x2a2>
80005c02:	30 48       	mov	r8,4
80005c04:	50 38       	stdsp	sp[0xc],r8
80005c06:	fe c8 b6 3a 	sub	r8,pc,-18886
80005c0a:	50 48       	stdsp	sp[0x10],r8
80005c0c:	30 08       	mov	r8,0
80005c0e:	fa e3 00 14 	st.d	sp[20],r2
80005c12:	50 b8       	stdsp	sp[0x2c],r8
80005c14:	fa e5 00 1c 	st.d	sp[28],r4
80005c18:	30 08       	mov	r8,0
80005c1a:	30 09       	mov	r9,0
80005c1c:	fa e9 00 24 	st.d	sp[36],r8
80005c20:	e0 68 04 84 	mov	r8,1156
80005c24:	70 08       	ld.w	r8,r8[0x0]
80005c26:	58 28       	cp.w	r8,2
80005c28:	c0 60       	breq	80005c34 <pow+0x288>
80005c2a:	fa cc ff f4 	sub	r12,sp,-12
80005c2e:	e0 a0 06 89 	rcall	80006940 <matherr>
80005c32:	c0 51       	brne	80005c3c <pow+0x290>
80005c34:	e0 a0 0e 44 	rcall	800078bc <__errno>
80005c38:	32 28       	mov	r8,34
80005c3a:	99 08       	st.w	r12[0x0],r8
80005c3c:	40 b8       	lddsp	r8,sp[0x2c]
80005c3e:	58 08       	cp.w	r8,0
80005c40:	c0 50       	breq	80005c4a <pow+0x29e>
80005c42:	e0 a0 0e 3d 	rcall	800078bc <__errno>
80005c46:	40 b8       	lddsp	r8,sp[0x2c]
80005c48:	99 08       	st.w	r12[0x0],r8
80005c4a:	fa e0 00 24 	ld.d	r0,sp[36]
80005c4e:	00 9a       	mov	r10,r0
80005c50:	02 9b       	mov	r11,r1
80005c52:	2f 4d       	sub	sp,-48
80005c54:	d8 32       	popm	r0-r7,pc
80005c56:	d7 03       	nop

80005c58 <sqrt>:
80005c58:	d4 31       	pushm	r0-r7,lr
80005c5a:	20 9d       	sub	sp,36
80005c5c:	e0 67 04 84 	mov	r7,1156
80005c60:	14 94       	mov	r4,r10
80005c62:	16 95       	mov	r5,r11
80005c64:	e0 a0 05 90 	rcall	80006784 <__ieee754_sqrt>
80005c68:	6e 08       	ld.w	r8,r7[0x0]
80005c6a:	14 92       	mov	r2,r10
80005c6c:	16 93       	mov	r3,r11
80005c6e:	5b f8       	cp.w	r8,-1
80005c70:	c3 b0       	breq	80005ce6 <sqrt+0x8e>
80005c72:	08 9a       	mov	r10,r4
80005c74:	0a 9b       	mov	r11,r5
80005c76:	e0 a0 06 57 	rcall	80006924 <__isnand>
80005c7a:	18 96       	mov	r6,r12
80005c7c:	c3 51       	brne	80005ce6 <sqrt+0x8e>
80005c7e:	30 08       	mov	r8,0
80005c80:	30 09       	mov	r9,0
80005c82:	08 9a       	mov	r10,r4
80005c84:	0a 9b       	mov	r11,r5
80005c86:	e0 a0 0a 66 	rcall	80007152 <__avr32_f64_cmp_lt>
80005c8a:	c2 e0       	breq	80005ce6 <sqrt+0x8e>
80005c8c:	30 18       	mov	r8,1
80005c8e:	50 86       	stdsp	sp[0x20],r6
80005c90:	50 08       	stdsp	sp[0x0],r8
80005c92:	fa e5 00 08 	st.d	sp[8],r4
80005c96:	fe c8 b6 c6 	sub	r8,pc,-18746
80005c9a:	fa e5 00 10 	st.d	sp[16],r4
80005c9e:	50 18       	stdsp	sp[0x4],r8
80005ca0:	6e 07       	ld.w	r7,r7[0x0]
80005ca2:	58 07       	cp.w	r7,0
80005ca4:	c0 61       	brne	80005cb0 <sqrt+0x58>
80005ca6:	30 08       	mov	r8,0
80005ca8:	30 09       	mov	r9,0
80005caa:	fa e9 00 18 	st.d	sp[24],r8
80005cae:	c0 b8       	rjmp	80005cc4 <sqrt+0x6c>
80005cb0:	30 08       	mov	r8,0
80005cb2:	30 09       	mov	r9,0
80005cb4:	10 9a       	mov	r10,r8
80005cb6:	12 9b       	mov	r11,r9
80005cb8:	e0 a0 0a 82 	rcall	800071bc <__avr32_f64_div>
80005cbc:	fa eb 00 18 	st.d	sp[24],r10
80005cc0:	58 27       	cp.w	r7,2
80005cc2:	c0 50       	breq	80005ccc <sqrt+0x74>
80005cc4:	1a 9c       	mov	r12,sp
80005cc6:	e0 a0 06 3d 	rcall	80006940 <matherr>
80005cca:	c0 51       	brne	80005cd4 <sqrt+0x7c>
80005ccc:	e0 a0 0d f8 	rcall	800078bc <__errno>
80005cd0:	32 18       	mov	r8,33
80005cd2:	99 08       	st.w	r12[0x0],r8
80005cd4:	40 88       	lddsp	r8,sp[0x20]
80005cd6:	58 08       	cp.w	r8,0
80005cd8:	c0 50       	breq	80005ce2 <sqrt+0x8a>
80005cda:	e0 a0 0d f1 	rcall	800078bc <__errno>
80005cde:	40 88       	lddsp	r8,sp[0x20]
80005ce0:	99 08       	st.w	r12[0x0],r8
80005ce2:	fa e2 00 18 	ld.d	r2,sp[24]
80005ce6:	04 9a       	mov	r10,r2
80005ce8:	06 9b       	mov	r11,r3
80005cea:	2f 7d       	sub	sp,-36
80005cec:	d8 32       	popm	r0-r7,pc
80005cee:	d7 03       	nop

80005cf0 <__ieee754_pow>:
80005cf0:	d4 31       	pushm	r0-r7,lr
80005cf2:	20 ed       	sub	sp,56
80005cf4:	10 94       	mov	r4,r8
80005cf6:	12 95       	mov	r5,r9
80005cf8:	50 7b       	stdsp	sp[0x1c],r11
80005cfa:	fa e5 00 0c 	st.d	sp[12],r4
80005cfe:	12 97       	mov	r7,r9
80005d00:	10 96       	mov	r6,r8
80005d02:	40 31       	lddsp	r1,sp[0xc]
80005d04:	40 49       	lddsp	r9,sp[0x10]
80005d06:	e5 d1 c0 1f 	bfextu	r2,r1,0x0,0x1f
80005d0a:	16 90       	mov	r0,r11
80005d0c:	14 93       	mov	r3,r10
80005d0e:	14 98       	mov	r8,r10
80005d10:	e5 e9 10 0c 	or	r12,r2,r9
80005d14:	e0 80 05 2b 	breq	8000676a <__ieee754_pow+0xa7a>
80005d18:	50 1b       	stdsp	sp[0x4],r11
80005d1a:	16 9e       	mov	lr,r11
80005d1c:	e9 db c0 1f 	bfextu	r4,r11,0x0,0x1f
80005d20:	fc 1c 7f f0 	movh	r12,0x7ff0
80005d24:	18 34       	cp.w	r4,r12
80005d26:	e0 89 00 1a 	brgt	80005d5a <__ieee754_pow+0x6a>
80005d2a:	5f 05       	sreq	r5
80005d2c:	50 55       	stdsp	sp[0x14],r5
80005d2e:	30 0c       	mov	r12,0
80005d30:	58 0a       	cp.w	r10,0
80005d32:	5f 15       	srne	r5
80005d34:	40 5e       	lddsp	lr,sp[0x14]
80005d36:	fd e5 00 05 	and	r5,lr,r5
80005d3a:	f8 05 18 00 	cp.b	r5,r12
80005d3e:	c0 e1       	brne	80005d5a <__ieee754_pow+0x6a>
80005d40:	fc 1c 7f f0 	movh	r12,0x7ff0
80005d44:	18 32       	cp.w	r2,r12
80005d46:	e0 89 00 0a 	brgt	80005d5a <__ieee754_pow+0x6a>
80005d4a:	5f 0c       	sreq	r12
80005d4c:	58 09       	cp.w	r9,0
80005d4e:	5f 1e       	srne	lr
80005d50:	f9 ee 00 0e 	and	lr,r12,lr
80005d54:	ea 0e 18 00 	cp.b	lr,r5
80005d58:	c0 e0       	breq	80005d74 <__ieee754_pow+0x84>
80005d5a:	fc 19 c0 10 	movh	r9,0xc010
80005d5e:	12 04       	add	r4,r9
80005d60:	e9 e8 10 08 	or	r8,r4,r8
80005d64:	e0 80 05 03 	breq	8000676a <__ieee754_pow+0xa7a>
80005d68:	fe cc ba 58 	sub	r12,pc,-17832
80005d6c:	e0 a0 05 eb 	rcall	80006942 <nan>
80005d70:	e0 8f 04 fa 	bral	80006764 <__ieee754_pow+0xa74>
80005d74:	58 0b       	cp.w	r11,0
80005d76:	c3 64       	brge	80005de2 <__ieee754_pow+0xf2>
80005d78:	e0 6b ff ff 	mov	r11,65535
80005d7c:	ea 1b 43 3f 	orh	r11,0x433f
80005d80:	16 32       	cp.w	r2,r11
80005d82:	e0 8a 00 04 	brle	80005d8a <__ieee754_pow+0x9a>
80005d86:	30 25       	mov	r5,2
80005d88:	c2 e8       	rjmp	80005de4 <__ieee754_pow+0xf4>
80005d8a:	e0 6a ff ff 	mov	r10,65535
80005d8e:	ea 1a 3f ef 	orh	r10,0x3fef
80005d92:	14 32       	cp.w	r2,r10
80005d94:	e0 8a 00 27 	brle	80005de2 <__ieee754_pow+0xf2>
80005d98:	e4 0a 14 14 	asr	r10,r2,0x14
80005d9c:	f4 ca 03 ff 	sub	r10,r10,1023
80005da0:	59 4a       	cp.w	r10,20
80005da2:	e0 8a 00 0f 	brle	80005dc0 <__ieee754_pow+0xd0>
80005da6:	f4 0a 11 34 	rsub	r10,r10,52
80005daa:	f2 0a 0a 45 	lsr	r5,r9,r10
80005dae:	ea 0a 09 4a 	lsl	r10,r5,r10
80005db2:	12 3a       	cp.w	r10,r9
80005db4:	c1 71       	brne	80005de2 <__ieee754_pow+0xf2>
80005db6:	eb d5 c0 01 	bfextu	r5,r5,0x0,0x1
80005dba:	ea 05 11 02 	rsub	r5,r5,2
80005dbe:	c1 38       	rjmp	80005de4 <__ieee754_pow+0xf4>
80005dc0:	40 49       	lddsp	r9,sp[0x10]
80005dc2:	58 09       	cp.w	r9,0
80005dc4:	c5 01       	brne	80005e64 <__ieee754_pow+0x174>
80005dc6:	f4 0a 11 14 	rsub	r10,r10,20
80005dca:	e4 0a 08 45 	asr	r5,r2,r10
80005dce:	ea 0a 09 4a 	lsl	r10,r5,r10
80005dd2:	04 3a       	cp.w	r10,r2
80005dd4:	e0 81 04 d5 	brne	8000677e <__ieee754_pow+0xa8e>
80005dd8:	eb d5 c0 01 	bfextu	r5,r5,0x0,0x1
80005ddc:	ea 05 11 02 	rsub	r5,r5,2
80005de0:	c0 48       	rjmp	80005de8 <__ieee754_pow+0xf8>
80005de2:	30 05       	mov	r5,0
80005de4:	58 09       	cp.w	r9,0
80005de6:	c4 01       	brne	80005e66 <__ieee754_pow+0x176>
80005de8:	58 0c       	cp.w	r12,0
80005dea:	c1 90       	breq	80005e1c <__ieee754_pow+0x12c>
80005dec:	fc 19 c0 10 	movh	r9,0xc010
80005df0:	e8 09 00 09 	add	r9,r4,r9
80005df4:	f3 e8 10 08 	or	r8,r9,r8
80005df8:	e0 80 04 b9 	breq	8000676a <__ieee754_pow+0xa7a>
80005dfc:	e0 68 ff ff 	mov	r8,65535
80005e00:	ea 18 3f ef 	orh	r8,0x3fef
80005e04:	10 34       	cp.w	r4,r8
80005e06:	e0 8a 00 07 	brle	80005e14 <__ieee754_pow+0x124>
80005e0a:	58 01       	cp.w	r1,0
80005e0c:	e0 84 04 b5 	brge	80006776 <__ieee754_pow+0xa86>
80005e10:	e0 8f 04 b1 	bral	80006772 <__ieee754_pow+0xa82>
80005e14:	58 01       	cp.w	r1,0
80005e16:	e0 84 04 ae 	brge	80006772 <__ieee754_pow+0xa82>
80005e1a:	c5 68       	rjmp	80005ec6 <__ieee754_pow+0x1d6>
80005e1c:	fc 1e 3f f0 	movh	lr,0x3ff0
80005e20:	1c 32       	cp.w	r2,lr
80005e22:	c0 d1       	brne	80005e3c <__ieee754_pow+0x14c>
80005e24:	58 01       	cp.w	r1,0
80005e26:	c0 55       	brlt	80005e30 <__ieee754_pow+0x140>
80005e28:	00 97       	mov	r7,r0
80005e2a:	06 96       	mov	r6,r3
80005e2c:	e0 8f 04 a5 	bral	80006776 <__ieee754_pow+0xa86>
80005e30:	00 99       	mov	r9,r0
80005e32:	06 98       	mov	r8,r3
80005e34:	30 0a       	mov	r10,0
80005e36:	fc 1b 3f f0 	movh	r11,0x3ff0
80005e3a:	c5 98       	rjmp	80005eec <__ieee754_pow+0x1fc>
80005e3c:	fc 1c 40 00 	movh	r12,0x4000
80005e40:	18 31       	cp.w	r1,r12
80005e42:	c0 41       	brne	80005e4a <__ieee754_pow+0x15a>
80005e44:	00 99       	mov	r9,r0
80005e46:	06 98       	mov	r8,r3
80005e48:	c8 38       	rjmp	80005f4e <__ieee754_pow+0x25e>
80005e4a:	fc 1b 3f e0 	movh	r11,0x3fe0
80005e4e:	16 31       	cp.w	r1,r11
80005e50:	c0 b1       	brne	80005e66 <__ieee754_pow+0x176>
80005e52:	40 1a       	lddsp	r10,sp[0x4]
80005e54:	58 0a       	cp.w	r10,0
80005e56:	c0 85       	brlt	80005e66 <__ieee754_pow+0x176>
80005e58:	00 9b       	mov	r11,r0
80005e5a:	06 9a       	mov	r10,r3
80005e5c:	e0 a0 04 94 	rcall	80006784 <__ieee754_sqrt>
80005e60:	e0 8f 04 82 	bral	80006764 <__ieee754_pow+0xa74>
80005e64:	30 05       	mov	r5,0
80005e66:	50 08       	stdsp	sp[0x0],r8
80005e68:	00 9b       	mov	r11,r0
80005e6a:	06 9a       	mov	r10,r3
80005e6c:	e0 a0 05 50 	rcall	8000690c <fabs>
80005e70:	40 08       	lddsp	r8,sp[0x0]
80005e72:	58 08       	cp.w	r8,0
80005e74:	c2 d1       	brne	80005ece <__ieee754_pow+0x1de>
80005e76:	58 04       	cp.w	r4,0
80005e78:	5f 09       	sreq	r9
80005e7a:	40 5e       	lddsp	lr,sp[0x14]
80005e7c:	fd e9 10 09 	or	r9,lr,r9
80005e80:	f0 09 18 00 	cp.b	r9,r8
80005e84:	c0 51       	brne	80005e8e <__ieee754_pow+0x19e>
80005e86:	fc 1c 3f f0 	movh	r12,0x3ff0
80005e8a:	18 34       	cp.w	r4,r12
80005e8c:	c2 11       	brne	80005ece <__ieee754_pow+0x1de>
80005e8e:	58 01       	cp.w	r1,0
80005e90:	c0 84       	brge	80005ea0 <__ieee754_pow+0x1b0>
80005e92:	16 99       	mov	r9,r11
80005e94:	14 98       	mov	r8,r10
80005e96:	fc 1b 3f f0 	movh	r11,0x3ff0
80005e9a:	30 0a       	mov	r10,0
80005e9c:	e0 a0 09 90 	rcall	800071bc <__avr32_f64_div>
80005ea0:	16 97       	mov	r7,r11
80005ea2:	14 96       	mov	r6,r10
80005ea4:	40 1b       	lddsp	r11,sp[0x4]
80005ea6:	58 0b       	cp.w	r11,0
80005ea8:	e0 84 04 67 	brge	80006776 <__ieee754_pow+0xa86>
80005eac:	fc 18 c0 10 	movh	r8,0xc010
80005eb0:	10 04       	add	r4,r8
80005eb2:	eb e4 10 04 	or	r4,r5,r4
80005eb6:	c0 51       	brne	80005ec0 <__ieee754_pow+0x1d0>
80005eb8:	0e 9b       	mov	r11,r7
80005eba:	0e 99       	mov	r9,r7
80005ebc:	0c 98       	mov	r8,r6
80005ebe:	c1 38       	rjmp	80005ee4 <__ieee754_pow+0x1f4>
80005ec0:	58 15       	cp.w	r5,1
80005ec2:	e0 81 04 5a 	brne	80006776 <__ieee754_pow+0xa86>
80005ec6:	ee 17 80 00 	eorh	r7,0x8000
80005eca:	e0 8f 04 56 	bral	80006776 <__ieee754_pow+0xa86>
80005ece:	40 78       	lddsp	r8,sp[0x1c]
80005ed0:	bf 98       	lsr	r8,0x1f
80005ed2:	20 18       	sub	r8,1
80005ed4:	50 d8       	stdsp	sp[0x34],r8
80005ed6:	eb e8 10 08 	or	r8,r5,r8
80005eda:	c0 d1       	brne	80005ef4 <__ieee754_pow+0x204>
80005edc:	00 99       	mov	r9,r0
80005ede:	06 98       	mov	r8,r3
80005ee0:	06 9a       	mov	r10,r3
80005ee2:	00 9b       	mov	r11,r0
80005ee4:	e0 a0 07 26 	rcall	80006d30 <__avr32_f64_sub>
80005ee8:	14 98       	mov	r8,r10
80005eea:	16 99       	mov	r9,r11
80005eec:	e0 a0 09 68 	rcall	800071bc <__avr32_f64_div>
80005ef0:	e0 8f 04 3a 	bral	80006764 <__ieee754_pow+0xa74>
80005ef4:	fc 19 41 e0 	movh	r9,0x41e0
80005ef8:	12 32       	cp.w	r2,r9
80005efa:	e0 8a 00 9f 	brle	80006038 <__ieee754_pow+0x348>
80005efe:	fc 18 43 f0 	movh	r8,0x43f0
80005f02:	10 32       	cp.w	r2,r8
80005f04:	e0 8a 00 0a 	brle	80005f18 <__ieee754_pow+0x228>
80005f08:	e0 65 ff ff 	mov	r5,65535
80005f0c:	ea 15 3f ef 	orh	r5,0x3fef
80005f10:	0a 34       	cp.w	r4,r5
80005f12:	e0 89 00 13 	brgt	80005f38 <__ieee754_pow+0x248>
80005f16:	c0 88       	rjmp	80005f26 <__ieee754_pow+0x236>
80005f18:	e0 60 ff fe 	mov	r0,65534
80005f1c:	ea 10 3f ef 	orh	r0,0x3fef
80005f20:	00 34       	cp.w	r4,r0
80005f22:	e0 89 00 06 	brgt	80005f2e <__ieee754_pow+0x23e>
80005f26:	58 01       	cp.w	r1,0
80005f28:	e0 84 04 25 	brge	80006772 <__ieee754_pow+0xa82>
80005f2c:	c0 98       	rjmp	80005f3e <__ieee754_pow+0x24e>
80005f2e:	fc 1e 3f f0 	movh	lr,0x3ff0
80005f32:	1c 34       	cp.w	r4,lr
80005f34:	e0 8a 00 11 	brle	80005f56 <__ieee754_pow+0x266>
80005f38:	58 01       	cp.w	r1,0
80005f3a:	e0 8a 04 1c 	brle	80006772 <__ieee754_pow+0xa82>
80005f3e:	e0 68 75 9c 	mov	r8,30108
80005f42:	ea 18 88 00 	orh	r8,0x8800
80005f46:	e0 69 e4 3c 	mov	r9,58428
80005f4a:	ea 19 7e 37 	orh	r9,0x7e37
80005f4e:	10 9a       	mov	r10,r8
80005f50:	12 9b       	mov	r11,r9
80005f52:	e0 8f 04 08 	bral	80006762 <__ieee754_pow+0xa72>
80005f56:	30 08       	mov	r8,0
80005f58:	fc 19 3f f0 	movh	r9,0x3ff0
80005f5c:	e0 a0 06 ea 	rcall	80006d30 <__avr32_f64_sub>
80005f60:	fc 18 60 00 	movh	r8,0x6000
80005f64:	14 92       	mov	r2,r10
80005f66:	16 93       	mov	r3,r11
80005f68:	e0 69 15 47 	mov	r9,5447
80005f6c:	ea 19 3f f7 	orh	r9,0x3ff7
80005f70:	e0 a0 05 f4 	rcall	80006b58 <__avr32_f64_mul>
80005f74:	e0 68 df 44 	mov	r8,57156
80005f78:	ea 18 f8 5d 	orh	r8,0xf85d
80005f7c:	fa eb 00 0c 	st.d	sp[12],r10
80005f80:	e0 69 ae 0b 	mov	r9,44555
80005f84:	ea 19 3e 54 	orh	r9,0x3e54
80005f88:	04 9a       	mov	r10,r2
80005f8a:	06 9b       	mov	r11,r3
80005f8c:	e0 a0 05 e6 	rcall	80006b58 <__avr32_f64_mul>
80005f90:	04 98       	mov	r8,r2
80005f92:	fa eb 00 04 	st.d	sp[4],r10
80005f96:	06 99       	mov	r9,r3
80005f98:	04 9a       	mov	r10,r2
80005f9a:	06 9b       	mov	r11,r3
80005f9c:	e0 a0 05 de 	rcall	80006b58 <__avr32_f64_mul>
80005fa0:	30 08       	mov	r8,0
80005fa2:	14 90       	mov	r0,r10
80005fa4:	16 91       	mov	r1,r11
80005fa6:	fc 19 bf d0 	movh	r9,0xbfd0
80005faa:	04 9a       	mov	r10,r2
80005fac:	06 9b       	mov	r11,r3
80005fae:	e0 a0 05 d5 	rcall	80006b58 <__avr32_f64_mul>
80005fb2:	e0 68 55 55 	mov	r8,21845
80005fb6:	ea 18 55 55 	orh	r8,0x5555
80005fba:	e0 69 55 55 	mov	r9,21845
80005fbe:	ea 19 3f d5 	orh	r9,0x3fd5
80005fc2:	e0 a0 07 85 	rcall	80006ecc <__avr32_f64_add>
80005fc6:	14 98       	mov	r8,r10
80005fc8:	16 99       	mov	r9,r11
80005fca:	04 9a       	mov	r10,r2
80005fcc:	06 9b       	mov	r11,r3
80005fce:	e0 a0 05 c5 	rcall	80006b58 <__avr32_f64_mul>
80005fd2:	14 98       	mov	r8,r10
80005fd4:	16 99       	mov	r9,r11
80005fd6:	30 0a       	mov	r10,0
80005fd8:	fc 1b 3f e0 	movh	r11,0x3fe0
80005fdc:	e0 a0 06 aa 	rcall	80006d30 <__avr32_f64_sub>
80005fe0:	14 98       	mov	r8,r10
80005fe2:	16 99       	mov	r9,r11
80005fe4:	00 9a       	mov	r10,r0
80005fe6:	02 9b       	mov	r11,r1
80005fe8:	e0 a0 05 b8 	rcall	80006b58 <__avr32_f64_mul>
80005fec:	e0 68 82 fe 	mov	r8,33534
80005ff0:	ea 18 65 2b 	orh	r8,0x652b
80005ff4:	e0 69 15 47 	mov	r9,5447
80005ff8:	ea 19 bf f7 	orh	r9,0xbff7
80005ffc:	e0 a0 05 ae 	rcall	80006b58 <__avr32_f64_mul>
80006000:	14 98       	mov	r8,r10
80006002:	16 99       	mov	r9,r11
80006004:	fa ea 00 04 	ld.d	r10,sp[4]
80006008:	e0 a0 07 62 	rcall	80006ecc <__avr32_f64_add>
8000600c:	16 91       	mov	r1,r11
8000600e:	14 98       	mov	r8,r10
80006010:	14 90       	mov	r0,r10
80006012:	02 99       	mov	r9,r1
80006014:	fa ea 00 0c 	ld.d	r10,sp[12]
80006018:	e0 a0 07 5a 	rcall	80006ecc <__avr32_f64_add>
8000601c:	fa e8 00 0c 	ld.d	r8,sp[12]
80006020:	16 93       	mov	r3,r11
80006022:	30 02       	mov	r2,0
80006024:	06 9b       	mov	r11,r3
80006026:	04 9a       	mov	r10,r2
80006028:	e0 a0 06 84 	rcall	80006d30 <__avr32_f64_sub>
8000602c:	14 98       	mov	r8,r10
8000602e:	16 99       	mov	r9,r11
80006030:	00 9a       	mov	r10,r0
80006032:	02 9b       	mov	r11,r1
80006034:	e0 8f 01 c6 	bral	800063c0 <__ieee754_pow+0x6d0>
80006038:	ee 54 ff ff 	cp.w	r4,1048575
8000603c:	e0 8a 00 04 	brle	80006044 <__ieee754_pow+0x354>
80006040:	30 0c       	mov	r12,0
80006042:	c0 98       	rjmp	80006054 <__ieee754_pow+0x364>
80006044:	fc 19 43 40 	movh	r9,0x4340
80006048:	30 08       	mov	r8,0
8000604a:	e0 a0 05 87 	rcall	80006b58 <__avr32_f64_mul>
8000604e:	3c bc       	mov	r12,-53
80006050:	16 99       	mov	r9,r11
80006052:	12 94       	mov	r4,r9
80006054:	f1 d4 c0 14 	bfextu	r8,r4,0x0,0x14
80006058:	f8 cc 03 ff 	sub	r12,r12,1023
8000605c:	b5 44       	asr	r4,0x14
8000605e:	10 93       	mov	r3,r8
80006060:	08 0c       	add	r12,r4
80006062:	ea 13 3f f0 	orh	r3,0x3ff0
80006066:	e2 58 98 8e 	cp.w	r8,235662
8000606a:	e0 8a 00 0c 	brle	80006082 <__ieee754_pow+0x392>
8000606e:	ea 58 b6 79 	cp.w	r8,767609
80006072:	e0 89 00 04 	brgt	8000607a <__ieee754_pow+0x38a>
80006076:	30 14       	mov	r4,1
80006078:	c0 68       	rjmp	80006084 <__ieee754_pow+0x394>
8000607a:	f0 68 00 00 	mov	r8,-1048576
8000607e:	2f fc       	sub	r12,-1
80006080:	10 03       	add	r3,r8
80006082:	30 04       	mov	r4,0
80006084:	14 98       	mov	r8,r10
80006086:	06 99       	mov	r9,r3
80006088:	fe ca ba 90 	sub	r10,pc,-17776
8000608c:	50 0c       	stdsp	sp[0x0],r12
8000608e:	f4 04 02 30 	ld.d	r0,r10[r4<<0x3]
80006092:	fa e9 00 14 	st.d	sp[20],r8
80006096:	fa e1 00 1c 	st.d	sp[28],r0
8000609a:	00 98       	mov	r8,r0
8000609c:	02 99       	mov	r9,r1
8000609e:	fa ea 00 14 	ld.d	r10,sp[20]
800060a2:	e0 a0 06 47 	rcall	80006d30 <__avr32_f64_sub>
800060a6:	fa e8 00 1c 	ld.d	r8,sp[28]
800060aa:	fa eb 00 24 	st.d	sp[36],r10
800060ae:	fa ea 00 14 	ld.d	r10,sp[20]
800060b2:	e0 a0 07 0d 	rcall	80006ecc <__avr32_f64_add>
800060b6:	14 98       	mov	r8,r10
800060b8:	16 99       	mov	r9,r11
800060ba:	30 0a       	mov	r10,0
800060bc:	fc 1b 3f f0 	movh	r11,0x3ff0
800060c0:	e0 a0 08 7e 	rcall	800071bc <__avr32_f64_div>
800060c4:	14 98       	mov	r8,r10
800060c6:	16 99       	mov	r9,r11
800060c8:	fa eb 00 2c 	st.d	sp[44],r10
800060cc:	fa ea 00 24 	ld.d	r10,sp[36]
800060d0:	e0 a0 05 44 	rcall	80006b58 <__avr32_f64_mul>
800060d4:	30 09       	mov	r9,0
800060d6:	fa eb 00 0c 	st.d	sp[12],r10
800060da:	fa eb 00 04 	st.d	sp[4],r10
800060de:	a1 53       	asr	r3,0x1
800060e0:	30 0a       	mov	r10,0
800060e2:	bd b3       	sbr	r3,0x1d
800060e4:	e8 08 15 12 	lsl	r8,r4,0x12
800060e8:	f8 28 00 00 	sub	r8,-524288
800060ec:	f0 03 00 0b 	add	r11,r8,r3
800060f0:	50 49       	stdsp	sp[0x10],r9
800060f2:	14 92       	mov	r2,r10
800060f4:	fa e0 00 0c 	ld.d	r0,sp[12]
800060f8:	16 93       	mov	r3,r11
800060fa:	14 98       	mov	r8,r10
800060fc:	16 99       	mov	r9,r11
800060fe:	00 9a       	mov	r10,r0
80006100:	02 9b       	mov	r11,r1
80006102:	e0 a0 05 2b 	rcall	80006b58 <__avr32_f64_mul>
80006106:	14 98       	mov	r8,r10
80006108:	16 99       	mov	r9,r11
8000610a:	fa ea 00 24 	ld.d	r10,sp[36]
8000610e:	e0 a0 06 11 	rcall	80006d30 <__avr32_f64_sub>
80006112:	fa e8 00 1c 	ld.d	r8,sp[28]
80006116:	fa eb 00 24 	st.d	sp[36],r10
8000611a:	04 9a       	mov	r10,r2
8000611c:	06 9b       	mov	r11,r3
8000611e:	e0 a0 06 09 	rcall	80006d30 <__avr32_f64_sub>
80006122:	14 98       	mov	r8,r10
80006124:	16 99       	mov	r9,r11
80006126:	fa ea 00 14 	ld.d	r10,sp[20]
8000612a:	e0 a0 06 03 	rcall	80006d30 <__avr32_f64_sub>
8000612e:	14 98       	mov	r8,r10
80006130:	16 99       	mov	r9,r11
80006132:	00 9a       	mov	r10,r0
80006134:	02 9b       	mov	r11,r1
80006136:	e0 a0 05 11 	rcall	80006b58 <__avr32_f64_mul>
8000613a:	14 98       	mov	r8,r10
8000613c:	16 99       	mov	r9,r11
8000613e:	fa ea 00 24 	ld.d	r10,sp[36]
80006142:	e0 a0 05 f7 	rcall	80006d30 <__avr32_f64_sub>
80006146:	14 98       	mov	r8,r10
80006148:	16 99       	mov	r9,r11
8000614a:	fa ea 00 2c 	ld.d	r10,sp[44]
8000614e:	e0 a0 05 05 	rcall	80006b58 <__avr32_f64_mul>
80006152:	fa e8 00 04 	ld.d	r8,sp[4]
80006156:	fa eb 00 14 	st.d	sp[20],r10
8000615a:	10 9a       	mov	r10,r8
8000615c:	12 9b       	mov	r11,r9
8000615e:	e0 a0 04 fd 	rcall	80006b58 <__avr32_f64_mul>
80006162:	16 93       	mov	r3,r11
80006164:	14 92       	mov	r2,r10
80006166:	06 99       	mov	r9,r3
80006168:	14 98       	mov	r8,r10
8000616a:	e0 a0 04 f7 	rcall	80006b58 <__avr32_f64_mul>
8000616e:	e0 68 4e ef 	mov	r8,20207
80006172:	ea 18 4a 45 	orh	r8,0x4a45
80006176:	fa eb 00 1c 	st.d	sp[28],r10
8000617a:	e0 69 7e 28 	mov	r9,32296
8000617e:	ea 19 3f ca 	orh	r9,0x3fca
80006182:	04 9a       	mov	r10,r2
80006184:	06 9b       	mov	r11,r3
80006186:	e0 a0 04 e9 	rcall	80006b58 <__avr32_f64_mul>
8000618a:	e0 68 db 65 	mov	r8,56165
8000618e:	ea 18 93 c9 	orh	r8,0x93c9
80006192:	e0 69 86 4a 	mov	r9,34378
80006196:	ea 19 3f cd 	orh	r9,0x3fcd
8000619a:	e0 a0 06 99 	rcall	80006ecc <__avr32_f64_add>
8000619e:	14 98       	mov	r8,r10
800061a0:	16 99       	mov	r9,r11
800061a2:	04 9a       	mov	r10,r2
800061a4:	06 9b       	mov	r11,r3
800061a6:	e0 a0 04 d9 	rcall	80006b58 <__avr32_f64_mul>
800061aa:	e0 68 41 01 	mov	r8,16641
800061ae:	ea 18 a9 1d 	orh	r8,0xa91d
800061b2:	e0 69 74 60 	mov	r9,29792
800061b6:	ea 19 3f d1 	orh	r9,0x3fd1
800061ba:	e0 a0 06 89 	rcall	80006ecc <__avr32_f64_add>
800061be:	14 98       	mov	r8,r10
800061c0:	16 99       	mov	r9,r11
800061c2:	04 9a       	mov	r10,r2
800061c4:	06 9b       	mov	r11,r3
800061c6:	e0 a0 04 c9 	rcall	80006b58 <__avr32_f64_mul>
800061ca:	e0 68 26 4d 	mov	r8,9805
800061ce:	ea 18 51 8f 	orh	r8,0x518f
800061d2:	e0 69 55 55 	mov	r9,21845
800061d6:	ea 19 3f d5 	orh	r9,0x3fd5
800061da:	e0 a0 06 79 	rcall	80006ecc <__avr32_f64_add>
800061de:	14 98       	mov	r8,r10
800061e0:	16 99       	mov	r9,r11
800061e2:	04 9a       	mov	r10,r2
800061e4:	06 9b       	mov	r11,r3
800061e6:	e0 a0 04 b9 	rcall	80006b58 <__avr32_f64_mul>
800061ea:	e0 68 ab ff 	mov	r8,44031
800061ee:	ea 18 db 6f 	orh	r8,0xdb6f
800061f2:	e0 69 6d b6 	mov	r9,28086
800061f6:	ea 19 3f db 	orh	r9,0x3fdb
800061fa:	e0 a0 06 69 	rcall	80006ecc <__avr32_f64_add>
800061fe:	c0 18       	rjmp	80006200 <__ieee754_pow+0x510>
80006200:	14 98       	mov	r8,r10
80006202:	16 99       	mov	r9,r11
80006204:	04 9a       	mov	r10,r2
80006206:	06 9b       	mov	r11,r3
80006208:	e0 a0 04 a8 	rcall	80006b58 <__avr32_f64_mul>
8000620c:	e0 68 33 03 	mov	r8,13059
80006210:	ea 18 33 33 	orh	r8,0x3333
80006214:	e0 69 33 33 	mov	r9,13107
80006218:	ea 19 3f e3 	orh	r9,0x3fe3
8000621c:	e0 a0 06 58 	rcall	80006ecc <__avr32_f64_add>
80006220:	14 98       	mov	r8,r10
80006222:	16 99       	mov	r9,r11
80006224:	fa ea 00 1c 	ld.d	r10,sp[28]
80006228:	e0 a0 04 98 	rcall	80006b58 <__avr32_f64_mul>
8000622c:	fa e8 00 04 	ld.d	r8,sp[4]
80006230:	14 92       	mov	r2,r10
80006232:	16 93       	mov	r3,r11
80006234:	00 9a       	mov	r10,r0
80006236:	02 9b       	mov	r11,r1
80006238:	e0 a0 06 4a 	rcall	80006ecc <__avr32_f64_add>
8000623c:	14 98       	mov	r8,r10
8000623e:	16 99       	mov	r9,r11
80006240:	fa ea 00 14 	ld.d	r10,sp[20]
80006244:	e0 a0 04 8a 	rcall	80006b58 <__avr32_f64_mul>
80006248:	14 98       	mov	r8,r10
8000624a:	16 99       	mov	r9,r11
8000624c:	04 9a       	mov	r10,r2
8000624e:	06 9b       	mov	r11,r3
80006250:	e0 a0 06 3e 	rcall	80006ecc <__avr32_f64_add>
80006254:	00 98       	mov	r8,r0
80006256:	fa eb 00 1c 	st.d	sp[28],r10
8000625a:	02 99       	mov	r9,r1
8000625c:	00 9a       	mov	r10,r0
8000625e:	02 9b       	mov	r11,r1
80006260:	e0 a0 04 7c 	rcall	80006b58 <__avr32_f64_mul>
80006264:	30 08       	mov	r8,0
80006266:	fc 19 40 08 	movh	r9,0x4008
8000626a:	fa eb 00 2c 	st.d	sp[44],r10
8000626e:	e0 a0 06 2f 	rcall	80006ecc <__avr32_f64_add>
80006272:	fa e8 00 1c 	ld.d	r8,sp[28]
80006276:	e0 a0 06 2b 	rcall	80006ecc <__avr32_f64_add>
8000627a:	40 48       	lddsp	r8,sp[0x10]
8000627c:	16 93       	mov	r3,r11
8000627e:	10 92       	mov	r2,r8
80006280:	06 99       	mov	r9,r3
80006282:	00 9a       	mov	r10,r0
80006284:	02 9b       	mov	r11,r1
80006286:	e0 a0 04 69 	rcall	80006b58 <__avr32_f64_mul>
8000628a:	04 98       	mov	r8,r2
8000628c:	06 99       	mov	r9,r3
8000628e:	fa eb 00 24 	st.d	sp[36],r10
80006292:	fa ea 00 14 	ld.d	r10,sp[20]
80006296:	e0 a0 04 61 	rcall	80006b58 <__avr32_f64_mul>
8000629a:	30 08       	mov	r8,0
8000629c:	14 90       	mov	r0,r10
8000629e:	16 91       	mov	r1,r11
800062a0:	04 9a       	mov	r10,r2
800062a2:	06 9b       	mov	r11,r3
800062a4:	fc 19 40 08 	movh	r9,0x4008
800062a8:	e0 a0 05 44 	rcall	80006d30 <__avr32_f64_sub>
800062ac:	fa e8 00 2c 	ld.d	r8,sp[44]
800062b0:	e0 a0 05 40 	rcall	80006d30 <__avr32_f64_sub>
800062b4:	14 98       	mov	r8,r10
800062b6:	16 99       	mov	r9,r11
800062b8:	fa ea 00 1c 	ld.d	r10,sp[28]
800062bc:	e0 a0 05 3a 	rcall	80006d30 <__avr32_f64_sub>
800062c0:	fa e8 00 04 	ld.d	r8,sp[4]
800062c4:	e0 a0 04 4a 	rcall	80006b58 <__avr32_f64_mul>
800062c8:	14 98       	mov	r8,r10
800062ca:	16 99       	mov	r9,r11
800062cc:	00 9a       	mov	r10,r0
800062ce:	02 9b       	mov	r11,r1
800062d0:	e0 a0 05 fe 	rcall	80006ecc <__avr32_f64_add>
800062d4:	16 91       	mov	r1,r11
800062d6:	14 90       	mov	r0,r10
800062d8:	14 98       	mov	r8,r10
800062da:	02 99       	mov	r9,r1
800062dc:	fa ea 00 24 	ld.d	r10,sp[36]
800062e0:	e0 a0 05 f6 	rcall	80006ecc <__avr32_f64_add>
800062e4:	40 4e       	lddsp	lr,sp[0x10]
800062e6:	16 93       	mov	r3,r11
800062e8:	1c 92       	mov	r2,lr
800062ea:	1c 9a       	mov	r10,lr
800062ec:	fc 18 e0 00 	movh	r8,0xe000
800062f0:	e0 69 c7 09 	mov	r9,50953
800062f4:	ea 19 3f ee 	orh	r9,0x3fee
800062f8:	06 9b       	mov	r11,r3
800062fa:	e0 a0 04 2f 	rcall	80006b58 <__avr32_f64_mul>
800062fe:	e0 68 01 f5 	mov	r8,501
80006302:	ea 18 14 5b 	orh	r8,0x145b
80006306:	fa eb 00 14 	st.d	sp[20],r10
8000630a:	e0 69 2f e0 	mov	r9,12256
8000630e:	ea 19 be 3e 	orh	r9,0xbe3e
80006312:	04 9a       	mov	r10,r2
80006314:	06 9b       	mov	r11,r3
80006316:	e0 a0 04 21 	rcall	80006b58 <__avr32_f64_mul>
8000631a:	fa e8 00 24 	ld.d	r8,sp[36]
8000631e:	fa eb 00 04 	st.d	sp[4],r10
80006322:	04 9a       	mov	r10,r2
80006324:	06 9b       	mov	r11,r3
80006326:	e0 a0 05 05 	rcall	80006d30 <__avr32_f64_sub>
8000632a:	14 98       	mov	r8,r10
8000632c:	16 99       	mov	r9,r11
8000632e:	00 9a       	mov	r10,r0
80006330:	02 9b       	mov	r11,r1
80006332:	e0 a0 04 ff 	rcall	80006d30 <__avr32_f64_sub>
80006336:	e0 68 03 fd 	mov	r8,1021
8000633a:	ea 18 dc 3a 	orh	r8,0xdc3a
8000633e:	e0 69 c7 09 	mov	r9,50953
80006342:	ea 19 3f ee 	orh	r9,0x3fee
80006346:	e0 a0 04 09 	rcall	80006b58 <__avr32_f64_mul>
8000634a:	14 98       	mov	r8,r10
8000634c:	16 99       	mov	r9,r11
8000634e:	fa ea 00 04 	ld.d	r10,sp[4]
80006352:	e0 a0 05 bd 	rcall	80006ecc <__avr32_f64_add>
80006356:	fe c8 bd 6e 	sub	r8,pc,-17042
8000635a:	f0 04 02 38 	ld.d	r8,r8[r4<<0x3]
8000635e:	e0 a0 05 b7 	rcall	80006ecc <__avr32_f64_add>
80006362:	40 0c       	lddsp	r12,sp[0x0]
80006364:	fa eb 00 1c 	st.d	sp[28],r10
80006368:	e0 a0 06 3e 	rcall	80006fe4 <__avr32_s32_to_f64>
8000636c:	fe c8 bd 94 	sub	r8,pc,-17004
80006370:	14 90       	mov	r0,r10
80006372:	16 91       	mov	r1,r11
80006374:	f0 04 02 3a 	ld.d	r10,r8[r4<<0x3]
80006378:	fa e8 00 1c 	ld.d	r8,sp[28]
8000637c:	fa eb 00 04 	st.d	sp[4],r10
80006380:	fa ea 00 14 	ld.d	r10,sp[20]
80006384:	e0 a0 05 a4 	rcall	80006ecc <__avr32_f64_add>
80006388:	fa e8 00 04 	ld.d	r8,sp[4]
8000638c:	e0 a0 05 a0 	rcall	80006ecc <__avr32_f64_add>
80006390:	00 98       	mov	r8,r0
80006392:	02 99       	mov	r9,r1
80006394:	e0 a0 05 9c 	rcall	80006ecc <__avr32_f64_add>
80006398:	00 98       	mov	r8,r0
8000639a:	02 99       	mov	r9,r1
8000639c:	40 4a       	lddsp	r10,sp[0x10]
8000639e:	16 93       	mov	r3,r11
800063a0:	14 92       	mov	r2,r10
800063a2:	06 9b       	mov	r11,r3
800063a4:	e0 a0 04 c6 	rcall	80006d30 <__avr32_f64_sub>
800063a8:	fa e8 00 04 	ld.d	r8,sp[4]
800063ac:	e0 a0 04 c2 	rcall	80006d30 <__avr32_f64_sub>
800063b0:	fa e8 00 14 	ld.d	r8,sp[20]
800063b4:	e0 a0 04 be 	rcall	80006d30 <__avr32_f64_sub>
800063b8:	14 98       	mov	r8,r10
800063ba:	16 99       	mov	r9,r11
800063bc:	fa ea 00 1c 	ld.d	r10,sp[28]
800063c0:	e0 a0 04 b8 	rcall	80006d30 <__avr32_f64_sub>
800063c4:	20 15       	sub	r5,1
800063c6:	40 d9       	lddsp	r9,sp[0x34]
800063c8:	14 90       	mov	r0,r10
800063ca:	16 91       	mov	r1,r11
800063cc:	12 45       	or	r5,r9
800063ce:	c0 70       	breq	800063dc <__ieee754_pow+0x6ec>
800063d0:	30 04       	mov	r4,0
800063d2:	fc 15 3f f0 	movh	r5,0x3ff0
800063d6:	fa e5 00 0c 	st.d	sp[12],r4
800063da:	c0 68       	rjmp	800063e6 <__ieee754_pow+0x6f6>
800063dc:	30 0a       	mov	r10,0
800063de:	fc 1b bf f0 	movh	r11,0xbff0
800063e2:	fa eb 00 0c 	st.d	sp[12],r10
800063e6:	0e 99       	mov	r9,r7
800063e8:	30 08       	mov	r8,0
800063ea:	0e 9b       	mov	r11,r7
800063ec:	fa e9 00 04 	st.d	sp[4],r8
800063f0:	0c 9a       	mov	r10,r6
800063f2:	e0 a0 04 9f 	rcall	80006d30 <__avr32_f64_sub>
800063f6:	04 98       	mov	r8,r2
800063f8:	06 99       	mov	r9,r3
800063fa:	e0 a0 03 af 	rcall	80006b58 <__avr32_f64_mul>
800063fe:	00 98       	mov	r8,r0
80006400:	14 94       	mov	r4,r10
80006402:	16 95       	mov	r5,r11
80006404:	02 99       	mov	r9,r1
80006406:	0e 9b       	mov	r11,r7
80006408:	0c 9a       	mov	r10,r6
8000640a:	e0 a0 03 a7 	rcall	80006b58 <__avr32_f64_mul>
8000640e:	14 98       	mov	r8,r10
80006410:	16 99       	mov	r9,r11
80006412:	08 9a       	mov	r10,r4
80006414:	0a 9b       	mov	r11,r5
80006416:	e0 a0 05 5b 	rcall	80006ecc <__avr32_f64_add>
8000641a:	04 98       	mov	r8,r2
8000641c:	06 99       	mov	r9,r3
8000641e:	14 90       	mov	r0,r10
80006420:	16 91       	mov	r1,r11
80006422:	fa ea 00 04 	ld.d	r10,sp[4]
80006426:	e0 a0 03 99 	rcall	80006b58 <__avr32_f64_mul>
8000642a:	14 94       	mov	r4,r10
8000642c:	16 95       	mov	r5,r11
8000642e:	08 98       	mov	r8,r4
80006430:	00 9a       	mov	r10,r0
80006432:	02 9b       	mov	r11,r1
80006434:	0a 99       	mov	r9,r5
80006436:	fa e5 00 04 	st.d	sp[4],r4
8000643a:	e0 a0 05 49 	rcall	80006ecc <__avr32_f64_add>
8000643e:	e0 6e ff ff 	mov	lr,65535
80006442:	ea 1e 40 8f 	orh	lr,0x408f
80006446:	16 93       	mov	r3,r11
80006448:	14 92       	mov	r2,r10
8000644a:	06 97       	mov	r7,r3
8000644c:	06 98       	mov	r8,r3
8000644e:	1c 33       	cp.w	r3,lr
80006450:	e0 8a 00 36 	brle	800064bc <__ieee754_pow+0x7cc>
80006454:	fc 1a bf 70 	movh	r10,0xbf70
80006458:	14 08       	add	r8,r10
8000645a:	f1 e2 10 09 	or	r9,r8,r2
8000645e:	c1 a1       	brne	80006492 <__ieee754_pow+0x7a2>
80006460:	e0 68 82 fe 	mov	r8,33534
80006464:	ea 18 65 2b 	orh	r8,0x652b
80006468:	e0 69 15 47 	mov	r9,5447
8000646c:	ea 19 3c 97 	orh	r9,0x3c97
80006470:	00 9a       	mov	r10,r0
80006472:	02 9b       	mov	r11,r1
80006474:	e0 a0 05 2c 	rcall	80006ecc <__avr32_f64_add>
80006478:	08 98       	mov	r8,r4
8000647a:	fa eb 00 14 	st.d	sp[20],r10
8000647e:	0a 99       	mov	r9,r5
80006480:	04 9a       	mov	r10,r2
80006482:	06 9b       	mov	r11,r3
80006484:	e0 a0 04 56 	rcall	80006d30 <__avr32_f64_sub>
80006488:	fa e8 00 14 	ld.d	r8,sp[20]
8000648c:	e0 a0 06 63 	rcall	80007152 <__avr32_f64_cmp_lt>
80006490:	c4 40       	breq	80006518 <__ieee754_pow+0x828>
80006492:	e0 68 75 9c 	mov	r8,30108
80006496:	ea 18 88 00 	orh	r8,0x8800
8000649a:	e0 69 e4 3c 	mov	r9,58428
8000649e:	ea 19 7e 37 	orh	r9,0x7e37
800064a2:	fa ea 00 0c 	ld.d	r10,sp[12]
800064a6:	e0 a0 03 59 	rcall	80006b58 <__avr32_f64_mul>
800064aa:	e0 68 75 9c 	mov	r8,30108
800064ae:	ea 18 88 00 	orh	r8,0x8800
800064b2:	e0 69 e4 3c 	mov	r9,58428
800064b6:	ea 19 7e 37 	orh	r9,0x7e37
800064ba:	c5 49       	rjmp	80006762 <__ieee754_pow+0xa72>
800064bc:	f9 d3 c0 1f 	bfextu	r12,r3,0x0,0x1f
800064c0:	e0 6e cb ff 	mov	lr,52223
800064c4:	ea 1e 40 90 	orh	lr,0x4090
800064c8:	1c 3c       	cp.w	r12,lr
800064ca:	e0 8a 00 27 	brle	80006518 <__ieee754_pow+0x828>
800064ce:	e0 6c 34 00 	mov	r12,13312
800064d2:	ea 1c 3f 6f 	orh	r12,0x3f6f
800064d6:	18 08       	add	r8,r12
800064d8:	14 48       	or	r8,r10
800064da:	c0 a1       	brne	800064ee <__ieee754_pow+0x7fe>
800064dc:	08 98       	mov	r8,r4
800064de:	0a 99       	mov	r9,r5
800064e0:	e0 a0 04 28 	rcall	80006d30 <__avr32_f64_sub>
800064e4:	00 98       	mov	r8,r0
800064e6:	02 99       	mov	r9,r1
800064e8:	e0 a0 06 01 	rcall	800070ea <__avr32_f64_cmp_ge>
800064ec:	c1 60       	breq	80006518 <__ieee754_pow+0x828>
800064ee:	e0 68 f3 59 	mov	r8,62297
800064f2:	ea 18 c2 f8 	orh	r8,0xc2f8
800064f6:	e0 69 6e 1f 	mov	r9,28191
800064fa:	ea 19 01 a5 	orh	r9,0x1a5
800064fe:	fa ea 00 0c 	ld.d	r10,sp[12]
80006502:	e0 a0 03 2b 	rcall	80006b58 <__avr32_f64_mul>
80006506:	e0 68 f3 59 	mov	r8,62297
8000650a:	ea 18 c2 f8 	orh	r8,0xc2f8
8000650e:	e0 69 6e 1f 	mov	r9,28191
80006512:	ea 19 01 a5 	orh	r9,0x1a5
80006516:	c2 69       	rjmp	80006762 <__ieee754_pow+0xa72>
80006518:	f1 d7 c0 1f 	bfextu	r8,r7,0x0,0x1f
8000651c:	fc 1c 3f e0 	movh	r12,0x3fe0
80006520:	18 38       	cp.w	r8,r12
80006522:	e0 89 00 04 	brgt	8000652a <__ieee754_pow+0x83a>
80006526:	30 06       	mov	r6,0
80006528:	c2 78       	rjmp	80006576 <__ieee754_pow+0x886>
8000652a:	fc 19 00 10 	movh	r9,0x10
8000652e:	b5 48       	asr	r8,0x14
80006530:	f0 c8 03 fe 	sub	r8,r8,1022
80006534:	f2 08 08 48 	asr	r8,r9,r8
80006538:	0e 08       	add	r8,r7
8000653a:	f3 d8 c0 14 	bfextu	r9,r8,0x0,0x14
8000653e:	b5 a9       	sbr	r9,0x14
80006540:	f9 d8 c2 8b 	bfextu	r12,r8,0x14,0xb
80006544:	30 0a       	mov	r10,0
80006546:	f8 cc 03 ff 	sub	r12,r12,1023
8000654a:	f8 06 11 14 	rsub	r6,r12,20
8000654e:	f2 06 08 46 	asr	r6,r9,r6
80006552:	ee 79 ff ff 	mov	r9,1048575
80006556:	f2 0c 08 4c 	asr	r12,r9,r12
8000655a:	5c dc       	com	r12
8000655c:	f9 e8 00 0b 	and	r11,r12,r8
80006560:	58 07       	cp.w	r7,0
80006562:	fb b6 05 00 	rsublt	r6,0
80006566:	14 98       	mov	r8,r10
80006568:	16 99       	mov	r9,r11
8000656a:	08 9a       	mov	r10,r4
8000656c:	0a 9b       	mov	r11,r5
8000656e:	e0 a0 03 e1 	rcall	80006d30 <__avr32_f64_sub>
80006572:	fa eb 00 04 	st.d	sp[4],r10
80006576:	fa e8 00 04 	ld.d	r8,sp[4]
8000657a:	00 9a       	mov	r10,r0
8000657c:	02 9b       	mov	r11,r1
8000657e:	e0 a0 04 a7 	rcall	80006ecc <__avr32_f64_add>
80006582:	30 04       	mov	r4,0
80006584:	16 95       	mov	r5,r11
80006586:	30 08       	mov	r8,0
80006588:	e0 69 2e 43 	mov	r9,11843
8000658c:	ea 19 3f e6 	orh	r9,0x3fe6
80006590:	08 9a       	mov	r10,r4
80006592:	0a 9b       	mov	r11,r5
80006594:	e0 a0 02 e2 	rcall	80006b58 <__avr32_f64_mul>
80006598:	fa e8 00 04 	ld.d	r8,sp[4]
8000659c:	fa eb 00 14 	st.d	sp[20],r10
800065a0:	08 9a       	mov	r10,r4
800065a2:	0a 9b       	mov	r11,r5
800065a4:	e0 a0 03 c6 	rcall	80006d30 <__avr32_f64_sub>
800065a8:	14 98       	mov	r8,r10
800065aa:	16 99       	mov	r9,r11
800065ac:	00 9a       	mov	r10,r0
800065ae:	02 9b       	mov	r11,r1
800065b0:	e0 a0 03 c0 	rcall	80006d30 <__avr32_f64_sub>
800065b4:	e0 68 39 ef 	mov	r8,14831
800065b8:	ea 18 fe fa 	orh	r8,0xfefa
800065bc:	e0 69 2e 42 	mov	r9,11842
800065c0:	ea 19 3f e6 	orh	r9,0x3fe6
800065c4:	e0 a0 02 ca 	rcall	80006b58 <__avr32_f64_mul>
800065c8:	e0 68 6c 39 	mov	r8,27705
800065cc:	ea 18 0c a8 	orh	r8,0xca8
800065d0:	14 92       	mov	r2,r10
800065d2:	16 93       	mov	r3,r11
800065d4:	08 9a       	mov	r10,r4
800065d6:	0a 9b       	mov	r11,r5
800065d8:	e0 69 5c 61 	mov	r9,23649
800065dc:	ea 19 be 20 	orh	r9,0xbe20
800065e0:	e0 a0 02 bc 	rcall	80006b58 <__avr32_f64_mul>
800065e4:	14 98       	mov	r8,r10
800065e6:	16 99       	mov	r9,r11
800065e8:	04 9a       	mov	r10,r2
800065ea:	06 9b       	mov	r11,r3
800065ec:	e0 a0 04 70 	rcall	80006ecc <__avr32_f64_add>
800065f0:	16 93       	mov	r3,r11
800065f2:	14 92       	mov	r2,r10
800065f4:	14 98       	mov	r8,r10
800065f6:	06 99       	mov	r9,r3
800065f8:	fa ea 00 14 	ld.d	r10,sp[20]
800065fc:	e0 a0 04 68 	rcall	80006ecc <__avr32_f64_add>
80006600:	fa e8 00 14 	ld.d	r8,sp[20]
80006604:	14 94       	mov	r4,r10
80006606:	16 95       	mov	r5,r11
80006608:	e0 a0 03 94 	rcall	80006d30 <__avr32_f64_sub>
8000660c:	14 98       	mov	r8,r10
8000660e:	16 99       	mov	r9,r11
80006610:	04 9a       	mov	r10,r2
80006612:	06 9b       	mov	r11,r3
80006614:	e0 a0 03 8e 	rcall	80006d30 <__avr32_f64_sub>
80006618:	08 98       	mov	r8,r4
8000661a:	fa eb 00 04 	st.d	sp[4],r10
8000661e:	0a 99       	mov	r9,r5
80006620:	08 9a       	mov	r10,r4
80006622:	0a 9b       	mov	r11,r5
80006624:	e0 a0 02 9a 	rcall	80006b58 <__avr32_f64_mul>
80006628:	e0 68 a4 d0 	mov	r8,42192
8000662c:	ea 18 72 be 	orh	r8,0x72be
80006630:	14 92       	mov	r2,r10
80006632:	16 93       	mov	r3,r11
80006634:	e0 69 37 69 	mov	r9,14185
80006638:	ea 19 3e 66 	orh	r9,0x3e66
8000663c:	e0 a0 02 8e 	rcall	80006b58 <__avr32_f64_mul>
80006640:	e0 68 6b f1 	mov	r8,27633
80006644:	ea 18 c5 d2 	orh	r8,0xc5d2
80006648:	e0 69 bd 41 	mov	r9,48449
8000664c:	ea 19 3e bb 	orh	r9,0x3ebb
80006650:	e0 a0 03 70 	rcall	80006d30 <__avr32_f64_sub>
80006654:	14 98       	mov	r8,r10
80006656:	16 99       	mov	r9,r11
80006658:	04 9a       	mov	r10,r2
8000665a:	06 9b       	mov	r11,r3
8000665c:	e0 a0 02 7e 	rcall	80006b58 <__avr32_f64_mul>
80006660:	e0 68 de 2c 	mov	r8,56876
80006664:	ea 18 af 25 	orh	r8,0xaf25
80006668:	e0 69 56 6a 	mov	r9,22122
8000666c:	ea 19 3f 11 	orh	r9,0x3f11
80006670:	e0 a0 04 2e 	rcall	80006ecc <__avr32_f64_add>
80006674:	14 98       	mov	r8,r10
80006676:	16 99       	mov	r9,r11
80006678:	04 9a       	mov	r10,r2
8000667a:	06 9b       	mov	r11,r3
8000667c:	e0 a0 02 6e 	rcall	80006b58 <__avr32_f64_mul>
80006680:	e0 68 bd 93 	mov	r8,48531
80006684:	ea 18 16 be 	orh	r8,0x16be
80006688:	e0 69 c1 6c 	mov	r9,49516
8000668c:	ea 19 3f 66 	orh	r9,0x3f66
80006690:	e0 a0 03 50 	rcall	80006d30 <__avr32_f64_sub>
80006694:	14 98       	mov	r8,r10
80006696:	16 99       	mov	r9,r11
80006698:	04 9a       	mov	r10,r2
8000669a:	06 9b       	mov	r11,r3
8000669c:	e0 a0 02 5e 	rcall	80006b58 <__avr32_f64_mul>
800066a0:	e0 68 55 3e 	mov	r8,21822
800066a4:	ea 18 55 55 	orh	r8,0x5555
800066a8:	e0 69 55 55 	mov	r9,21845
800066ac:	ea 19 3f c5 	orh	r9,0x3fc5
800066b0:	e0 a0 04 0e 	rcall	80006ecc <__avr32_f64_add>
800066b4:	14 98       	mov	r8,r10
800066b6:	16 99       	mov	r9,r11
800066b8:	04 9a       	mov	r10,r2
800066ba:	06 9b       	mov	r11,r3
800066bc:	e0 a0 02 4e 	rcall	80006b58 <__avr32_f64_mul>
800066c0:	14 98       	mov	r8,r10
800066c2:	16 99       	mov	r9,r11
800066c4:	08 9a       	mov	r10,r4
800066c6:	0a 9b       	mov	r11,r5
800066c8:	e0 a0 03 34 	rcall	80006d30 <__avr32_f64_sub>
800066cc:	16 93       	mov	r3,r11
800066ce:	14 92       	mov	r2,r10
800066d0:	14 98       	mov	r8,r10
800066d2:	06 99       	mov	r9,r3
800066d4:	08 9a       	mov	r10,r4
800066d6:	0a 9b       	mov	r11,r5
800066d8:	e0 a0 02 40 	rcall	80006b58 <__avr32_f64_mul>
800066dc:	30 08       	mov	r8,0
800066de:	14 90       	mov	r0,r10
800066e0:	16 91       	mov	r1,r11
800066e2:	04 9a       	mov	r10,r2
800066e4:	06 9b       	mov	r11,r3
800066e6:	fc 19 40 00 	movh	r9,0x4000
800066ea:	e0 a0 03 23 	rcall	80006d30 <__avr32_f64_sub>
800066ee:	14 98       	mov	r8,r10
800066f0:	16 99       	mov	r9,r11
800066f2:	00 9a       	mov	r10,r0
800066f4:	02 9b       	mov	r11,r1
800066f6:	e0 a0 05 63 	rcall	800071bc <__avr32_f64_div>
800066fa:	fa e8 00 04 	ld.d	r8,sp[4]
800066fe:	14 92       	mov	r2,r10
80006700:	16 93       	mov	r3,r11
80006702:	08 9a       	mov	r10,r4
80006704:	0a 9b       	mov	r11,r5
80006706:	e0 a0 02 29 	rcall	80006b58 <__avr32_f64_mul>
8000670a:	14 98       	mov	r8,r10
8000670c:	16 99       	mov	r9,r11
8000670e:	fa ea 00 04 	ld.d	r10,sp[4]
80006712:	e0 a0 03 dd 	rcall	80006ecc <__avr32_f64_add>
80006716:	14 98       	mov	r8,r10
80006718:	16 99       	mov	r9,r11
8000671a:	04 9a       	mov	r10,r2
8000671c:	06 9b       	mov	r11,r3
8000671e:	e0 a0 03 09 	rcall	80006d30 <__avr32_f64_sub>
80006722:	08 98       	mov	r8,r4
80006724:	0a 99       	mov	r9,r5
80006726:	e0 a0 03 05 	rcall	80006d30 <__avr32_f64_sub>
8000672a:	14 98       	mov	r8,r10
8000672c:	16 99       	mov	r9,r11
8000672e:	30 0a       	mov	r10,0
80006730:	fc 1b 3f f0 	movh	r11,0x3ff0
80006734:	e0 a0 02 fe 	rcall	80006d30 <__avr32_f64_sub>
80006738:	ec 0c 15 14 	lsl	r12,r6,0x14
8000673c:	16 95       	mov	r5,r11
8000673e:	14 94       	mov	r4,r10
80006740:	f8 05 00 08 	add	r8,r12,r5
80006744:	f0 09 14 14 	asr	r9,r8,0x14
80006748:	58 09       	cp.w	r9,0
8000674a:	e0 89 00 07 	brgt	80006758 <__ieee754_pow+0xa68>
8000674e:	0c 9c       	mov	r12,r6
80006750:	c8 ad       	rcall	80006a64 <scalbn>
80006752:	14 98       	mov	r8,r10
80006754:	16 99       	mov	r9,r11
80006756:	c0 48       	rjmp	8000675e <__ieee754_pow+0xa6e>
80006758:	10 95       	mov	r5,r8
8000675a:	14 98       	mov	r8,r10
8000675c:	0a 99       	mov	r9,r5
8000675e:	fa ea 00 0c 	ld.d	r10,sp[12]
80006762:	cf bd       	rcall	80006b58 <__avr32_f64_mul>
80006764:	16 97       	mov	r7,r11
80006766:	14 96       	mov	r6,r10
80006768:	c0 78       	rjmp	80006776 <__ieee754_pow+0xa86>
8000676a:	fc 17 3f f0 	movh	r7,0x3ff0
8000676e:	30 06       	mov	r6,0
80006770:	c0 38       	rjmp	80006776 <__ieee754_pow+0xa86>
80006772:	30 07       	mov	r7,0
80006774:	0e 96       	mov	r6,r7
80006776:	0e 9b       	mov	r11,r7
80006778:	0c 9a       	mov	r10,r6
8000677a:	2f 2d       	sub	sp,-56
8000677c:	d8 32       	popm	r0-r7,pc
8000677e:	30 05       	mov	r5,0
80006780:	fe 9f fb 34 	bral	80005de8 <__ieee754_pow+0xf8>

80006784 <__ieee754_sqrt>:
80006784:	d4 31       	pushm	r0-r7,lr
80006786:	fc 1e 7f f0 	movh	lr,0x7ff0
8000678a:	16 9c       	mov	r12,r11
8000678c:	14 96       	mov	r6,r10
8000678e:	16 97       	mov	r7,r11
80006790:	14 94       	mov	r4,r10
80006792:	16 95       	mov	r5,r11
80006794:	16 99       	mov	r9,r11
80006796:	14 98       	mov	r8,r10
80006798:	e6 1c 7f f0 	andh	r12,0x7ff0,COH
8000679c:	1c 3c       	cp.w	r12,lr
8000679e:	c0 b1       	brne	800067b4 <__ieee754_sqrt+0x30>
800067a0:	14 98       	mov	r8,r10
800067a2:	16 99       	mov	r9,r11
800067a4:	cd ad       	rcall	80006b58 <__avr32_f64_mul>
800067a6:	14 98       	mov	r8,r10
800067a8:	16 99       	mov	r9,r11
800067aa:	0c 9a       	mov	r10,r6
800067ac:	0e 9b       	mov	r11,r7
800067ae:	e0 a0 03 8f 	rcall	80006ecc <__avr32_f64_add>
800067b2:	c1 38       	rjmp	800067d8 <__ieee754_sqrt+0x54>
800067b4:	58 0b       	cp.w	r11,0
800067b6:	e0 89 00 14 	brgt	800067de <__ieee754_sqrt+0x5a>
800067ba:	f9 db c0 1f 	bfextu	r12,r11,0x0,0x1f
800067be:	14 4c       	or	r12,r10
800067c0:	e0 80 00 a3 	breq	80006906 <__ieee754_sqrt+0x182>
800067c4:	58 0b       	cp.w	r11,0
800067c6:	c0 c0       	breq	800067de <__ieee754_sqrt+0x5a>
800067c8:	14 98       	mov	r8,r10
800067ca:	16 99       	mov	r9,r11
800067cc:	e0 a0 02 b2 	rcall	80006d30 <__avr32_f64_sub>
800067d0:	14 98       	mov	r8,r10
800067d2:	16 99       	mov	r9,r11
800067d4:	e0 a0 04 f4 	rcall	800071bc <__avr32_f64_div>
800067d8:	14 96       	mov	r6,r10
800067da:	16 97       	mov	r7,r11
800067dc:	c9 58       	rjmp	80006906 <__ieee754_sqrt+0x182>
800067de:	f2 0a 14 14 	asr	r10,r9,0x14
800067e2:	c0 60       	breq	800067ee <__ieee754_sqrt+0x6a>
800067e4:	c1 88       	rjmp	80006814 <__ieee754_sqrt+0x90>
800067e6:	f0 09 16 0b 	lsr	r9,r8,0xb
800067ea:	21 5a       	sub	r10,21
800067ec:	b5 78       	lsl	r8,0x15
800067ee:	58 09       	cp.w	r9,0
800067f0:	cf b0       	breq	800067e6 <__ieee754_sqrt+0x62>
800067f2:	30 0b       	mov	r11,0
800067f4:	c0 38       	rjmp	800067fa <__ieee754_sqrt+0x76>
800067f6:	a1 79       	lsl	r9,0x1
800067f8:	2f fb       	sub	r11,-1
800067fa:	ed b9 00 14 	bld	r9,0x14
800067fe:	cf c1       	brne	800067f6 <__ieee754_sqrt+0x72>
80006800:	2f fa       	sub	r10,-1
80006802:	f6 0c 11 20 	rsub	r12,r11,32
80006806:	16 1a       	sub	r10,r11
80006808:	f0 0c 0a 4c 	lsr	r12,r8,r12
8000680c:	f0 0b 09 48 	lsl	r8,r8,r11
80006810:	f9 e9 10 09 	or	r9,r12,r9
80006814:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
80006818:	f4 c6 03 ff 	sub	r6,r10,1023
8000681c:	b5 a9       	sbr	r9,0x14
8000681e:	ed b6 00 00 	bld	r6,0x0
80006822:	c0 61       	brne	8000682e <__ieee754_sqrt+0xaa>
80006824:	f0 0a 16 1f 	lsr	r10,r8,0x1f
80006828:	a1 78       	lsl	r8,0x1
8000682a:	f4 09 00 19 	add	r9,r10,r9<<0x1
8000682e:	30 07       	mov	r7,0
80006830:	f0 0a 15 01 	lsl	r10,r8,0x1
80006834:	0e 9c       	mov	r12,r7
80006836:	bf 98       	lsr	r8,0x1f
80006838:	fc 1b 00 20 	movh	r11,0x20
8000683c:	f0 09 00 18 	add	r8,r8,r9<<0x1
80006840:	0e 99       	mov	r9,r7
80006842:	f2 0b 00 0e 	add	lr,r9,r11
80006846:	2f f7       	sub	r7,-1
80006848:	10 3e       	cp.w	lr,r8
8000684a:	f1 de ea 18 	suble	r8,r8,lr
8000684e:	f9 db ea 0c 	addle	r12,r12,r11
80006852:	fd db ea 09 	addle	r9,lr,r11
80006856:	f4 0e 16 1f 	lsr	lr,r10,0x1f
8000685a:	a1 9b       	lsr	r11,0x1
8000685c:	fc 08 00 18 	add	r8,lr,r8<<0x1
80006860:	a1 7a       	lsl	r10,0x1
80006862:	59 67       	cp.w	r7,22
80006864:	ce f1       	brne	80006842 <__ieee754_sqrt+0xbe>
80006866:	30 07       	mov	r7,0
80006868:	fc 15 80 00 	movh	r5,0x8000
8000686c:	0e 9b       	mov	r11,r7
8000686e:	0e 94       	mov	r4,r7
80006870:	0e 92       	mov	r2,r7
80006872:	ea 04 00 0e 	add	lr,r5,r4
80006876:	10 39       	cp.w	r9,r8
80006878:	c0 95       	brlt	8000688a <__ieee754_sqrt+0x106>
8000687a:	5f 03       	sreq	r3
8000687c:	14 3e       	cp.w	lr,r10
8000687e:	5f 81       	srls	r1
80006880:	e3 e3 00 03 	and	r3,r1,r3
80006884:	e4 03 18 00 	cp.b	r3,r2
80006888:	c1 70       	breq	800068b6 <__ieee754_sqrt+0x132>
8000688a:	1c 93       	mov	r3,lr
8000688c:	fc 05 00 04 	add	r4,lr,r5
80006890:	e6 13 80 00 	andh	r3,0x8000,COH
80006894:	fc 11 80 00 	movh	r1,0x8000
80006898:	02 33       	cp.w	r3,r1
8000689a:	c0 61       	brne	800068a6 <__ieee754_sqrt+0x122>
8000689c:	58 04       	cp.w	r4,0
8000689e:	c0 45       	brlt	800068a6 <__ieee754_sqrt+0x122>
800068a0:	f2 c3 ff ff 	sub	r3,r9,-1
800068a4:	c0 28       	rjmp	800068a8 <__ieee754_sqrt+0x124>
800068a6:	12 93       	mov	r3,r9
800068a8:	12 18       	sub	r8,r9
800068aa:	0a 0b       	add	r11,r5
800068ac:	1c 3a       	cp.w	r10,lr
800068ae:	f7 b8 03 01 	sublo	r8,1
800068b2:	06 99       	mov	r9,r3
800068b4:	1c 1a       	sub	r10,lr
800068b6:	f4 0e 16 1f 	lsr	lr,r10,0x1f
800068ba:	a1 95       	lsr	r5,0x1
800068bc:	2f f7       	sub	r7,-1
800068be:	fc 08 00 18 	add	r8,lr,r8<<0x1
800068c2:	a1 7a       	lsl	r10,0x1
800068c4:	e0 47 00 20 	cp.w	r7,32
800068c8:	cd 51       	brne	80006872 <__ieee754_sqrt+0xee>
800068ca:	14 48       	or	r8,r10
800068cc:	c0 a0       	breq	800068e0 <__ieee754_sqrt+0x15c>
800068ce:	f1 db c0 01 	bfextu	r8,r11,0x0,0x1
800068d2:	5b fb       	cp.w	r11,-1
800068d4:	f7 bc 00 ff 	subeq	r12,-1
800068d8:	f9 bb 00 00 	moveq	r11,0
800068dc:	f1 db e1 0b 	addne	r11,r8,r11
800068e0:	a1 9b       	lsr	r11,0x1
800068e2:	16 99       	mov	r9,r11
800068e4:	bf b9       	sbr	r9,0x1f
800068e6:	ec 0a 14 01 	asr	r10,r6,0x1
800068ea:	f8 08 14 01 	asr	r8,r12,0x1
800068ee:	b5 6a       	lsl	r10,0x14
800068f0:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
800068f4:	f2 0b 17 10 	movne	r11,r9
800068f8:	fc 19 3f e0 	movh	r9,0x3fe0
800068fc:	16 96       	mov	r6,r11
800068fe:	12 0a       	add	r10,r9
80006900:	f4 08 00 08 	add	r8,r10,r8
80006904:	10 97       	mov	r7,r8
80006906:	0c 9a       	mov	r10,r6
80006908:	0e 9b       	mov	r11,r7
8000690a:	d8 32       	popm	r0-r7,pc

8000690c <fabs>:
8000690c:	f3 db c0 1f 	bfextu	r9,r11,0x0,0x1f
80006910:	12 9b       	mov	r11,r9
80006912:	5e fc       	retal	r12

80006914 <finite>:
80006914:	f7 db c0 1f 	bfextu	r11,r11,0x0,0x1f
80006918:	fc 18 80 10 	movh	r8,0x8010
8000691c:	f6 08 00 0c 	add	r12,r11,r8
80006920:	bf 9c       	lsr	r12,0x1f
80006922:	5e fc       	retal	r12

80006924 <__isnand>:
80006924:	14 98       	mov	r8,r10
80006926:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
8000692a:	f0 0c 11 00 	rsub	r12,r8,0
8000692e:	10 4c       	or	r12,r8
80006930:	fc 18 7f f0 	movh	r8,0x7ff0
80006934:	f5 ec 13 fc 	or	r12,r10,r12>>0x1f
80006938:	f0 0c 01 0c 	sub	r12,r8,r12
8000693c:	bf 9c       	lsr	r12,0x1f
8000693e:	5e fc       	retal	r12

80006940 <matherr>:
80006940:	5e fd       	retal	0

80006942 <nan>:
80006942:	30 0a       	mov	r10,0
80006944:	fc 1b 7f f8 	movh	r11,0x7ff8
80006948:	5e fc       	retal	r12
8000694a:	d7 03       	nop

8000694c <rint>:
8000694c:	d4 21       	pushm	r4-r7,lr
8000694e:	20 2d       	sub	sp,8
80006950:	ed db c2 8b 	bfextu	r6,r11,0x14,0xb
80006954:	14 94       	mov	r4,r10
80006956:	16 95       	mov	r5,r11
80006958:	14 98       	mov	r8,r10
8000695a:	16 9e       	mov	lr,r11
8000695c:	16 9c       	mov	r12,r11
8000695e:	f6 07 16 1f 	lsr	r7,r11,0x1f
80006962:	ec c9 03 ff 	sub	r9,r6,1023
80006966:	59 39       	cp.w	r9,19
80006968:	e0 89 00 4a 	brgt	800069fc <rint+0xb0>
8000696c:	58 09       	cp.w	r9,0
8000696e:	c2 c4       	brge	800069c6 <rint+0x7a>
80006970:	f3 db c0 1f 	bfextu	r9,r11,0x0,0x1f
80006974:	14 49       	or	r9,r10
80006976:	c7 30       	breq	80006a5c <rint+0x110>
80006978:	fd db c0 14 	bfextu	lr,r11,0x0,0x14
8000697c:	fe cc c3 74 	sub	r12,pc,-15500
80006980:	fd e4 10 08 	or	r8,lr,r4
80006984:	16 99       	mov	r9,r11
80006986:	f0 0e 11 00 	rsub	lr,r8,0
8000698a:	e6 19 ff fe 	andh	r9,0xfffe,COH
8000698e:	fd e8 10 08 	or	r8,lr,r8
80006992:	ad 88       	lsr	r8,0xc
80006994:	e6 18 00 08 	andh	r8,0x8,COH
80006998:	f1 e9 10 0b 	or	r11,r8,r9
8000699c:	f8 07 02 34 	ld.d	r4,r12[r7<<0x3]
800069a0:	14 98       	mov	r8,r10
800069a2:	16 99       	mov	r9,r11
800069a4:	08 9a       	mov	r10,r4
800069a6:	0a 9b       	mov	r11,r5
800069a8:	e0 a0 02 92 	rcall	80006ecc <__avr32_f64_add>
800069ac:	08 98       	mov	r8,r4
800069ae:	fa eb 00 00 	st.d	sp[0],r10
800069b2:	0a 99       	mov	r9,r5
800069b4:	fa ea 00 00 	ld.d	r10,sp[0]
800069b8:	cb cd       	rcall	80006d30 <__avr32_f64_sub>
800069ba:	f7 db c0 1f 	bfextu	r11,r11,0x0,0x1f
800069be:	14 94       	mov	r4,r10
800069c0:	f7 e7 11 f5 	or	r5,r11,r7<<0x1f
800069c4:	c4 c8       	rjmp	80006a5c <rint+0x110>
800069c6:	ee 7a ff ff 	mov	r10,1048575
800069ca:	f4 09 08 4a 	asr	r10,r10,r9
800069ce:	f5 eb 00 0b 	and	r11,r10,r11
800069d2:	08 4b       	or	r11,r4
800069d4:	c4 40       	breq	80006a5c <rint+0x110>
800069d6:	a1 9a       	lsr	r10,0x1
800069d8:	f5 e5 00 0b 	and	r11,r10,r5
800069dc:	08 4b       	or	r11,r4
800069de:	c0 31       	brne	800069e4 <rint+0x98>
800069e0:	16 98       	mov	r8,r11
800069e2:	c2 b8       	rjmp	80006a38 <rint+0xec>
800069e4:	59 39       	cp.w	r9,19
800069e6:	c0 41       	brne	800069ee <rint+0xa2>
800069e8:	fc 18 40 00 	movh	r8,0x4000
800069ec:	c2 68       	rjmp	80006a38 <rint+0xec>
800069ee:	14 8c       	andn	r12,r10
800069f0:	e2 6a 00 00 	mov	r10,131072
800069f4:	f4 09 08 49 	asr	r9,r10,r9
800069f8:	12 4c       	or	r12,r9
800069fa:	c1 f8       	rjmp	80006a38 <rint+0xec>
800069fc:	e0 49 00 33 	cp.w	r9,51
80006a00:	e0 8a 00 0a 	brle	80006a14 <rint+0xc8>
80006a04:	e0 49 04 00 	cp.w	r9,1024
80006a08:	c2 a1       	brne	80006a5c <rint+0x110>
80006a0a:	14 98       	mov	r8,r10
80006a0c:	16 99       	mov	r9,r11
80006a0e:	e0 a0 02 5f 	rcall	80006ecc <__avr32_f64_add>
80006a12:	c2 38       	rjmp	80006a58 <rint+0x10c>
80006a14:	ec c6 04 13 	sub	r6,r6,1043
80006a18:	3f f9       	mov	r9,-1
80006a1a:	f2 06 0a 49 	lsr	r9,r9,r6
80006a1e:	f3 ea 00 0a 	and	r10,r9,r10
80006a22:	c1 d0       	breq	80006a5c <rint+0x110>
80006a24:	a1 99       	lsr	r9,0x1
80006a26:	f3 e4 00 0a 	and	r10,r9,r4
80006a2a:	c0 70       	breq	80006a38 <rint+0xec>
80006a2c:	12 88       	andn	r8,r9
80006a2e:	fc 19 40 00 	movh	r9,0x4000
80006a32:	f2 06 08 46 	asr	r6,r9,r6
80006a36:	0c 48       	or	r8,r6
80006a38:	fe ca c4 30 	sub	r10,pc,-15312
80006a3c:	18 99       	mov	r9,r12
80006a3e:	f4 07 02 36 	ld.d	r6,r10[r7<<0x3]
80006a42:	0c 9a       	mov	r10,r6
80006a44:	0e 9b       	mov	r11,r7
80006a46:	e0 a0 02 43 	rcall	80006ecc <__avr32_f64_add>
80006a4a:	0c 98       	mov	r8,r6
80006a4c:	fa eb 00 00 	st.d	sp[0],r10
80006a50:	0e 99       	mov	r9,r7
80006a52:	fa ea 00 00 	ld.d	r10,sp[0]
80006a56:	c6 dd       	rcall	80006d30 <__avr32_f64_sub>
80006a58:	14 94       	mov	r4,r10
80006a5a:	16 95       	mov	r5,r11
80006a5c:	08 9a       	mov	r10,r4
80006a5e:	0a 9b       	mov	r11,r5
80006a60:	2f ed       	sub	sp,-8
80006a62:	d8 22       	popm	r4-r7,pc

80006a64 <scalbn>:
80006a64:	d4 21       	pushm	r4-r7,lr
80006a66:	18 97       	mov	r7,r12
80006a68:	14 98       	mov	r8,r10
80006a6a:	16 99       	mov	r9,r11
80006a6c:	14 94       	mov	r4,r10
80006a6e:	16 95       	mov	r5,r11
80006a70:	14 96       	mov	r6,r10
80006a72:	16 9c       	mov	r12,r11
80006a74:	fd db c2 8b 	bfextu	lr,r11,0x14,0xb
80006a78:	c1 11       	brne	80006a9a <scalbn+0x36>
80006a7a:	f9 db c0 1f 	bfextu	r12,r11,0x0,0x1f
80006a7e:	14 4c       	or	r12,r10
80006a80:	c5 c0       	breq	80006b38 <scalbn+0xd4>
80006a82:	30 08       	mov	r8,0
80006a84:	fc 19 43 50 	movh	r9,0x4350
80006a88:	c6 8c       	rcall	80006b58 <__avr32_f64_mul>
80006a8a:	16 99       	mov	r9,r11
80006a8c:	14 98       	mov	r8,r10
80006a8e:	14 94       	mov	r4,r10
80006a90:	12 95       	mov	r5,r9
80006a92:	fe 57 3c b0 	cp.w	r7,-50000
80006a96:	c0 84       	brge	80006aa6 <scalbn+0x42>
80006a98:	c3 a8       	rjmp	80006b0c <scalbn+0xa8>
80006a9a:	e0 4e 07 ff 	cp.w	lr,2047
80006a9e:	c0 81       	brne	80006aae <scalbn+0x4a>
80006aa0:	e0 a0 02 16 	rcall	80006ecc <__avr32_f64_add>
80006aa4:	c4 88       	rjmp	80006b34 <scalbn+0xd0>
80006aa6:	fd d9 c2 8b 	bfextu	lr,r9,0x14,0xb
80006aaa:	12 9c       	mov	r12,r9
80006aac:	23 6e       	sub	lr,54
80006aae:	0e 0e       	add	lr,r7
80006ab0:	e0 4e 07 fe 	cp.w	lr,2046
80006ab4:	e0 89 00 11 	brgt	80006ad6 <scalbn+0x72>
80006ab8:	58 0e       	cp.w	lr,0
80006aba:	e0 8a 00 07 	brle	80006ac8 <scalbn+0x64>
80006abe:	e4 1c 80 0f 	andh	r12,0x800f
80006ac2:	f9 ee 11 49 	or	r9,r12,lr<<0x14
80006ac6:	c3 98       	rjmp	80006b38 <scalbn+0xd4>
80006ac8:	fe 5e ff cb 	cp.w	lr,-53
80006acc:	c2 94       	brge	80006b1e <scalbn+0xba>
80006ace:	e0 47 c3 50 	cp.w	r7,50000
80006ad2:	e0 8a 00 14 	brle	80006afa <scalbn+0x96>
80006ad6:	e0 6a 75 9c 	mov	r10,30108
80006ada:	ea 1a 88 00 	orh	r10,0x8800
80006ade:	e0 6b e4 3c 	mov	r11,58428
80006ae2:	ea 1b 7e 37 	orh	r11,0x7e37
80006ae6:	c2 dc       	rcall	80006b40 <copysign>
80006ae8:	e0 68 75 9c 	mov	r8,30108
80006aec:	ea 18 88 00 	orh	r8,0x8800
80006af0:	e0 69 e4 3c 	mov	r9,58428
80006af4:	ea 19 7e 37 	orh	r9,0x7e37
80006af8:	c1 d8       	rjmp	80006b32 <scalbn+0xce>
80006afa:	e0 6a f3 59 	mov	r10,62297
80006afe:	ea 1a c2 f8 	orh	r10,0xc2f8
80006b02:	e0 6b 6e 1f 	mov	r11,28191
80006b06:	ea 1b 01 a5 	orh	r11,0x1a5
80006b0a:	c1 bc       	rcall	80006b40 <copysign>
80006b0c:	e0 68 f3 59 	mov	r8,62297
80006b10:	ea 18 c2 f8 	orh	r8,0xc2f8
80006b14:	e0 69 6e 1f 	mov	r9,28191
80006b18:	ea 19 01 a5 	orh	r9,0x1a5
80006b1c:	c0 b8       	rjmp	80006b32 <scalbn+0xce>
80006b1e:	2c ae       	sub	lr,-54
80006b20:	e4 1c 80 0f 	andh	r12,0x800f
80006b24:	f9 ee 11 49 	or	r9,r12,lr<<0x14
80006b28:	10 9a       	mov	r10,r8
80006b2a:	12 9b       	mov	r11,r9
80006b2c:	30 08       	mov	r8,0
80006b2e:	fc 19 3c 90 	movh	r9,0x3c90
80006b32:	c1 3c       	rcall	80006b58 <__avr32_f64_mul>
80006b34:	14 98       	mov	r8,r10
80006b36:	16 99       	mov	r9,r11
80006b38:	10 9a       	mov	r10,r8
80006b3a:	12 9b       	mov	r11,r9
80006b3c:	d8 22       	popm	r4-r7,pc
80006b3e:	d7 03       	nop

80006b40 <copysign>:
80006b40:	d4 21       	pushm	r4-r7,lr
80006b42:	e6 19 80 00 	andh	r9,0x8000,COH
80006b46:	16 95       	mov	r5,r11
80006b48:	14 94       	mov	r4,r10
80006b4a:	14 96       	mov	r6,r10
80006b4c:	f7 db c0 1f 	bfextu	r11,r11,0x0,0x1f
80006b50:	f3 eb 10 0b 	or	r11,r9,r11
80006b54:	16 97       	mov	r7,r11
80006b56:	d8 22       	popm	r4-r7,pc

80006b58 <__avr32_f64_mul>:
80006b58:	f5 eb 10 1c 	or	r12,r10,r11<<0x1
80006b5c:	e0 80 00 dc 	breq	80006d14 <__avr32_f64_mul_op1_zero>
80006b60:	d4 21       	pushm	r4-r7,lr
80006b62:	f7 e9 20 0e 	eor	lr,r11,r9
80006b66:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80006b6a:	30 15       	mov	r5,1
80006b6c:	c4 30       	breq	80006bf2 <__avr32_f64_mul_op1_subnormal>
80006b6e:	ab 6b       	lsl	r11,0xa
80006b70:	f7 ea 13 6b 	or	r11,r11,r10>>0x16
80006b74:	ab 6a       	lsl	r10,0xa
80006b76:	f7 d5 d3 c2 	bfins	r11,r5,0x1e,0x2
80006b7a:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80006b7e:	c5 c0       	breq	80006c36 <__avr32_f64_mul_op2_subnormal>
80006b80:	a1 78       	lsl	r8,0x1
80006b82:	5c f9       	rol	r9
80006b84:	f3 d5 d2 ab 	bfins	r9,r5,0x15,0xb
80006b88:	e0 47 07 ff 	cp.w	r7,2047
80006b8c:	c7 70       	breq	80006c7a <__avr32_f64_mul_op_nan_or_inf>
80006b8e:	e0 46 07 ff 	cp.w	r6,2047
80006b92:	c7 40       	breq	80006c7a <__avr32_f64_mul_op_nan_or_inf>
80006b94:	ee 06 00 0c 	add	r12,r7,r6
80006b98:	e0 2c 03 fe 	sub	r12,1022
80006b9c:	f6 08 06 44 	mulu.d	r4,r11,r8
80006ba0:	f4 09 07 44 	macu.d	r4,r10,r9
80006ba4:	f4 08 06 46 	mulu.d	r6,r10,r8
80006ba8:	f6 09 06 4a 	mulu.d	r10,r11,r9
80006bac:	08 07       	add	r7,r4
80006bae:	f4 05 00 4a 	adc	r10,r10,r5
80006bb2:	5c 0b       	acr	r11
80006bb4:	ed bb 00 14 	bld	r11,0x14
80006bb8:	c0 50       	breq	80006bc2 <__avr32_f64_mul+0x6a>
80006bba:	a1 77       	lsl	r7,0x1
80006bbc:	5c fa       	rol	r10
80006bbe:	5c fb       	rol	r11
80006bc0:	20 1c       	sub	r12,1
80006bc2:	58 0c       	cp.w	r12,0
80006bc4:	e0 8a 00 6f 	brle	80006ca2 <__avr32_f64_mul_res_subnormal>
80006bc8:	e0 4c 07 ff 	cp.w	r12,2047
80006bcc:	e0 84 00 9c 	brge	80006d04 <__avr32_f64_mul_res_inf>
80006bd0:	f7 dc d2 8b 	bfins	r11,r12,0x14,0xb
80006bd4:	ed ea 11 f6 	or	r6,r6,r10<<0x1f
80006bd8:	ef e6 12 17 	or	r7,r7,r6>>0x1
80006bdc:	ee 17 80 00 	eorh	r7,0x8000
80006be0:	f1 b7 04 20 	satu	r7,0x1
80006be4:	0e 0a       	add	r10,r7
80006be6:	5c 0b       	acr	r11
80006be8:	ed be 00 1f 	bld	lr,0x1f
80006bec:	ef bb 00 1f 	bst	r11,0x1f
80006bf0:	d8 22       	popm	r4-r7,pc

80006bf2 <__avr32_f64_mul_op1_subnormal>:
80006bf2:	e4 1b 00 0f 	andh	r11,0xf
80006bf6:	f4 0c 12 00 	clz	r12,r10
80006bfa:	f6 06 12 00 	clz	r6,r11
80006bfe:	f7 bc 03 e1 	sublo	r12,-31
80006c02:	f8 06 17 30 	movlo	r6,r12
80006c06:	f7 b6 02 01 	subhs	r6,1
80006c0a:	e0 46 00 20 	cp.w	r6,32
80006c0e:	c0 d4       	brge	80006c28 <__avr32_f64_mul_op1_subnormal+0x36>
80006c10:	ec 0c 11 20 	rsub	r12,r6,32
80006c14:	f6 06 09 4b 	lsl	r11,r11,r6
80006c18:	f4 0c 0a 4c 	lsr	r12,r10,r12
80006c1c:	18 4b       	or	r11,r12
80006c1e:	f4 06 09 4a 	lsl	r10,r10,r6
80006c22:	20 b6       	sub	r6,11
80006c24:	0c 17       	sub	r7,r6
80006c26:	ca ab       	rjmp	80006b7a <__avr32_f64_mul+0x22>
80006c28:	f4 06 09 4b 	lsl	r11,r10,r6
80006c2c:	c6 40       	breq	80006cf4 <__avr32_f64_mul_res_zero>
80006c2e:	30 0a       	mov	r10,0
80006c30:	20 b6       	sub	r6,11
80006c32:	0c 17       	sub	r7,r6
80006c34:	ca 3b       	rjmp	80006b7a <__avr32_f64_mul+0x22>

80006c36 <__avr32_f64_mul_op2_subnormal>:
80006c36:	e4 19 00 0f 	andh	r9,0xf
80006c3a:	f0 0c 12 00 	clz	r12,r8
80006c3e:	f2 05 12 00 	clz	r5,r9
80006c42:	f7 bc 03 ea 	sublo	r12,-22
80006c46:	f8 05 17 30 	movlo	r5,r12
80006c4a:	f7 b5 02 0a 	subhs	r5,10
80006c4e:	e0 45 00 20 	cp.w	r5,32
80006c52:	c0 d4       	brge	80006c6c <__avr32_f64_mul_op2_subnormal+0x36>
80006c54:	ea 0c 11 20 	rsub	r12,r5,32
80006c58:	f2 05 09 49 	lsl	r9,r9,r5
80006c5c:	f0 0c 0a 4c 	lsr	r12,r8,r12
80006c60:	18 49       	or	r9,r12
80006c62:	f0 05 09 48 	lsl	r8,r8,r5
80006c66:	20 25       	sub	r5,2
80006c68:	0a 16       	sub	r6,r5
80006c6a:	c8 fb       	rjmp	80006b88 <__avr32_f64_mul+0x30>
80006c6c:	f0 05 09 49 	lsl	r9,r8,r5
80006c70:	c4 20       	breq	80006cf4 <__avr32_f64_mul_res_zero>
80006c72:	30 08       	mov	r8,0
80006c74:	20 25       	sub	r5,2
80006c76:	0a 16       	sub	r6,r5
80006c78:	c8 8b       	rjmp	80006b88 <__avr32_f64_mul+0x30>

80006c7a <__avr32_f64_mul_op_nan_or_inf>:
80006c7a:	e4 19 00 0f 	andh	r9,0xf
80006c7e:	e4 1b 00 0f 	andh	r11,0xf
80006c82:	14 4b       	or	r11,r10
80006c84:	10 49       	or	r9,r8
80006c86:	e0 47 07 ff 	cp.w	r7,2047
80006c8a:	c0 91       	brne	80006c9c <__avr32_f64_mul_op1_not_naninf>
80006c8c:	58 0b       	cp.w	r11,0
80006c8e:	c3 81       	brne	80006cfe <__avr32_f64_mul_res_nan>
80006c90:	e0 46 07 ff 	cp.w	r6,2047
80006c94:	c3 81       	brne	80006d04 <__avr32_f64_mul_res_inf>
80006c96:	58 09       	cp.w	r9,0
80006c98:	c3 60       	breq	80006d04 <__avr32_f64_mul_res_inf>
80006c9a:	c3 28       	rjmp	80006cfe <__avr32_f64_mul_res_nan>

80006c9c <__avr32_f64_mul_op1_not_naninf>:
80006c9c:	58 09       	cp.w	r9,0
80006c9e:	c3 30       	breq	80006d04 <__avr32_f64_mul_res_inf>
80006ca0:	c2 f8       	rjmp	80006cfe <__avr32_f64_mul_res_nan>

80006ca2 <__avr32_f64_mul_res_subnormal>:
80006ca2:	5c 3c       	neg	r12
80006ca4:	2f fc       	sub	r12,-1
80006ca6:	f1 bc 04 c0 	satu	r12,0x6
80006caa:	e0 4c 00 20 	cp.w	r12,32
80006cae:	c1 14       	brge	80006cd0 <__avr32_f64_mul_res_subnormal+0x2e>
80006cb0:	f8 08 11 20 	rsub	r8,r12,32
80006cb4:	0e 46       	or	r6,r7
80006cb6:	ee 0c 0a 47 	lsr	r7,r7,r12
80006cba:	f4 08 09 49 	lsl	r9,r10,r8
80006cbe:	12 47       	or	r7,r9
80006cc0:	f4 0c 0a 4a 	lsr	r10,r10,r12
80006cc4:	f6 08 09 49 	lsl	r9,r11,r8
80006cc8:	12 4a       	or	r10,r9
80006cca:	f6 0c 0a 4b 	lsr	r11,r11,r12
80006cce:	c8 3b       	rjmp	80006bd4 <__avr32_f64_mul+0x7c>
80006cd0:	f8 08 11 20 	rsub	r8,r12,32
80006cd4:	f9 b9 00 00 	moveq	r9,0
80006cd8:	c0 30       	breq	80006cde <__avr32_f64_mul_res_subnormal+0x3c>
80006cda:	f6 08 09 49 	lsl	r9,r11,r8
80006cde:	0e 46       	or	r6,r7
80006ce0:	ed ea 10 16 	or	r6,r6,r10<<0x1
80006ce4:	f4 0c 0a 4a 	lsr	r10,r10,r12
80006ce8:	f3 ea 10 07 	or	r7,r9,r10
80006cec:	f6 0c 0a 4a 	lsr	r10,r11,r12
80006cf0:	30 0b       	mov	r11,0
80006cf2:	c7 1b       	rjmp	80006bd4 <__avr32_f64_mul+0x7c>

80006cf4 <__avr32_f64_mul_res_zero>:
80006cf4:	1c 9b       	mov	r11,lr
80006cf6:	e6 1b 80 00 	andh	r11,0x8000,COH
80006cfa:	30 0a       	mov	r10,0
80006cfc:	d8 22       	popm	r4-r7,pc

80006cfe <__avr32_f64_mul_res_nan>:
80006cfe:	3f fb       	mov	r11,-1
80006d00:	3f fa       	mov	r10,-1
80006d02:	d8 22       	popm	r4-r7,pc

80006d04 <__avr32_f64_mul_res_inf>:
80006d04:	f0 6b 00 00 	mov	r11,-1048576
80006d08:	ed be 00 1f 	bld	lr,0x1f
80006d0c:	ef bb 00 1f 	bst	r11,0x1f
80006d10:	30 0a       	mov	r10,0
80006d12:	d8 22       	popm	r4-r7,pc

80006d14 <__avr32_f64_mul_op1_zero>:
80006d14:	f7 e9 20 0b 	eor	r11,r11,r9
80006d18:	e6 1b 80 00 	andh	r11,0x8000,COH
80006d1c:	f9 d9 c2 8b 	bfextu	r12,r9,0x14,0xb
80006d20:	e0 4c 07 ff 	cp.w	r12,2047
80006d24:	5e 1c       	retne	r12
80006d26:	3f fa       	mov	r10,-1
80006d28:	3f fb       	mov	r11,-1
80006d2a:	5e fc       	retal	r12

80006d2c <__avr32_f64_sub_from_add>:
80006d2c:	ee 19 80 00 	eorh	r9,0x8000

80006d30 <__avr32_f64_sub>:
80006d30:	f7 e9 20 0c 	eor	r12,r11,r9
80006d34:	e0 86 00 ca 	brmi	80006ec8 <__avr32_f64_add_from_sub>
80006d38:	eb cd 40 e0 	pushm	r5-r7,lr
80006d3c:	16 9c       	mov	r12,r11
80006d3e:	e6 1c 80 00 	andh	r12,0x8000,COH
80006d42:	bf db       	cbr	r11,0x1f
80006d44:	bf d9       	cbr	r9,0x1f
80006d46:	10 3a       	cp.w	r10,r8
80006d48:	f2 0b 13 00 	cpc	r11,r9
80006d4c:	c0 92       	brcc	80006d5e <__avr32_f64_sub+0x2e>
80006d4e:	16 97       	mov	r7,r11
80006d50:	12 9b       	mov	r11,r9
80006d52:	0e 99       	mov	r9,r7
80006d54:	14 97       	mov	r7,r10
80006d56:	10 9a       	mov	r10,r8
80006d58:	0e 98       	mov	r8,r7
80006d5a:	ee 1c 80 00 	eorh	r12,0x8000
80006d5e:	f6 07 16 14 	lsr	r7,r11,0x14
80006d62:	ab 7b       	lsl	r11,0xb
80006d64:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80006d68:	ab 7a       	lsl	r10,0xb
80006d6a:	bf bb       	sbr	r11,0x1f
80006d6c:	f2 06 16 14 	lsr	r6,r9,0x14
80006d70:	c4 40       	breq	80006df8 <__avr32_f64_sub_opL_subnormal>
80006d72:	ab 79       	lsl	r9,0xb
80006d74:	f3 e8 13 59 	or	r9,r9,r8>>0x15
80006d78:	ab 78       	lsl	r8,0xb
80006d7a:	bf b9       	sbr	r9,0x1f

80006d7c <__avr32_f64_sub_opL_subnormal_done>:
80006d7c:	e0 47 07 ff 	cp.w	r7,2047
80006d80:	c4 f0       	breq	80006e1e <__avr32_f64_sub_opH_nan_or_inf>
80006d82:	0e 26       	rsub	r6,r7
80006d84:	c1 20       	breq	80006da8 <__avr32_f64_sub_shift_done>
80006d86:	ec 05 11 20 	rsub	r5,r6,32
80006d8a:	e0 46 00 20 	cp.w	r6,32
80006d8e:	c7 c2       	brcc	80006e86 <__avr32_f64_sub_longshift>
80006d90:	f0 05 09 4e 	lsl	lr,r8,r5
80006d94:	f2 05 09 45 	lsl	r5,r9,r5
80006d98:	f0 06 0a 48 	lsr	r8,r8,r6
80006d9c:	f2 06 0a 49 	lsr	r9,r9,r6
80006da0:	0a 48       	or	r8,r5
80006da2:	58 0e       	cp.w	lr,0
80006da4:	5f 1e       	srne	lr
80006da6:	1c 48       	or	r8,lr

80006da8 <__avr32_f64_sub_shift_done>:
80006da8:	10 1a       	sub	r10,r8
80006daa:	f6 09 01 4b 	sbc	r11,r11,r9
80006dae:	f6 06 12 00 	clz	r6,r11
80006db2:	c0 e0       	breq	80006dce <__avr32_f64_sub_longnormalize_done>
80006db4:	c7 83       	brcs	80006ea4 <__avr32_f64_sub_longnormalize>
80006db6:	ec 0e 11 20 	rsub	lr,r6,32
80006dba:	f6 06 09 4b 	lsl	r11,r11,r6
80006dbe:	f4 0e 0a 4e 	lsr	lr,r10,lr
80006dc2:	1c 4b       	or	r11,lr
80006dc4:	f4 06 09 4a 	lsl	r10,r10,r6
80006dc8:	0c 17       	sub	r7,r6
80006dca:	e0 8a 00 39 	brle	80006e3c <__avr32_f64_sub_subnormal_result>

80006dce <__avr32_f64_sub_longnormalize_done>:
80006dce:	f4 09 15 15 	lsl	r9,r10,0x15
80006dd2:	ab 9a       	lsr	r10,0xb
80006dd4:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80006dd8:	ab 9b       	lsr	r11,0xb
80006dda:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80006dde:	18 4b       	or	r11,r12

80006de0 <__avr32_f64_sub_round>:
80006de0:	fc 17 80 00 	movh	r7,0x8000
80006de4:	ed ba 00 00 	bld	r10,0x0
80006de8:	f7 b7 01 ff 	subne	r7,-1
80006dec:	0e 39       	cp.w	r9,r7
80006dee:	5f 29       	srhs	r9
80006df0:	12 0a       	add	r10,r9
80006df2:	5c 0b       	acr	r11
80006df4:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80006df8 <__avr32_f64_sub_opL_subnormal>:
80006df8:	ab 79       	lsl	r9,0xb
80006dfa:	f3 e8 13 59 	or	r9,r9,r8>>0x15
80006dfe:	ab 78       	lsl	r8,0xb
80006e00:	f3 e8 10 0e 	or	lr,r9,r8
80006e04:	f9 b6 01 01 	movne	r6,1
80006e08:	ee 0e 11 00 	rsub	lr,r7,0
80006e0c:	f9 b7 00 01 	moveq	r7,1
80006e10:	ef bb 00 1f 	bst	r11,0x1f
80006e14:	f7 ea 10 0e 	or	lr,r11,r10
80006e18:	f9 b7 00 00 	moveq	r7,0
80006e1c:	cb 0b       	rjmp	80006d7c <__avr32_f64_sub_opL_subnormal_done>

80006e1e <__avr32_f64_sub_opH_nan_or_inf>:
80006e1e:	bf db       	cbr	r11,0x1f
80006e20:	f7 ea 10 0e 	or	lr,r11,r10
80006e24:	c0 81       	brne	80006e34 <__avr32_f64_sub_return_nan>
80006e26:	e0 46 07 ff 	cp.w	r6,2047
80006e2a:	c0 50       	breq	80006e34 <__avr32_f64_sub_return_nan>
80006e2c:	f9 e7 11 4b 	or	r11,r12,r7<<0x14
80006e30:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80006e34 <__avr32_f64_sub_return_nan>:
80006e34:	3f fa       	mov	r10,-1
80006e36:	3f fb       	mov	r11,-1
80006e38:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80006e3c <__avr32_f64_sub_subnormal_result>:
80006e3c:	5c 37       	neg	r7
80006e3e:	2f f7       	sub	r7,-1
80006e40:	f1 b7 04 c0 	satu	r7,0x6
80006e44:	e0 47 00 20 	cp.w	r7,32
80006e48:	c1 14       	brge	80006e6a <__avr32_f64_sub_subnormal_result+0x2e>
80006e4a:	ee 08 11 20 	rsub	r8,r7,32
80006e4e:	f4 08 09 49 	lsl	r9,r10,r8
80006e52:	5f 16       	srne	r6
80006e54:	f4 07 0a 4a 	lsr	r10,r10,r7
80006e58:	0c 4a       	or	r10,r6
80006e5a:	f6 08 09 49 	lsl	r9,r11,r8
80006e5e:	f5 e9 10 0a 	or	r10,r10,r9
80006e62:	f4 07 0a 4b 	lsr	r11,r10,r7
80006e66:	30 07       	mov	r7,0
80006e68:	cb 3b       	rjmp	80006dce <__avr32_f64_sub_longnormalize_done>
80006e6a:	ee 08 11 40 	rsub	r8,r7,64
80006e6e:	f6 08 09 49 	lsl	r9,r11,r8
80006e72:	14 49       	or	r9,r10
80006e74:	5f 16       	srne	r6
80006e76:	f6 07 0a 4a 	lsr	r10,r11,r7
80006e7a:	0c 4a       	or	r10,r6
80006e7c:	30 0b       	mov	r11,0
80006e7e:	30 07       	mov	r7,0
80006e80:	ca 7b       	rjmp	80006dce <__avr32_f64_sub_longnormalize_done>
80006e82:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80006e86 <__avr32_f64_sub_longshift>:
80006e86:	f1 b6 04 c0 	satu	r6,0x6
80006e8a:	f0 0e 17 00 	moveq	lr,r8
80006e8e:	c0 40       	breq	80006e96 <__avr32_f64_sub_longshift+0x10>
80006e90:	f2 05 09 4e 	lsl	lr,r9,r5
80006e94:	10 4e       	or	lr,r8
80006e96:	f2 06 0a 48 	lsr	r8,r9,r6
80006e9a:	30 09       	mov	r9,0
80006e9c:	58 0e       	cp.w	lr,0
80006e9e:	5f 1e       	srne	lr
80006ea0:	1c 48       	or	r8,lr
80006ea2:	c8 3b       	rjmp	80006da8 <__avr32_f64_sub_shift_done>

80006ea4 <__avr32_f64_sub_longnormalize>:
80006ea4:	f4 06 12 00 	clz	r6,r10
80006ea8:	f9 b7 03 00 	movlo	r7,0
80006eac:	f9 b6 03 00 	movlo	r6,0
80006eb0:	f9 bc 03 00 	movlo	r12,0
80006eb4:	f7 b6 02 e0 	subhs	r6,-32
80006eb8:	f4 06 09 4b 	lsl	r11,r10,r6
80006ebc:	30 0a       	mov	r10,0
80006ebe:	0c 17       	sub	r7,r6
80006ec0:	fe 9a ff be 	brle	80006e3c <__avr32_f64_sub_subnormal_result>
80006ec4:	c8 5b       	rjmp	80006dce <__avr32_f64_sub_longnormalize_done>
80006ec6:	d7 03       	nop

80006ec8 <__avr32_f64_add_from_sub>:
80006ec8:	ee 19 80 00 	eorh	r9,0x8000

80006ecc <__avr32_f64_add>:
80006ecc:	f7 e9 20 0c 	eor	r12,r11,r9
80006ed0:	fe 96 ff 2e 	brmi	80006d2c <__avr32_f64_sub_from_add>
80006ed4:	eb cd 40 e0 	pushm	r5-r7,lr
80006ed8:	16 9c       	mov	r12,r11
80006eda:	e6 1c 80 00 	andh	r12,0x8000,COH
80006ede:	bf db       	cbr	r11,0x1f
80006ee0:	bf d9       	cbr	r9,0x1f
80006ee2:	12 3b       	cp.w	r11,r9
80006ee4:	c0 72       	brcc	80006ef2 <__avr32_f64_add+0x26>
80006ee6:	16 97       	mov	r7,r11
80006ee8:	12 9b       	mov	r11,r9
80006eea:	0e 99       	mov	r9,r7
80006eec:	14 97       	mov	r7,r10
80006eee:	10 9a       	mov	r10,r8
80006ef0:	0e 98       	mov	r8,r7
80006ef2:	30 0e       	mov	lr,0
80006ef4:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80006ef8:	f7 db c0 14 	bfextu	r11,r11,0x0,0x14
80006efc:	b5 ab       	sbr	r11,0x14
80006efe:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80006f02:	c6 20       	breq	80006fc6 <__avr32_f64_add_op2_subnormal>
80006f04:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
80006f08:	b5 a9       	sbr	r9,0x14
80006f0a:	e0 47 07 ff 	cp.w	r7,2047
80006f0e:	c2 80       	breq	80006f5e <__avr32_f64_add_opH_nan_or_inf>
80006f10:	0e 26       	rsub	r6,r7
80006f12:	c1 20       	breq	80006f36 <__avr32_f64_add_shift_done>
80006f14:	e0 46 00 36 	cp.w	r6,54
80006f18:	c1 52       	brcc	80006f42 <__avr32_f64_add_res_of_done>
80006f1a:	ec 05 11 20 	rsub	r5,r6,32
80006f1e:	e0 46 00 20 	cp.w	r6,32
80006f22:	c3 52       	brcc	80006f8c <__avr32_f64_add_longshift>
80006f24:	f0 05 09 4e 	lsl	lr,r8,r5
80006f28:	f2 05 09 45 	lsl	r5,r9,r5
80006f2c:	f0 06 0a 48 	lsr	r8,r8,r6
80006f30:	f2 06 0a 49 	lsr	r9,r9,r6
80006f34:	0a 48       	or	r8,r5

80006f36 <__avr32_f64_add_shift_done>:
80006f36:	10 0a       	add	r10,r8
80006f38:	f6 09 00 4b 	adc	r11,r11,r9
80006f3c:	ed bb 00 15 	bld	r11,0x15
80006f40:	c3 40       	breq	80006fa8 <__avr32_f64_add_res_of>

80006f42 <__avr32_f64_add_res_of_done>:
80006f42:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80006f46:	18 4b       	or	r11,r12

80006f48 <__avr32_f64_add_round>:
80006f48:	f9 da c0 01 	bfextu	r12,r10,0x0,0x1
80006f4c:	18 4e       	or	lr,r12
80006f4e:	ee 1e 80 00 	eorh	lr,0x8000
80006f52:	f1 be 04 20 	satu	lr,0x1
80006f56:	1c 0a       	add	r10,lr
80006f58:	5c 0b       	acr	r11
80006f5a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80006f5e <__avr32_f64_add_opH_nan_or_inf>:
80006f5e:	b5 cb       	cbr	r11,0x14
80006f60:	f7 ea 10 0e 	or	lr,r11,r10
80006f64:	c1 01       	brne	80006f84 <__avr32_f64_add_return_nan>
80006f66:	e0 46 07 ff 	cp.w	r6,2047
80006f6a:	c0 30       	breq	80006f70 <__avr32_f64_add_opL_nan_or_inf>
80006f6c:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80006f70 <__avr32_f64_add_opL_nan_or_inf>:
80006f70:	b5 c9       	cbr	r9,0x14
80006f72:	f3 e8 10 0e 	or	lr,r9,r8
80006f76:	c0 71       	brne	80006f84 <__avr32_f64_add_return_nan>
80006f78:	30 0a       	mov	r10,0
80006f7a:	fc 1b 7f f0 	movh	r11,0x7ff0
80006f7e:	18 4b       	or	r11,r12
80006f80:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80006f84 <__avr32_f64_add_return_nan>:
80006f84:	3f fa       	mov	r10,-1
80006f86:	3f fb       	mov	r11,-1
80006f88:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80006f8c <__avr32_f64_add_longshift>:
80006f8c:	f1 b6 04 c0 	satu	r6,0x6
80006f90:	f0 0e 17 00 	moveq	lr,r8
80006f94:	c0 60       	breq	80006fa0 <__avr32_f64_add_longshift+0x14>
80006f96:	f2 05 09 4e 	lsl	lr,r9,r5
80006f9a:	58 08       	cp.w	r8,0
80006f9c:	5f 18       	srne	r8
80006f9e:	10 4e       	or	lr,r8
80006fa0:	f2 06 0a 48 	lsr	r8,r9,r6
80006fa4:	30 09       	mov	r9,0
80006fa6:	cc 8b       	rjmp	80006f36 <__avr32_f64_add_shift_done>

80006fa8 <__avr32_f64_add_res_of>:
80006fa8:	fd ee 10 1e 	or	lr,lr,lr<<0x1
80006fac:	a1 9b       	lsr	r11,0x1
80006fae:	5d 0a       	ror	r10
80006fb0:	5d 0e       	ror	lr
80006fb2:	2f f7       	sub	r7,-1
80006fb4:	e0 47 07 ff 	cp.w	r7,2047
80006fb8:	f9 ba 00 00 	moveq	r10,0
80006fbc:	f9 bb 00 00 	moveq	r11,0
80006fc0:	f9 be 00 00 	moveq	lr,0
80006fc4:	cb fb       	rjmp	80006f42 <__avr32_f64_add_res_of_done>

80006fc6 <__avr32_f64_add_op2_subnormal>:
80006fc6:	30 16       	mov	r6,1
80006fc8:	58 07       	cp.w	r7,0
80006fca:	ca 01       	brne	80006f0a <__avr32_f64_add+0x3e>
80006fcc:	b5 cb       	cbr	r11,0x14
80006fce:	10 0a       	add	r10,r8
80006fd0:	f6 09 00 4b 	adc	r11,r11,r9
80006fd4:	18 4b       	or	r11,r12
80006fd6:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80006fda:	d7 03       	nop

80006fdc <__avr32_u32_to_f64>:
80006fdc:	f8 cb 00 00 	sub	r11,r12,0
80006fe0:	30 0c       	mov	r12,0
80006fe2:	c0 38       	rjmp	80006fe8 <__avr32_s32_to_f64+0x4>

80006fe4 <__avr32_s32_to_f64>:
80006fe4:	18 9b       	mov	r11,r12
80006fe6:	5c 4b       	abs	r11
80006fe8:	30 0a       	mov	r10,0
80006fea:	5e 0b       	reteq	r11
80006fec:	d4 01       	pushm	lr
80006fee:	e0 69 04 1e 	mov	r9,1054
80006ff2:	f6 08 12 00 	clz	r8,r11
80006ff6:	c1 70       	breq	80007024 <__avr32_s32_to_f64+0x40>
80006ff8:	c0 c3       	brcs	80007010 <__avr32_s32_to_f64+0x2c>
80006ffa:	f0 0e 11 20 	rsub	lr,r8,32
80006ffe:	f6 08 09 4b 	lsl	r11,r11,r8
80007002:	f4 0e 0a 4e 	lsr	lr,r10,lr
80007006:	1c 4b       	or	r11,lr
80007008:	f4 08 09 4a 	lsl	r10,r10,r8
8000700c:	10 19       	sub	r9,r8
8000700e:	c0 b8       	rjmp	80007024 <__avr32_s32_to_f64+0x40>
80007010:	f4 08 12 00 	clz	r8,r10
80007014:	f9 b8 03 00 	movlo	r8,0
80007018:	f7 b8 02 e0 	subhs	r8,-32
8000701c:	f4 08 09 4b 	lsl	r11,r10,r8
80007020:	30 0a       	mov	r10,0
80007022:	10 19       	sub	r9,r8
80007024:	58 09       	cp.w	r9,0
80007026:	e0 89 00 30 	brgt	80007086 <__avr32_s32_to_f64+0xa2>
8000702a:	5c 39       	neg	r9
8000702c:	2f f9       	sub	r9,-1
8000702e:	e0 49 00 36 	cp.w	r9,54
80007032:	c0 43       	brcs	8000703a <__avr32_s32_to_f64+0x56>
80007034:	30 0b       	mov	r11,0
80007036:	30 0a       	mov	r10,0
80007038:	c2 68       	rjmp	80007084 <__avr32_s32_to_f64+0xa0>
8000703a:	2f 69       	sub	r9,-10
8000703c:	f2 08 11 20 	rsub	r8,r9,32
80007040:	e0 49 00 20 	cp.w	r9,32
80007044:	c0 b2       	brcc	8000705a <__avr32_s32_to_f64+0x76>
80007046:	f4 08 09 4e 	lsl	lr,r10,r8
8000704a:	f6 08 09 48 	lsl	r8,r11,r8
8000704e:	f4 09 0a 4a 	lsr	r10,r10,r9
80007052:	f6 09 0a 4b 	lsr	r11,r11,r9
80007056:	10 4b       	or	r11,r8
80007058:	c0 88       	rjmp	80007068 <__avr32_s32_to_f64+0x84>
8000705a:	f6 08 09 4e 	lsl	lr,r11,r8
8000705e:	14 4e       	or	lr,r10
80007060:	16 9a       	mov	r10,r11
80007062:	30 0b       	mov	r11,0
80007064:	f4 09 0a 4a 	lsr	r10,r10,r9
80007068:	ed ba 00 00 	bld	r10,0x0
8000706c:	c0 92       	brcc	8000707e <__avr32_s32_to_f64+0x9a>
8000706e:	1c 7e       	tst	lr,lr
80007070:	c0 41       	brne	80007078 <__avr32_s32_to_f64+0x94>
80007072:	ed ba 00 01 	bld	r10,0x1
80007076:	c0 42       	brcc	8000707e <__avr32_s32_to_f64+0x9a>
80007078:	2f fa       	sub	r10,-1
8000707a:	f7 bb 02 ff 	subhs	r11,-1
8000707e:	5c fc       	rol	r12
80007080:	5d 0b       	ror	r11
80007082:	5d 0a       	ror	r10
80007084:	d8 02       	popm	pc
80007086:	e0 68 03 ff 	mov	r8,1023
8000708a:	ed ba 00 0b 	bld	r10,0xb
8000708e:	f7 b8 00 ff 	subeq	r8,-1
80007092:	10 0a       	add	r10,r8
80007094:	5c 0b       	acr	r11
80007096:	f7 b9 03 fe 	sublo	r9,-2
8000709a:	e0 49 07 ff 	cp.w	r9,2047
8000709e:	c0 55       	brlt	800070a8 <__avr32_s32_to_f64+0xc4>
800070a0:	30 0a       	mov	r10,0
800070a2:	fc 1b ff e0 	movh	r11,0xffe0
800070a6:	c0 c8       	rjmp	800070be <__floatsidf_return_op1>
800070a8:	ed bb 00 1f 	bld	r11,0x1f
800070ac:	f7 b9 01 01 	subne	r9,1
800070b0:	ab 9a       	lsr	r10,0xb
800070b2:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
800070b6:	a1 7b       	lsl	r11,0x1
800070b8:	ab 9b       	lsr	r11,0xb
800070ba:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

800070be <__floatsidf_return_op1>:
800070be:	a1 7c       	lsl	r12,0x1
800070c0:	5d 0b       	ror	r11
800070c2:	d8 02       	popm	pc

800070c4 <__avr32_f64_cmp_eq>:
800070c4:	10 3a       	cp.w	r10,r8
800070c6:	f2 0b 13 00 	cpc	r11,r9
800070ca:	c0 80       	breq	800070da <__avr32_f64_cmp_eq+0x16>
800070cc:	a1 7b       	lsl	r11,0x1
800070ce:	a1 79       	lsl	r9,0x1
800070d0:	14 4b       	or	r11,r10
800070d2:	12 4b       	or	r11,r9
800070d4:	10 4b       	or	r11,r8
800070d6:	5e 0f       	reteq	1
800070d8:	5e fd       	retal	0
800070da:	a1 7b       	lsl	r11,0x1
800070dc:	fc 1c ff e0 	movh	r12,0xffe0
800070e0:	58 0a       	cp.w	r10,0
800070e2:	f8 0b 13 00 	cpc	r11,r12
800070e6:	5e 8f       	retls	1
800070e8:	5e fd       	retal	0

800070ea <__avr32_f64_cmp_ge>:
800070ea:	1a de       	st.w	--sp,lr
800070ec:	1a d7       	st.w	--sp,r7
800070ee:	a1 7b       	lsl	r11,0x1
800070f0:	5f 3c       	srlo	r12
800070f2:	a1 79       	lsl	r9,0x1
800070f4:	5f 37       	srlo	r7
800070f6:	5c fc       	rol	r12
800070f8:	fc 1e ff e0 	movh	lr,0xffe0
800070fc:	58 0a       	cp.w	r10,0
800070fe:	fc 0b 13 00 	cpc	r11,lr
80007102:	e0 8b 00 1d 	brhi	8000713c <__avr32_f64_cmp_ge+0x52>
80007106:	58 08       	cp.w	r8,0
80007108:	fc 09 13 00 	cpc	r9,lr
8000710c:	e0 8b 00 18 	brhi	8000713c <__avr32_f64_cmp_ge+0x52>
80007110:	58 0b       	cp.w	r11,0
80007112:	f5 ba 00 00 	subfeq	r10,0
80007116:	c1 50       	breq	80007140 <__avr32_f64_cmp_ge+0x56>
80007118:	1b 07       	ld.w	r7,sp++
8000711a:	1b 0e       	ld.w	lr,sp++
8000711c:	58 3c       	cp.w	r12,3
8000711e:	c0 a0       	breq	80007132 <__avr32_f64_cmp_ge+0x48>
80007120:	58 1c       	cp.w	r12,1
80007122:	c0 33       	brcs	80007128 <__avr32_f64_cmp_ge+0x3e>
80007124:	5e 0f       	reteq	1
80007126:	5e 1d       	retne	0
80007128:	10 3a       	cp.w	r10,r8
8000712a:	f2 0b 13 00 	cpc	r11,r9
8000712e:	5e 2f       	reths	1
80007130:	5e 3d       	retlo	0
80007132:	14 38       	cp.w	r8,r10
80007134:	f6 09 13 00 	cpc	r9,r11
80007138:	5e 2f       	reths	1
8000713a:	5e 3d       	retlo	0
8000713c:	1b 07       	ld.w	r7,sp++
8000713e:	d8 0a       	popm	pc,r12=0
80007140:	58 17       	cp.w	r7,1
80007142:	5f 0c       	sreq	r12
80007144:	58 09       	cp.w	r9,0
80007146:	f5 b8 00 00 	subfeq	r8,0
8000714a:	1b 07       	ld.w	r7,sp++
8000714c:	1b 0e       	ld.w	lr,sp++
8000714e:	5e 0f       	reteq	1
80007150:	5e fc       	retal	r12

80007152 <__avr32_f64_cmp_lt>:
80007152:	1a de       	st.w	--sp,lr
80007154:	1a d7       	st.w	--sp,r7
80007156:	a1 7b       	lsl	r11,0x1
80007158:	5f 3c       	srlo	r12
8000715a:	a1 79       	lsl	r9,0x1
8000715c:	5f 37       	srlo	r7
8000715e:	5c fc       	rol	r12
80007160:	fc 1e ff e0 	movh	lr,0xffe0
80007164:	58 0a       	cp.w	r10,0
80007166:	fc 0b 13 00 	cpc	r11,lr
8000716a:	e0 8b 00 1d 	brhi	800071a4 <__avr32_f64_cmp_lt+0x52>
8000716e:	58 08       	cp.w	r8,0
80007170:	fc 09 13 00 	cpc	r9,lr
80007174:	e0 8b 00 18 	brhi	800071a4 <__avr32_f64_cmp_lt+0x52>
80007178:	58 0b       	cp.w	r11,0
8000717a:	f5 ba 00 00 	subfeq	r10,0
8000717e:	c1 50       	breq	800071a8 <__avr32_f64_cmp_lt+0x56>
80007180:	1b 07       	ld.w	r7,sp++
80007182:	1b 0e       	ld.w	lr,sp++
80007184:	58 3c       	cp.w	r12,3
80007186:	c0 a0       	breq	8000719a <__avr32_f64_cmp_lt+0x48>
80007188:	58 1c       	cp.w	r12,1
8000718a:	c0 33       	brcs	80007190 <__avr32_f64_cmp_lt+0x3e>
8000718c:	5e 0d       	reteq	0
8000718e:	5e 1f       	retne	1
80007190:	10 3a       	cp.w	r10,r8
80007192:	f2 0b 13 00 	cpc	r11,r9
80007196:	5e 2d       	reths	0
80007198:	5e 3f       	retlo	1
8000719a:	14 38       	cp.w	r8,r10
8000719c:	f6 09 13 00 	cpc	r9,r11
800071a0:	5e 2d       	reths	0
800071a2:	5e 3f       	retlo	1
800071a4:	1b 07       	ld.w	r7,sp++
800071a6:	d8 0a       	popm	pc,r12=0
800071a8:	58 17       	cp.w	r7,1
800071aa:	5f 1c       	srne	r12
800071ac:	58 09       	cp.w	r9,0
800071ae:	f5 b8 00 00 	subfeq	r8,0
800071b2:	1b 07       	ld.w	r7,sp++
800071b4:	1b 0e       	ld.w	lr,sp++
800071b6:	5e 0d       	reteq	0
800071b8:	5e fc       	retal	r12
800071ba:	d7 03       	nop

800071bc <__avr32_f64_div>:
800071bc:	eb cd 40 ff 	pushm	r0-r7,lr
800071c0:	f7 e9 20 0e 	eor	lr,r11,r9
800071c4:	f6 07 16 14 	lsr	r7,r11,0x14
800071c8:	a9 7b       	lsl	r11,0x9
800071ca:	f7 ea 13 7b 	or	r11,r11,r10>>0x17
800071ce:	a9 7a       	lsl	r10,0x9
800071d0:	bd bb       	sbr	r11,0x1d
800071d2:	e4 1b 3f ff 	andh	r11,0x3fff
800071d6:	ab d7       	cbr	r7,0xb
800071d8:	e0 80 00 cc 	breq	80007370 <__avr32_f64_div_round_subnormal+0x54>
800071dc:	e0 47 07 ff 	cp.w	r7,2047
800071e0:	e0 84 00 b5 	brge	8000734a <__avr32_f64_div_round_subnormal+0x2e>
800071e4:	f2 06 16 14 	lsr	r6,r9,0x14
800071e8:	a9 79       	lsl	r9,0x9
800071ea:	f3 e8 13 79 	or	r9,r9,r8>>0x17
800071ee:	a9 78       	lsl	r8,0x9
800071f0:	bd b9       	sbr	r9,0x1d
800071f2:	e4 19 3f ff 	andh	r9,0x3fff
800071f6:	ab d6       	cbr	r6,0xb
800071f8:	e0 80 00 e2 	breq	800073bc <__avr32_f64_div_round_subnormal+0xa0>
800071fc:	e0 46 07 ff 	cp.w	r6,2047
80007200:	e0 84 00 b2 	brge	80007364 <__avr32_f64_div_round_subnormal+0x48>
80007204:	0c 17       	sub	r7,r6
80007206:	fe 37 fc 01 	sub	r7,-1023
8000720a:	fc 1c 80 00 	movh	r12,0x8000
8000720e:	f8 03 16 01 	lsr	r3,r12,0x1
80007212:	e9 d9 c3 62 	bfextu	r4,r9,0x1b,0x2
80007216:	5c d4       	com	r4
80007218:	e7 d4 d3 82 	bfins	r3,r4,0x1c,0x2
8000721c:	e6 09 06 44 	mulu.d	r4,r3,r9
80007220:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80007224:	e6 05 06 44 	mulu.d	r4,r3,r5
80007228:	ea 03 15 02 	lsl	r3,r5,0x2
8000722c:	e6 09 06 44 	mulu.d	r4,r3,r9
80007230:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80007234:	e6 05 06 44 	mulu.d	r4,r3,r5
80007238:	ea 03 15 02 	lsl	r3,r5,0x2
8000723c:	e6 09 06 44 	mulu.d	r4,r3,r9
80007240:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80007244:	e6 05 06 44 	mulu.d	r4,r3,r5
80007248:	ea 03 15 02 	lsl	r3,r5,0x2
8000724c:	e6 08 06 40 	mulu.d	r0,r3,r8
80007250:	e4 09 07 40 	macu.d	r0,r2,r9
80007254:	e6 09 06 44 	mulu.d	r4,r3,r9
80007258:	02 04       	add	r4,r1
8000725a:	5c 05       	acr	r5
8000725c:	a3 65       	lsl	r5,0x2
8000725e:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80007262:	a3 64       	lsl	r4,0x2
80007264:	5c 34       	neg	r4
80007266:	f8 05 01 45 	sbc	r5,r12,r5
8000726a:	e6 04 06 40 	mulu.d	r0,r3,r4
8000726e:	e4 05 07 40 	macu.d	r0,r2,r5
80007272:	e6 05 06 44 	mulu.d	r4,r3,r5
80007276:	02 04       	add	r4,r1
80007278:	5c 05       	acr	r5
8000727a:	ea 03 15 02 	lsl	r3,r5,0x2
8000727e:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80007282:	e8 02 15 02 	lsl	r2,r4,0x2
80007286:	e6 08 06 40 	mulu.d	r0,r3,r8
8000728a:	e4 09 07 40 	macu.d	r0,r2,r9
8000728e:	e6 09 06 44 	mulu.d	r4,r3,r9
80007292:	02 04       	add	r4,r1
80007294:	5c 05       	acr	r5
80007296:	a3 65       	lsl	r5,0x2
80007298:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
8000729c:	a3 64       	lsl	r4,0x2
8000729e:	5c 34       	neg	r4
800072a0:	f8 05 01 45 	sbc	r5,r12,r5
800072a4:	e6 04 06 40 	mulu.d	r0,r3,r4
800072a8:	e4 05 07 40 	macu.d	r0,r2,r5
800072ac:	e6 05 06 44 	mulu.d	r4,r3,r5
800072b0:	02 04       	add	r4,r1
800072b2:	5c 05       	acr	r5
800072b4:	ea 03 15 02 	lsl	r3,r5,0x2
800072b8:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
800072bc:	e8 02 15 02 	lsl	r2,r4,0x2
800072c0:	e6 0a 06 40 	mulu.d	r0,r3,r10
800072c4:	e4 0b 07 40 	macu.d	r0,r2,r11
800072c8:	e6 0b 06 42 	mulu.d	r2,r3,r11
800072cc:	02 02       	add	r2,r1
800072ce:	5c 03       	acr	r3
800072d0:	ed b3 00 1c 	bld	r3,0x1c
800072d4:	c0 90       	breq	800072e6 <__avr32_f64_div+0x12a>
800072d6:	a1 72       	lsl	r2,0x1
800072d8:	5c f3       	rol	r3
800072da:	20 17       	sub	r7,1
800072dc:	a3 9a       	lsr	r10,0x3
800072de:	f5 eb 11 da 	or	r10,r10,r11<<0x1d
800072e2:	a3 9b       	lsr	r11,0x3
800072e4:	c0 58       	rjmp	800072ee <__avr32_f64_div+0x132>
800072e6:	a5 8a       	lsr	r10,0x4
800072e8:	f5 eb 11 ca 	or	r10,r10,r11<<0x1c
800072ec:	a5 8b       	lsr	r11,0x4
800072ee:	58 07       	cp.w	r7,0
800072f0:	e0 8a 00 8b 	brle	80007406 <__avr32_f64_div_res_subnormal>
800072f4:	e0 12 ff 00 	andl	r2,0xff00
800072f8:	e8 12 00 80 	orl	r2,0x80
800072fc:	e6 08 06 40 	mulu.d	r0,r3,r8
80007300:	e4 09 07 40 	macu.d	r0,r2,r9
80007304:	e4 08 06 44 	mulu.d	r4,r2,r8
80007308:	e6 09 06 48 	mulu.d	r8,r3,r9
8000730c:	00 05       	add	r5,r0
8000730e:	f0 01 00 48 	adc	r8,r8,r1
80007312:	5c 09       	acr	r9
80007314:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80007318:	58 04       	cp.w	r4,0
8000731a:	5c 25       	cpc	r5

8000731c <__avr32_f64_div_round_subnormal>:
8000731c:	f4 08 13 00 	cpc	r8,r10
80007320:	f6 09 13 00 	cpc	r9,r11
80007324:	5f 36       	srlo	r6
80007326:	f8 06 17 00 	moveq	r6,r12
8000732a:	e4 0a 16 08 	lsr	r10,r2,0x8
8000732e:	f5 e3 11 8a 	or	r10,r10,r3<<0x18
80007332:	e6 0b 16 08 	lsr	r11,r3,0x8
80007336:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
8000733a:	ed be 00 1f 	bld	lr,0x1f
8000733e:	ef bb 00 1f 	bst	r11,0x1f
80007342:	0c 0a       	add	r10,r6
80007344:	5c 0b       	acr	r11
80007346:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
8000734a:	e4 1b 00 0f 	andh	r11,0xf
8000734e:	14 4b       	or	r11,r10
80007350:	e0 81 00 a7 	brne	8000749e <__avr32_f64_div_res_subnormal+0x98>
80007354:	f2 06 16 14 	lsr	r6,r9,0x14
80007358:	ab d6       	cbr	r6,0xb
8000735a:	e0 46 07 ff 	cp.w	r6,2047
8000735e:	e0 81 00 a4 	brne	800074a6 <__avr32_f64_div_res_subnormal+0xa0>
80007362:	c9 e8       	rjmp	8000749e <__avr32_f64_div_res_subnormal+0x98>
80007364:	e4 19 00 0f 	andh	r9,0xf
80007368:	10 49       	or	r9,r8
8000736a:	e0 81 00 9a 	brne	8000749e <__avr32_f64_div_res_subnormal+0x98>
8000736e:	c9 28       	rjmp	80007492 <__avr32_f64_div_res_subnormal+0x8c>
80007370:	a3 7b       	lsl	r11,0x3
80007372:	f7 ea 13 db 	or	r11,r11,r10>>0x1d
80007376:	a3 7a       	lsl	r10,0x3
80007378:	f5 eb 10 04 	or	r4,r10,r11
8000737c:	e0 80 00 a0 	breq	800074bc <__avr32_f64_div_op1_zero>
80007380:	f6 04 12 00 	clz	r4,r11
80007384:	c1 70       	breq	800073b2 <__avr32_f64_div_round_subnormal+0x96>
80007386:	c0 c3       	brcs	8000739e <__avr32_f64_div_round_subnormal+0x82>
80007388:	e8 05 11 20 	rsub	r5,r4,32
8000738c:	f6 04 09 4b 	lsl	r11,r11,r4
80007390:	f4 05 0a 45 	lsr	r5,r10,r5
80007394:	0a 4b       	or	r11,r5
80007396:	f4 04 09 4a 	lsl	r10,r10,r4
8000739a:	08 17       	sub	r7,r4
8000739c:	c0 b8       	rjmp	800073b2 <__avr32_f64_div_round_subnormal+0x96>
8000739e:	f4 04 12 00 	clz	r4,r10
800073a2:	f9 b4 03 00 	movlo	r4,0
800073a6:	f7 b4 02 e0 	subhs	r4,-32
800073aa:	f4 04 09 4b 	lsl	r11,r10,r4
800073ae:	30 0a       	mov	r10,0
800073b0:	08 17       	sub	r7,r4
800073b2:	a3 8a       	lsr	r10,0x2
800073b4:	f5 eb 11 ea 	or	r10,r10,r11<<0x1e
800073b8:	a3 8b       	lsr	r11,0x2
800073ba:	c1 1b       	rjmp	800071dc <__avr32_f64_div+0x20>
800073bc:	a3 79       	lsl	r9,0x3
800073be:	f3 e8 13 d9 	or	r9,r9,r8>>0x1d
800073c2:	a3 78       	lsl	r8,0x3
800073c4:	f3 e8 10 04 	or	r4,r9,r8
800073c8:	c6 f0       	breq	800074a6 <__avr32_f64_div_res_subnormal+0xa0>
800073ca:	f2 04 12 00 	clz	r4,r9
800073ce:	c1 70       	breq	800073fc <__avr32_f64_div_round_subnormal+0xe0>
800073d0:	c0 c3       	brcs	800073e8 <__avr32_f64_div_round_subnormal+0xcc>
800073d2:	e8 05 11 20 	rsub	r5,r4,32
800073d6:	f2 04 09 49 	lsl	r9,r9,r4
800073da:	f0 05 0a 45 	lsr	r5,r8,r5
800073de:	0a 49       	or	r9,r5
800073e0:	f0 04 09 48 	lsl	r8,r8,r4
800073e4:	08 16       	sub	r6,r4
800073e6:	c0 b8       	rjmp	800073fc <__avr32_f64_div_round_subnormal+0xe0>
800073e8:	f0 04 12 00 	clz	r4,r8
800073ec:	f9 b4 03 00 	movlo	r4,0
800073f0:	f7 b4 02 e0 	subhs	r4,-32
800073f4:	f0 04 09 49 	lsl	r9,r8,r4
800073f8:	30 08       	mov	r8,0
800073fa:	08 16       	sub	r6,r4
800073fc:	a3 88       	lsr	r8,0x2
800073fe:	f1 e9 11 e8 	or	r8,r8,r9<<0x1e
80007402:	a3 89       	lsr	r9,0x2
80007404:	cf ca       	rjmp	800071fc <__avr32_f64_div+0x40>

80007406 <__avr32_f64_div_res_subnormal>:
80007406:	5c 37       	neg	r7
80007408:	2f f7       	sub	r7,-1
8000740a:	f1 b7 04 c0 	satu	r7,0x6
8000740e:	e0 47 00 20 	cp.w	r7,32
80007412:	c1 54       	brge	8000743c <__avr32_f64_div_res_subnormal+0x36>
80007414:	ee 06 11 20 	rsub	r6,r7,32
80007418:	e4 07 0a 42 	lsr	r2,r2,r7
8000741c:	e6 06 09 4c 	lsl	r12,r3,r6
80007420:	18 42       	or	r2,r12
80007422:	e6 07 0a 43 	lsr	r3,r3,r7
80007426:	f4 06 09 41 	lsl	r1,r10,r6
8000742a:	f4 07 0a 4a 	lsr	r10,r10,r7
8000742e:	f6 06 09 4c 	lsl	r12,r11,r6
80007432:	18 4a       	or	r10,r12
80007434:	f6 07 0a 4b 	lsr	r11,r11,r7
80007438:	30 00       	mov	r0,0
8000743a:	c1 58       	rjmp	80007464 <__avr32_f64_div_res_subnormal+0x5e>
8000743c:	ee 06 11 20 	rsub	r6,r7,32
80007440:	f9 b0 00 00 	moveq	r0,0
80007444:	f9 bc 00 00 	moveq	r12,0
80007448:	c0 50       	breq	80007452 <__avr32_f64_div_res_subnormal+0x4c>
8000744a:	f4 06 09 40 	lsl	r0,r10,r6
8000744e:	f6 06 09 4c 	lsl	r12,r11,r6
80007452:	e6 07 0a 42 	lsr	r2,r3,r7
80007456:	30 03       	mov	r3,0
80007458:	f4 07 0a 41 	lsr	r1,r10,r7
8000745c:	18 41       	or	r1,r12
8000745e:	f6 07 0a 4a 	lsr	r10,r11,r7
80007462:	30 0b       	mov	r11,0
80007464:	e0 12 ff 00 	andl	r2,0xff00
80007468:	e8 12 00 80 	orl	r2,0x80
8000746c:	e6 08 06 46 	mulu.d	r6,r3,r8
80007470:	e4 09 07 46 	macu.d	r6,r2,r9
80007474:	e4 08 06 44 	mulu.d	r4,r2,r8
80007478:	e6 09 06 48 	mulu.d	r8,r3,r9
8000747c:	0c 05       	add	r5,r6
8000747e:	f0 07 00 48 	adc	r8,r8,r7
80007482:	5c 09       	acr	r9
80007484:	30 07       	mov	r7,0
80007486:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
8000748a:	00 34       	cp.w	r4,r0
8000748c:	e2 05 13 00 	cpc	r5,r1
80007490:	c4 6b       	rjmp	8000731c <__avr32_f64_div_round_subnormal>
80007492:	1c 9b       	mov	r11,lr
80007494:	e6 1b 80 00 	andh	r11,0x8000,COH
80007498:	30 0a       	mov	r10,0
8000749a:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
8000749e:	3f fb       	mov	r11,-1
800074a0:	30 0a       	mov	r10,0
800074a2:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
800074a6:	f5 eb 10 04 	or	r4,r10,r11
800074aa:	c0 90       	breq	800074bc <__avr32_f64_div_op1_zero>
800074ac:	1c 9b       	mov	r11,lr
800074ae:	e6 1b 80 00 	andh	r11,0x8000,COH
800074b2:	ea 1b 7f f0 	orh	r11,0x7ff0
800074b6:	30 0a       	mov	r10,0
800074b8:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc

800074bc <__avr32_f64_div_op1_zero>:
800074bc:	f1 e9 10 15 	or	r5,r8,r9<<0x1
800074c0:	ce f0       	breq	8000749e <__avr32_f64_div_res_subnormal+0x98>
800074c2:	e9 d9 c2 8b 	bfextu	r4,r9,0x14,0xb
800074c6:	e0 44 07 ff 	cp.w	r4,2047
800074ca:	ce 41       	brne	80007492 <__avr32_f64_div_res_subnormal+0x8c>
800074cc:	f1 e9 10 c5 	or	r5,r8,r9<<0xc
800074d0:	ce 10       	breq	80007492 <__avr32_f64_div_res_subnormal+0x8c>
800074d2:	ce 6b       	rjmp	8000749e <__avr32_f64_div_res_subnormal+0x98>

800074d4 <__avr32_f32_div>:
800074d4:	f7 ec 20 08 	eor	r8,r11,r12
800074d8:	a1 7c       	lsl	r12,0x1
800074da:	a1 7b       	lsl	r11,0x1
800074dc:	c7 a0       	breq	800075d0 <__divsf_return_op1+0x16>
800074de:	18 7c       	tst	r12,r12
800074e0:	f9 b9 00 00 	moveq	r9,0
800074e4:	c0 90       	breq	800074f6 <__avr32_f32_div+0x22>
800074e6:	f8 09 16 18 	lsr	r9,r12,0x18
800074ea:	c7 e0       	breq	800075e6 <__divsf_return_op1+0x2c>
800074ec:	e0 49 00 ff 	cp.w	r9,255
800074f0:	c6 82       	brcc	800075c0 <__divsf_return_op1+0x6>
800074f2:	a7 7c       	lsl	r12,0x7
800074f4:	bf bc       	sbr	r12,0x1f
800074f6:	f6 0a 16 18 	lsr	r10,r11,0x18
800074fa:	c7 e0       	breq	800075f6 <__divsf_return_op1+0x3c>
800074fc:	e0 4a 00 ff 	cp.w	r10,255
80007500:	c6 62       	brcc	800075cc <__divsf_return_op1+0x12>
80007502:	a7 7b       	lsl	r11,0x7
80007504:	bf bb       	sbr	r11,0x1f
80007506:	58 09       	cp.w	r9,0
80007508:	f5 bc 00 00 	subfeq	r12,0
8000750c:	5e 0d       	reteq	0
8000750e:	1a d5       	st.w	--sp,r5
80007510:	bb 27       	st.d	--sp,r6
80007512:	14 19       	sub	r9,r10
80007514:	28 19       	sub	r9,-127
80007516:	fc 1a 80 00 	movh	r10,0x8000
8000751a:	a3 8c       	lsr	r12,0x2
8000751c:	f6 05 16 02 	lsr	r5,r11,0x2
80007520:	f4 0b 16 01 	lsr	r11,r10,0x1
80007524:	ed d5 c3 62 	bfextu	r6,r5,0x1b,0x2
80007528:	5c d6       	com	r6
8000752a:	f7 d6 d3 82 	bfins	r11,r6,0x1c,0x2
8000752e:	f6 05 06 46 	mulu.d	r6,r11,r5
80007532:	f4 07 01 27 	sub	r7,r10,r7<<0x2
80007536:	f6 07 06 46 	mulu.d	r6,r11,r7
8000753a:	ee 0b 15 02 	lsl	r11,r7,0x2
8000753e:	f6 05 06 46 	mulu.d	r6,r11,r5
80007542:	f4 07 01 27 	sub	r7,r10,r7<<0x2
80007546:	f6 07 06 46 	mulu.d	r6,r11,r7
8000754a:	ee 0b 15 02 	lsl	r11,r7,0x2
8000754e:	f6 05 06 46 	mulu.d	r6,r11,r5
80007552:	f4 07 01 27 	sub	r7,r10,r7<<0x2
80007556:	f6 07 06 46 	mulu.d	r6,r11,r7
8000755a:	ee 0b 15 02 	lsl	r11,r7,0x2
8000755e:	f6 05 06 46 	mulu.d	r6,r11,r5
80007562:	f4 07 01 27 	sub	r7,r10,r7<<0x2
80007566:	f6 07 06 46 	mulu.d	r6,r11,r7
8000756a:	ee 0b 15 02 	lsl	r11,r7,0x2
8000756e:	f6 0c 06 46 	mulu.d	r6,r11,r12
80007572:	a5 8c       	lsr	r12,0x4
80007574:	ed b7 00 1c 	bld	r7,0x1c
80007578:	c0 40       	breq	80007580 <__avr32_f32_div+0xac>
8000757a:	a1 77       	lsl	r7,0x1
8000757c:	20 19       	sub	r9,1
8000757e:	a1 7c       	lsl	r12,0x1
80007580:	58 09       	cp.w	r9,0
80007582:	e0 8a 00 42 	brle	80007606 <__avr32_f32_div_res_subnormal>
80007586:	e0 17 ff e0 	andl	r7,0xffe0
8000758a:	e8 17 00 10 	orl	r7,0x10
8000758e:	ea 07 06 4a 	mulu.d	r10,r5,r7
80007592:	eb d7 c0 a1 	bfextu	r5,r7,0x5,0x1
80007596:	58 0a       	cp.w	r10,0

80007598 <__avr32_f32_div_round_subnormal>:
80007598:	f8 0b 13 00 	cpc	r11,r12
8000759c:	5f 3b       	srlo	r11
8000759e:	ea 0b 17 00 	moveq	r11,r5
800075a2:	ee 0c 16 05 	lsr	r12,r7,0x5
800075a6:	f9 d9 d2 e8 	bfins	r12,r9,0x17,0x8
800075aa:	bb 07       	ld.d	r6,sp++
800075ac:	1b 05       	ld.w	r5,sp++
800075ae:	ed b8 00 1f 	bld	r8,0x1f
800075b2:	ef bc 00 1f 	bst	r12,0x1f
800075b6:	16 0c       	add	r12,r11
800075b8:	5e fc       	retal	r12

800075ba <__divsf_return_op1>:
800075ba:	a1 78       	lsl	r8,0x1
800075bc:	5d 0c       	ror	r12
800075be:	5e fc       	retal	r12
800075c0:	5e 1e       	retne	-1
800075c2:	fc 19 ff 00 	movh	r9,0xff00
800075c6:	12 3b       	cp.w	r11,r9
800075c8:	cf 93       	brcs	800075ba <__divsf_return_op1>
800075ca:	5e fe       	retal	-1
800075cc:	5e 0d       	reteq	0
800075ce:	5e fe       	retal	-1
800075d0:	18 7c       	tst	r12,r12
800075d2:	5e 0e       	reteq	-1
800075d4:	f8 09 16 18 	lsr	r9,r12,0x18
800075d8:	c0 70       	breq	800075e6 <__divsf_return_op1+0x2c>
800075da:	e0 49 00 ff 	cp.w	r9,255
800075de:	cf 12       	brcc	800075c0 <__divsf_return_op1+0x6>
800075e0:	fc 1c ff 00 	movh	r12,0xff00
800075e4:	ce bb       	rjmp	800075ba <__divsf_return_op1>
800075e6:	a7 7c       	lsl	r12,0x7
800075e8:	f8 09 12 00 	clz	r9,r12
800075ec:	f8 09 09 4c 	lsl	r12,r12,r9
800075f0:	f2 09 11 01 	rsub	r9,r9,1
800075f4:	c8 1b       	rjmp	800074f6 <__avr32_f32_div+0x22>
800075f6:	a7 7b       	lsl	r11,0x7
800075f8:	f6 0a 12 00 	clz	r10,r11
800075fc:	f6 0a 09 4b 	lsl	r11,r11,r10
80007600:	f4 0a 11 01 	rsub	r10,r10,1
80007604:	c8 5b       	rjmp	8000750e <__avr32_f32_div+0x3a>

80007606 <__avr32_f32_div_res_subnormal>:
80007606:	5c 39       	neg	r9
80007608:	2f f9       	sub	r9,-1
8000760a:	f1 b9 04 a0 	satu	r9,0x5
8000760e:	f2 0a 11 20 	rsub	r10,r9,32
80007612:	ee 09 0a 47 	lsr	r7,r7,r9
80007616:	f8 0a 09 46 	lsl	r6,r12,r10
8000761a:	f8 09 0a 4c 	lsr	r12,r12,r9
8000761e:	e0 17 ff e0 	andl	r7,0xffe0
80007622:	e8 17 00 10 	orl	r7,0x10
80007626:	ea 07 06 4a 	mulu.d	r10,r5,r7
8000762a:	30 09       	mov	r9,0
8000762c:	eb d7 c0 a1 	bfextu	r5,r7,0x5,0x1
80007630:	0c 3a       	cp.w	r10,r6
80007632:	cb 3b       	rjmp	80007598 <__avr32_f32_div_round_subnormal>

80007634 <__avr32_f32_sub_from_add>:
80007634:	ee 1b 80 00 	eorh	r11,0x8000

80007638 <__avr32_f32_sub>:
80007638:	f7 ec 20 08 	eor	r8,r11,r12
8000763c:	c6 46       	brmi	80007704 <__avr32_f32_add_from_sub>
8000763e:	18 98       	mov	r8,r12
80007640:	e6 1c 80 00 	andh	r12,0x8000,COH
80007644:	bf db       	cbr	r11,0x1f
80007646:	bf d8       	cbr	r8,0x1f
80007648:	f0 0b 0c 4a 	max	r10,r8,r11
8000764c:	f0 0b 0d 49 	min	r9,r8,r11
80007650:	10 3a       	cp.w	r10,r8
80007652:	f7 bc 01 01 	subne	r12,1
80007656:	e6 1c 80 00 	andh	r12,0x8000,COH
8000765a:	f4 08 15 08 	lsl	r8,r10,0x8
8000765e:	bf b8       	sbr	r8,0x1f
80007660:	b7 9a       	lsr	r10,0x17
80007662:	e0 4a 00 ff 	cp.w	r10,255
80007666:	c3 80       	breq	800076d6 <__avr32_f32_sub_op1_nan_or_inf>
80007668:	f2 0b 15 08 	lsl	r11,r9,0x8
8000766c:	bf bb       	sbr	r11,0x1f
8000766e:	b7 99       	lsr	r9,0x17
80007670:	1a dc       	st.w	--sp,r12
80007672:	c2 90       	breq	800076c4 <__avr32_f32_sub_op2_subnormal>
80007674:	f4 09 01 0c 	sub	r12,r10,r9
80007678:	c0 c0       	breq	80007690 <__avr32_f32_sub_shift_done>
8000767a:	f1 bc 04 a0 	satu	r12,0x5
8000767e:	f8 09 11 20 	rsub	r9,r12,32
80007682:	f6 09 09 49 	lsl	r9,r11,r9
80007686:	f7 b8 01 01 	subne	r8,1
8000768a:	5f 19       	srne	r9
8000768c:	f6 0c 0a 4b 	lsr	r11,r11,r12

80007690 <__avr32_f32_sub_shift_done>:
80007690:	16 18       	sub	r8,r11
80007692:	1b 0c       	ld.w	r12,sp++
80007694:	f0 0b 12 00 	clz	r11,r8
80007698:	5e 3d       	retlo	0
8000769a:	f0 0b 09 48 	lsl	r8,r8,r11
8000769e:	16 1a       	sub	r10,r11
800076a0:	e0 8a 00 26 	brle	800076ec <__avr32_f32_sub_subnormal_result>
800076a4:	f3 e8 11 89 	or	r9,r9,r8<<0x18
800076a8:	f9 e8 12 8c 	or	r12,r12,r8>>0x8
800076ac:	f9 da d2 e8 	bfins	r12,r10,0x17,0x8

800076b0 <__avr32_f32_sub_round>:
800076b0:	fc 1a 80 00 	movh	r10,0x8000
800076b4:	ed bc 00 00 	bld	r12,0x0
800076b8:	f7 ba 01 ff 	subne	r10,-1
800076bc:	14 39       	cp.w	r9,r10
800076be:	f7 bc 02 ff 	subhs	r12,-1
800076c2:	5e fc       	retal	r12

800076c4 <__avr32_f32_sub_op2_subnormal>:
800076c4:	bf db       	cbr	r11,0x1f
800076c6:	f9 b9 01 01 	movne	r9,1
800076ca:	58 0a       	cp.w	r10,0
800076cc:	cd 41       	brne	80007674 <__avr32_f32_sub+0x3c>
800076ce:	bf d8       	cbr	r8,0x1f
800076d0:	f9 ba 01 01 	movne	r10,1
800076d4:	cd 0b       	rjmp	80007674 <__avr32_f32_sub+0x3c>

800076d6 <__avr32_f32_sub_op1_nan_or_inf>:
800076d6:	f0 0b 15 01 	lsl	r11,r8,0x1
800076da:	5e 1e       	retne	-1
800076dc:	f9 da d2 e8 	bfins	r12,r10,0x17,0x8
800076e0:	f2 0b 16 17 	lsr	r11,r9,0x17
800076e4:	e0 4b 00 ff 	cp.w	r11,255
800076e8:	5e 1c       	retne	r12
800076ea:	5e fe       	retal	-1

800076ec <__avr32_f32_sub_subnormal_result>:
800076ec:	f4 0a 11 09 	rsub	r10,r10,9
800076f0:	f4 0b 11 20 	rsub	r11,r10,32
800076f4:	5e 3d       	retlo	0
800076f6:	f0 0a 0a 4a 	lsr	r10,r8,r10
800076fa:	14 4c       	or	r12,r10
800076fc:	f0 0b 09 48 	lsl	r8,r8,r11
80007700:	10 49       	or	r9,r8
80007702:	cd 7b       	rjmp	800076b0 <__avr32_f32_sub_round>

80007704 <__avr32_f32_add_from_sub>:
80007704:	ee 1b 80 00 	eorh	r11,0x8000

80007708 <__avr32_f32_add>:
80007708:	f7 ec 20 08 	eor	r8,r11,r12
8000770c:	c9 46       	brmi	80007634 <__avr32_f32_sub_from_add>
8000770e:	18 98       	mov	r8,r12
80007710:	e6 1c 80 00 	andh	r12,0x8000,COH
80007714:	bf db       	cbr	r11,0x1f
80007716:	bf d8       	cbr	r8,0x1f
80007718:	f0 0b 0c 4a 	max	r10,r8,r11
8000771c:	f0 0b 0d 49 	min	r9,r8,r11
80007720:	f4 08 15 08 	lsl	r8,r10,0x8
80007724:	bf b8       	sbr	r8,0x1f
80007726:	b7 9a       	lsr	r10,0x17
80007728:	e0 4a 00 ff 	cp.w	r10,255
8000772c:	c2 d0       	breq	80007786 <__avr32_f32_add_op1_nan_or_inf>
8000772e:	f2 0b 15 08 	lsl	r11,r9,0x8
80007732:	bf bb       	sbr	r11,0x1f
80007734:	b7 99       	lsr	r9,0x17
80007736:	c1 e0       	breq	80007772 <__avr32_f32_add_op2_subnormal>
80007738:	1a dc       	st.w	--sp,r12
8000773a:	14 29       	rsub	r9,r10
8000773c:	f1 b9 04 a0 	satu	r9,0x5
80007740:	f6 09 0a 4c 	lsr	r12,r11,r9
80007744:	f2 09 11 18 	rsub	r9,r9,24
80007748:	f6 09 09 4b 	lsl	r11,r11,r9
8000774c:	f7 dc d3 08 	bfins	r11,r12,0x18,0x8
80007750:	18 08       	add	r8,r12
80007752:	1b 0c       	ld.w	r12,sp++
80007754:	c2 63       	brcs	800077a0 <__avr32_f32_add_res_of>
80007756:	f9 e8 12 8c 	or	r12,r12,r8>>0x8
8000775a:	f9 da d2 e8 	bfins	r12,r10,0x17,0x8
8000775e:	fc 1a 80 00 	movh	r10,0x8000
80007762:	ed bc 00 00 	bld	r12,0x0
80007766:	f7 ba 01 ff 	subne	r10,-1
8000776a:	14 3b       	cp.w	r11,r10
8000776c:	f7 bc 02 ff 	subhs	r12,-1
80007770:	5e fc       	retal	r12

80007772 <__avr32_f32_add_op2_subnormal>:
80007772:	bf db       	cbr	r11,0x1f
80007774:	f9 b9 01 01 	movne	r9,1
80007778:	58 0a       	cp.w	r10,0
8000777a:	cd f1       	brne	80007738 <__avr32_f32_add+0x30>
8000777c:	bf d8       	cbr	r8,0x1f
8000777e:	10 0b       	add	r11,r8
80007780:	f9 eb 12 8c 	or	r12,r12,r11>>0x8
80007784:	5e fc       	retal	r12

80007786 <__avr32_f32_add_op1_nan_or_inf>:
80007786:	f0 0b 15 01 	lsl	r11,r8,0x1
8000778a:	5e 1e       	retne	-1
8000778c:	f9 da d2 e8 	bfins	r12,r10,0x17,0x8
80007790:	f2 0b 16 17 	lsr	r11,r9,0x17
80007794:	e0 4b 00 ff 	cp.w	r11,255
80007798:	5e 1c       	retne	r12
8000779a:	a9 79       	lsl	r9,0x9
8000779c:	5e 0c       	reteq	r12
8000779e:	5e fe       	retal	-1

800077a0 <__avr32_f32_add_res_of>:
800077a0:	a1 98       	lsr	r8,0x1
800077a2:	2f fa       	sub	r10,-1
800077a4:	e0 4a 00 ff 	cp.w	r10,255
800077a8:	f9 b8 00 00 	moveq	r8,0
800077ac:	f9 bb 00 00 	moveq	r11,0
800077b0:	cd 3b       	rjmp	80007756 <__avr32_f32_add+0x4e>
800077b2:	d7 03       	nop

800077b4 <__avr32_f32_to_f64>:
800077b4:	f8 0b 15 01 	lsl	r11,r12,0x1
800077b8:	f9 ba 00 00 	moveq	r10,0
800077bc:	5e 0b       	reteq	r11
800077be:	f3 db c3 08 	bfextu	r9,r11,0x18,0x8
800077c2:	e0 49 00 ff 	cp.w	r9,255
800077c6:	c1 e0       	breq	80007802 <__extendsfdf_return_op1+0x6>
800077c8:	a7 7b       	lsl	r11,0x7
800077ca:	30 0a       	mov	r10,0
800077cc:	58 09       	cp.w	r9,0
800077ce:	f7 b9 00 ff 	subeq	r9,-1
800077d2:	5f 18       	srne	r8
800077d4:	f7 e8 11 fb 	or	r11,r11,r8<<0x1f
800077d8:	fe 39 fc 80 	sub	r9,-896
800077dc:	f6 08 12 00 	clz	r8,r11
800077e0:	10 19       	sub	r9,r8
800077e2:	f6 08 09 4b 	lsl	r11,r11,r8
800077e6:	ed bb 00 1f 	bld	r11,0x1f
800077ea:	f7 b9 01 01 	subne	r9,1
800077ee:	ab 9a       	lsr	r10,0xb
800077f0:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
800077f4:	a1 7b       	lsl	r11,0x1
800077f6:	ab 9b       	lsr	r11,0xb
800077f8:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

800077fc <__extendsfdf_return_op1>:
800077fc:	a1 7c       	lsl	r12,0x1
800077fe:	5d 0b       	ror	r11
80007800:	5e fb       	retal	r11
80007802:	fc 1a ff e0 	movh	r10,0xffe0
80007806:	a9 6b       	lsl	r11,0x8
80007808:	f9 bb 01 ff 	movne	r11,-1
8000780c:	f4 0b 17 00 	moveq	r11,r10
80007810:	30 0a       	mov	r10,0
80007812:	cf 5b       	rjmp	800077fc <__extendsfdf_return_op1>

80007814 <__avr32_f64_to_f32>:
80007814:	f6 09 15 01 	lsl	r9,r11,0x1
80007818:	b5 99       	lsr	r9,0x15
8000781a:	5e 0d       	reteq	0
8000781c:	f6 08 15 0a 	lsl	r8,r11,0xa
80007820:	f1 ea 13 6c 	or	r12,r8,r10>>0x16
80007824:	ab 6a       	lsl	r10,0xa
80007826:	5c 3a       	neg	r10
80007828:	5c fc       	rol	r12
8000782a:	e0 49 07 ff 	cp.w	r9,2047
8000782e:	c1 a0       	breq	80007862 <__truncdfsf_return_op1+0x6>
80007830:	e0 29 03 80 	sub	r9,896
80007834:	bf bc       	sbr	r12,0x1f
80007836:	58 09       	cp.w	r9,0
80007838:	e0 8a 00 1a 	brle	8000786c <__truncdfsf_return_op1+0x10>
8000783c:	37 fa       	mov	r10,127
8000783e:	ed bc 00 08 	bld	r12,0x8
80007842:	f7 ba 00 ff 	subeq	r10,-1
80007846:	14 0c       	add	r12,r10
80007848:	f7 b9 03 fe 	sublo	r9,-2
8000784c:	ed bc 00 1f 	bld	r12,0x1f
80007850:	f7 b9 01 01 	subne	r9,1
80007854:	f8 0c 16 07 	lsr	r12,r12,0x7
80007858:	f9 d9 d3 08 	bfins	r12,r9,0x18,0x8

8000785c <__truncdfsf_return_op1>:
8000785c:	a1 7b       	lsl	r11,0x1
8000785e:	5d 0c       	ror	r12
80007860:	5e fc       	retal	r12
80007862:	bf dc       	cbr	r12,0x1f
80007864:	5e 1e       	retne	-1
80007866:	fc 1c 7f 80 	movh	r12,0x7f80
8000786a:	5e fc       	retal	r12
8000786c:	f2 09 11 01 	rsub	r9,r9,1
80007870:	59 99       	cp.w	r9,25
80007872:	f9 bc 02 00 	movhs	r12,0
80007876:	c1 32       	brcc	8000789c <__truncdfsf_return_op1+0x40>
80007878:	f2 0a 11 20 	rsub	r10,r9,32
8000787c:	f8 0a 09 4a 	lsl	r10,r12,r10
80007880:	5f 1a       	srne	r10
80007882:	f8 09 0a 4c 	lsr	r12,r12,r9
80007886:	14 4c       	or	r12,r10
80007888:	37 fa       	mov	r10,127
8000788a:	ed bc 00 08 	bld	r12,0x8
8000788e:	f7 ba 00 ff 	subeq	r10,-1
80007892:	14 0c       	add	r12,r10
80007894:	f8 0c 16 07 	lsr	r12,r12,0x7
80007898:	a1 7b       	lsl	r11,0x1
8000789a:	5d 0c       	ror	r12
8000789c:	5e fc       	retal	r12
8000789e:	d7 03       	nop

800078a0 <atexit>:
800078a0:	d4 01       	pushm	lr
800078a2:	30 09       	mov	r9,0
800078a4:	18 9b       	mov	r11,r12
800078a6:	12 9a       	mov	r10,r9
800078a8:	12 9c       	mov	r12,r9
800078aa:	e0 a0 09 bb 	rcall	80008c20 <__register_exitproc>
800078ae:	d8 02       	popm	pc

800078b0 <atof>:
800078b0:	d4 01       	pushm	lr
800078b2:	30 0b       	mov	r11,0
800078b4:	e0 a0 09 68 	rcall	80008b84 <strtod>
800078b8:	d8 02       	popm	pc
800078ba:	d7 03       	nop

800078bc <__errno>:
800078bc:	e0 68 05 78 	mov	r8,1400
800078c0:	70 0c       	ld.w	r12,r8[0x0]
800078c2:	2f 4c       	sub	r12,-12
800078c4:	5e fc       	retal	r12
800078c6:	d7 03       	nop

800078c8 <exit>:
800078c8:	d4 21       	pushm	r4-r7,lr
800078ca:	30 0b       	mov	r11,0
800078cc:	18 97       	mov	r7,r12
800078ce:	e0 a0 09 fb 	rcall	80008cc4 <__call_exitprocs>
800078d2:	fe c8 d2 b6 	sub	r8,pc,-11594
800078d6:	70 0c       	ld.w	r12,r8[0x0]
800078d8:	78 a8       	ld.w	r8,r12[0x28]
800078da:	58 08       	cp.w	r8,0
800078dc:	c0 20       	breq	800078e0 <exit+0x18>
800078de:	5d 18       	icall	r8
800078e0:	0e 9c       	mov	r12,r7
800078e2:	e0 a0 09 60 	rcall	80008ba2 <_exit>
800078e6:	d7 03       	nop

800078e8 <free>:
800078e8:	d4 01       	pushm	lr
800078ea:	e0 68 05 78 	mov	r8,1400
800078ee:	18 9b       	mov	r11,r12
800078f0:	70 0c       	ld.w	r12,r8[0x0]
800078f2:	e0 a0 0a 9b 	rcall	80008e28 <_free_r>
800078f6:	d8 02       	popm	pc

800078f8 <malloc>:
800078f8:	d4 01       	pushm	lr
800078fa:	e0 68 05 78 	mov	r8,1400
800078fe:	18 9b       	mov	r11,r12
80007900:	70 0c       	ld.w	r12,r8[0x0]
80007902:	c0 3c       	rcall	80007908 <_malloc_r>
80007904:	d8 02       	popm	pc
80007906:	d7 03       	nop

80007908 <_malloc_r>:
80007908:	d4 31       	pushm	r0-r7,lr
8000790a:	f6 c8 ff f5 	sub	r8,r11,-11
8000790e:	18 95       	mov	r5,r12
80007910:	10 97       	mov	r7,r8
80007912:	e0 17 ff f8 	andl	r7,0xfff8
80007916:	59 68       	cp.w	r8,22
80007918:	f9 b7 08 10 	movls	r7,16
8000791c:	16 37       	cp.w	r7,r11
8000791e:	5f 38       	srlo	r8
80007920:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
80007924:	c0 50       	breq	8000792e <_malloc_r+0x26>
80007926:	30 c8       	mov	r8,12
80007928:	99 38       	st.w	r12[0xc],r8
8000792a:	e0 8f 01 f8 	bral	80007d1a <_malloc_r+0x412>
8000792e:	fe b0 ed 35 	rcall	80005398 <__malloc_lock>
80007932:	e0 47 01 f7 	cp.w	r7,503
80007936:	e0 8b 00 1d 	brhi	80007970 <_malloc_r+0x68>
8000793a:	ee 03 16 03 	lsr	r3,r7,0x3
8000793e:	e0 68 05 7c 	mov	r8,1404
80007942:	f0 03 00 38 	add	r8,r8,r3<<0x3
80007946:	70 36       	ld.w	r6,r8[0xc]
80007948:	10 36       	cp.w	r6,r8
8000794a:	c0 61       	brne	80007956 <_malloc_r+0x4e>
8000794c:	ec c8 ff f8 	sub	r8,r6,-8
80007950:	70 36       	ld.w	r6,r8[0xc]
80007952:	10 36       	cp.w	r6,r8
80007954:	c0 c0       	breq	8000796c <_malloc_r+0x64>
80007956:	6c 18       	ld.w	r8,r6[0x4]
80007958:	e0 18 ff fc 	andl	r8,0xfffc
8000795c:	6c 3a       	ld.w	r10,r6[0xc]
8000795e:	ec 08 00 09 	add	r9,r6,r8
80007962:	0a 9c       	mov	r12,r5
80007964:	6c 28       	ld.w	r8,r6[0x8]
80007966:	95 28       	st.w	r10[0x8],r8
80007968:	91 3a       	st.w	r8[0xc],r10
8000796a:	c4 78       	rjmp	800079f8 <_malloc_r+0xf0>
8000796c:	2f e3       	sub	r3,-2
8000796e:	c4 d8       	rjmp	80007a08 <_malloc_r+0x100>
80007970:	ee 03 16 09 	lsr	r3,r7,0x9
80007974:	c0 41       	brne	8000797c <_malloc_r+0x74>
80007976:	ee 03 16 03 	lsr	r3,r7,0x3
8000797a:	c2 68       	rjmp	800079c6 <_malloc_r+0xbe>
8000797c:	58 43       	cp.w	r3,4
8000797e:	e0 8b 00 06 	brhi	8000798a <_malloc_r+0x82>
80007982:	ee 03 16 06 	lsr	r3,r7,0x6
80007986:	2c 83       	sub	r3,-56
80007988:	c1 f8       	rjmp	800079c6 <_malloc_r+0xbe>
8000798a:	59 43       	cp.w	r3,20
8000798c:	e0 8b 00 04 	brhi	80007994 <_malloc_r+0x8c>
80007990:	2a 53       	sub	r3,-91
80007992:	c1 a8       	rjmp	800079c6 <_malloc_r+0xbe>
80007994:	e0 43 00 54 	cp.w	r3,84
80007998:	e0 8b 00 06 	brhi	800079a4 <_malloc_r+0x9c>
8000799c:	ee 03 16 0c 	lsr	r3,r7,0xc
800079a0:	29 23       	sub	r3,-110
800079a2:	c1 28       	rjmp	800079c6 <_malloc_r+0xbe>
800079a4:	e0 43 01 54 	cp.w	r3,340
800079a8:	e0 8b 00 06 	brhi	800079b4 <_malloc_r+0xac>
800079ac:	ee 03 16 0f 	lsr	r3,r7,0xf
800079b0:	28 93       	sub	r3,-119
800079b2:	c0 a8       	rjmp	800079c6 <_malloc_r+0xbe>
800079b4:	e0 43 05 54 	cp.w	r3,1364
800079b8:	e0 88 00 04 	brls	800079c0 <_malloc_r+0xb8>
800079bc:	37 e3       	mov	r3,126
800079be:	c0 48       	rjmp	800079c6 <_malloc_r+0xbe>
800079c0:	ee 03 16 12 	lsr	r3,r7,0x12
800079c4:	28 43       	sub	r3,-124
800079c6:	e0 6a 05 7c 	mov	r10,1404
800079ca:	f4 03 00 3a 	add	r10,r10,r3<<0x3
800079ce:	74 36       	ld.w	r6,r10[0xc]
800079d0:	c1 98       	rjmp	80007a02 <_malloc_r+0xfa>
800079d2:	6c 19       	ld.w	r9,r6[0x4]
800079d4:	e0 19 ff fc 	andl	r9,0xfffc
800079d8:	f2 07 01 0b 	sub	r11,r9,r7
800079dc:	58 fb       	cp.w	r11,15
800079de:	e0 8a 00 04 	brle	800079e6 <_malloc_r+0xde>
800079e2:	20 13       	sub	r3,1
800079e4:	c1 18       	rjmp	80007a06 <_malloc_r+0xfe>
800079e6:	6c 38       	ld.w	r8,r6[0xc]
800079e8:	58 0b       	cp.w	r11,0
800079ea:	c0 b5       	brlt	80007a00 <_malloc_r+0xf8>
800079ec:	6c 2a       	ld.w	r10,r6[0x8]
800079ee:	ec 09 00 09 	add	r9,r6,r9
800079f2:	0a 9c       	mov	r12,r5
800079f4:	91 2a       	st.w	r8[0x8],r10
800079f6:	95 38       	st.w	r10[0xc],r8
800079f8:	72 18       	ld.w	r8,r9[0x4]
800079fa:	a1 a8       	sbr	r8,0x0
800079fc:	93 18       	st.w	r9[0x4],r8
800079fe:	cb c8       	rjmp	80007b76 <_malloc_r+0x26e>
80007a00:	10 96       	mov	r6,r8
80007a02:	14 36       	cp.w	r6,r10
80007a04:	ce 71       	brne	800079d2 <_malloc_r+0xca>
80007a06:	2f f3       	sub	r3,-1
80007a08:	e0 6a 05 7c 	mov	r10,1404
80007a0c:	f4 cc ff f8 	sub	r12,r10,-8
80007a10:	78 26       	ld.w	r6,r12[0x8]
80007a12:	18 36       	cp.w	r6,r12
80007a14:	c6 c0       	breq	80007aec <_malloc_r+0x1e4>
80007a16:	6c 19       	ld.w	r9,r6[0x4]
80007a18:	e0 19 ff fc 	andl	r9,0xfffc
80007a1c:	f2 07 01 08 	sub	r8,r9,r7
80007a20:	58 f8       	cp.w	r8,15
80007a22:	e0 89 00 8f 	brgt	80007b40 <_malloc_r+0x238>
80007a26:	99 3c       	st.w	r12[0xc],r12
80007a28:	99 2c       	st.w	r12[0x8],r12
80007a2a:	58 08       	cp.w	r8,0
80007a2c:	c0 55       	brlt	80007a36 <_malloc_r+0x12e>
80007a2e:	ec 09 00 09 	add	r9,r6,r9
80007a32:	0a 9c       	mov	r12,r5
80007a34:	ce 2b       	rjmp	800079f8 <_malloc_r+0xf0>
80007a36:	e0 49 01 ff 	cp.w	r9,511
80007a3a:	e0 8b 00 13 	brhi	80007a60 <_malloc_r+0x158>
80007a3e:	a3 99       	lsr	r9,0x3
80007a40:	f4 09 00 38 	add	r8,r10,r9<<0x3
80007a44:	70 2b       	ld.w	r11,r8[0x8]
80007a46:	8d 38       	st.w	r6[0xc],r8
80007a48:	8d 2b       	st.w	r6[0x8],r11
80007a4a:	97 36       	st.w	r11[0xc],r6
80007a4c:	91 26       	st.w	r8[0x8],r6
80007a4e:	a3 49       	asr	r9,0x2
80007a50:	74 18       	ld.w	r8,r10[0x4]
80007a52:	30 1b       	mov	r11,1
80007a54:	f6 09 09 49 	lsl	r9,r11,r9
80007a58:	f1 e9 10 09 	or	r9,r8,r9
80007a5c:	95 19       	st.w	r10[0x4],r9
80007a5e:	c4 78       	rjmp	80007aec <_malloc_r+0x1e4>
80007a60:	f2 0a 16 09 	lsr	r10,r9,0x9
80007a64:	58 4a       	cp.w	r10,4
80007a66:	e0 8b 00 07 	brhi	80007a74 <_malloc_r+0x16c>
80007a6a:	f2 0a 16 06 	lsr	r10,r9,0x6
80007a6e:	2c 8a       	sub	r10,-56
80007a70:	c2 08       	rjmp	80007ab0 <_malloc_r+0x1a8>
80007a72:	d7 03       	nop
80007a74:	59 4a       	cp.w	r10,20
80007a76:	e0 8b 00 04 	brhi	80007a7e <_malloc_r+0x176>
80007a7a:	2a 5a       	sub	r10,-91
80007a7c:	c1 a8       	rjmp	80007ab0 <_malloc_r+0x1a8>
80007a7e:	e0 4a 00 54 	cp.w	r10,84
80007a82:	e0 8b 00 06 	brhi	80007a8e <_malloc_r+0x186>
80007a86:	f2 0a 16 0c 	lsr	r10,r9,0xc
80007a8a:	29 2a       	sub	r10,-110
80007a8c:	c1 28       	rjmp	80007ab0 <_malloc_r+0x1a8>
80007a8e:	e0 4a 01 54 	cp.w	r10,340
80007a92:	e0 8b 00 06 	brhi	80007a9e <_malloc_r+0x196>
80007a96:	f2 0a 16 0f 	lsr	r10,r9,0xf
80007a9a:	28 9a       	sub	r10,-119
80007a9c:	c0 a8       	rjmp	80007ab0 <_malloc_r+0x1a8>
80007a9e:	e0 4a 05 54 	cp.w	r10,1364
80007aa2:	e0 88 00 04 	brls	80007aaa <_malloc_r+0x1a2>
80007aa6:	37 ea       	mov	r10,126
80007aa8:	c0 48       	rjmp	80007ab0 <_malloc_r+0x1a8>
80007aaa:	f2 0a 16 12 	lsr	r10,r9,0x12
80007aae:	28 4a       	sub	r10,-124
80007ab0:	e0 6b 05 7c 	mov	r11,1404
80007ab4:	f6 0a 00 34 	add	r4,r11,r10<<0x3
80007ab8:	68 28       	ld.w	r8,r4[0x8]
80007aba:	08 38       	cp.w	r8,r4
80007abc:	c0 e1       	brne	80007ad8 <_malloc_r+0x1d0>
80007abe:	76 19       	ld.w	r9,r11[0x4]
80007ac0:	a3 4a       	asr	r10,0x2
80007ac2:	30 1e       	mov	lr,1
80007ac4:	fc 0a 09 4a 	lsl	r10,lr,r10
80007ac8:	f3 ea 10 0a 	or	r10,r9,r10
80007acc:	10 99       	mov	r9,r8
80007ace:	97 1a       	st.w	r11[0x4],r10
80007ad0:	c0 a8       	rjmp	80007ae4 <_malloc_r+0x1dc>
80007ad2:	70 28       	ld.w	r8,r8[0x8]
80007ad4:	08 38       	cp.w	r8,r4
80007ad6:	c0 60       	breq	80007ae2 <_malloc_r+0x1da>
80007ad8:	70 1a       	ld.w	r10,r8[0x4]
80007ada:	e0 1a ff fc 	andl	r10,0xfffc
80007ade:	14 39       	cp.w	r9,r10
80007ae0:	cf 93       	brcs	80007ad2 <_malloc_r+0x1ca>
80007ae2:	70 39       	ld.w	r9,r8[0xc]
80007ae4:	8d 39       	st.w	r6[0xc],r9
80007ae6:	8d 28       	st.w	r6[0x8],r8
80007ae8:	91 36       	st.w	r8[0xc],r6
80007aea:	93 26       	st.w	r9[0x8],r6
80007aec:	e6 08 14 02 	asr	r8,r3,0x2
80007af0:	30 1b       	mov	r11,1
80007af2:	e0 64 05 7c 	mov	r4,1404
80007af6:	f6 08 09 4b 	lsl	r11,r11,r8
80007afa:	68 18       	ld.w	r8,r4[0x4]
80007afc:	10 3b       	cp.w	r11,r8
80007afe:	e0 8b 00 6b 	brhi	80007bd4 <_malloc_r+0x2cc>
80007b02:	f7 e8 00 09 	and	r9,r11,r8
80007b06:	c0 b1       	brne	80007b1c <_malloc_r+0x214>
80007b08:	e0 13 ff fc 	andl	r3,0xfffc
80007b0c:	a1 7b       	lsl	r11,0x1
80007b0e:	2f c3       	sub	r3,-4
80007b10:	c0 38       	rjmp	80007b16 <_malloc_r+0x20e>
80007b12:	2f c3       	sub	r3,-4
80007b14:	a1 7b       	lsl	r11,0x1
80007b16:	f7 e8 00 09 	and	r9,r11,r8
80007b1a:	cf c0       	breq	80007b12 <_malloc_r+0x20a>
80007b1c:	e8 03 00 3e 	add	lr,r4,r3<<0x3
80007b20:	06 92       	mov	r2,r3
80007b22:	1c 91       	mov	r1,lr
80007b24:	62 36       	ld.w	r6,r1[0xc]
80007b26:	c2 e8       	rjmp	80007b82 <_malloc_r+0x27a>
80007b28:	6c 1a       	ld.w	r10,r6[0x4]
80007b2a:	e0 1a ff fc 	andl	r10,0xfffc
80007b2e:	f4 07 01 08 	sub	r8,r10,r7
80007b32:	58 f8       	cp.w	r8,15
80007b34:	e0 8a 00 15 	brle	80007b5e <_malloc_r+0x256>
80007b38:	6c 3a       	ld.w	r10,r6[0xc]
80007b3a:	6c 29       	ld.w	r9,r6[0x8]
80007b3c:	95 29       	st.w	r10[0x8],r9
80007b3e:	93 3a       	st.w	r9[0xc],r10
80007b40:	0e 99       	mov	r9,r7
80007b42:	ec 07 00 07 	add	r7,r6,r7
80007b46:	a1 a9       	sbr	r9,0x0
80007b48:	99 37       	st.w	r12[0xc],r7
80007b4a:	99 27       	st.w	r12[0x8],r7
80007b4c:	8d 19       	st.w	r6[0x4],r9
80007b4e:	ee 08 09 08 	st.w	r7[r8],r8
80007b52:	8f 2c       	st.w	r7[0x8],r12
80007b54:	8f 3c       	st.w	r7[0xc],r12
80007b56:	a1 a8       	sbr	r8,0x0
80007b58:	0a 9c       	mov	r12,r5
80007b5a:	8f 18       	st.w	r7[0x4],r8
80007b5c:	c0 d8       	rjmp	80007b76 <_malloc_r+0x26e>
80007b5e:	6c 39       	ld.w	r9,r6[0xc]
80007b60:	58 08       	cp.w	r8,0
80007b62:	c0 f5       	brlt	80007b80 <_malloc_r+0x278>
80007b64:	ec 0a 00 0a 	add	r10,r6,r10
80007b68:	74 18       	ld.w	r8,r10[0x4]
80007b6a:	a1 a8       	sbr	r8,0x0
80007b6c:	0a 9c       	mov	r12,r5
80007b6e:	95 18       	st.w	r10[0x4],r8
80007b70:	6c 28       	ld.w	r8,r6[0x8]
80007b72:	93 28       	st.w	r9[0x8],r8
80007b74:	91 39       	st.w	r8[0xc],r9
80007b76:	fe b0 ec 17 	rcall	800053a4 <__malloc_unlock>
80007b7a:	ec cc ff f8 	sub	r12,r6,-8
80007b7e:	d8 32       	popm	r0-r7,pc
80007b80:	12 96       	mov	r6,r9
80007b82:	02 36       	cp.w	r6,r1
80007b84:	cd 21       	brne	80007b28 <_malloc_r+0x220>
80007b86:	2f f2       	sub	r2,-1
80007b88:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
80007b8c:	c0 30       	breq	80007b92 <_malloc_r+0x28a>
80007b8e:	2f 81       	sub	r1,-8
80007b90:	cc ab       	rjmp	80007b24 <_malloc_r+0x21c>
80007b92:	1c 98       	mov	r8,lr
80007b94:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
80007b98:	c0 81       	brne	80007ba8 <_malloc_r+0x2a0>
80007b9a:	68 19       	ld.w	r9,r4[0x4]
80007b9c:	f6 08 11 ff 	rsub	r8,r11,-1
80007ba0:	f3 e8 00 08 	and	r8,r9,r8
80007ba4:	89 18       	st.w	r4[0x4],r8
80007ba6:	c0 78       	rjmp	80007bb4 <_malloc_r+0x2ac>
80007ba8:	f0 c9 00 08 	sub	r9,r8,8
80007bac:	20 13       	sub	r3,1
80007bae:	70 08       	ld.w	r8,r8[0x0]
80007bb0:	12 38       	cp.w	r8,r9
80007bb2:	cf 10       	breq	80007b94 <_malloc_r+0x28c>
80007bb4:	a1 7b       	lsl	r11,0x1
80007bb6:	68 18       	ld.w	r8,r4[0x4]
80007bb8:	10 3b       	cp.w	r11,r8
80007bba:	e0 8b 00 0d 	brhi	80007bd4 <_malloc_r+0x2cc>
80007bbe:	58 0b       	cp.w	r11,0
80007bc0:	c0 a0       	breq	80007bd4 <_malloc_r+0x2cc>
80007bc2:	04 93       	mov	r3,r2
80007bc4:	c0 38       	rjmp	80007bca <_malloc_r+0x2c2>
80007bc6:	2f c3       	sub	r3,-4
80007bc8:	a1 7b       	lsl	r11,0x1
80007bca:	f7 e8 00 09 	and	r9,r11,r8
80007bce:	ca 71       	brne	80007b1c <_malloc_r+0x214>
80007bd0:	cf bb       	rjmp	80007bc6 <_malloc_r+0x2be>
80007bd2:	d7 03       	nop
80007bd4:	68 23       	ld.w	r3,r4[0x8]
80007bd6:	66 12       	ld.w	r2,r3[0x4]
80007bd8:	e0 12 ff fc 	andl	r2,0xfffc
80007bdc:	0e 32       	cp.w	r2,r7
80007bde:	5f 39       	srlo	r9
80007be0:	e4 07 01 08 	sub	r8,r2,r7
80007be4:	58 f8       	cp.w	r8,15
80007be6:	5f aa       	srle	r10
80007be8:	f5 e9 10 09 	or	r9,r10,r9
80007bec:	e0 80 00 98 	breq	80007d1c <_malloc_r+0x414>
80007bf0:	e0 68 0d 44 	mov	r8,3396
80007bf4:	70 01       	ld.w	r1,r8[0x0]
80007bf6:	e0 68 09 88 	mov	r8,2440
80007bfa:	2f 01       	sub	r1,-16
80007bfc:	70 08       	ld.w	r8,r8[0x0]
80007bfe:	0e 01       	add	r1,r7
80007c00:	5b f8       	cp.w	r8,-1
80007c02:	c0 40       	breq	80007c0a <_malloc_r+0x302>
80007c04:	28 11       	sub	r1,-127
80007c06:	e0 11 ff 80 	andl	r1,0xff80
80007c0a:	02 9b       	mov	r11,r1
80007c0c:	0a 9c       	mov	r12,r5
80007c0e:	c4 3d       	rcall	80007e94 <_sbrk_r>
80007c10:	18 96       	mov	r6,r12
80007c12:	5b fc       	cp.w	r12,-1
80007c14:	c7 40       	breq	80007cfc <_malloc_r+0x3f4>
80007c16:	e6 02 00 08 	add	r8,r3,r2
80007c1a:	10 3c       	cp.w	r12,r8
80007c1c:	c0 32       	brcc	80007c22 <_malloc_r+0x31a>
80007c1e:	08 33       	cp.w	r3,r4
80007c20:	c6 e1       	brne	80007cfc <_malloc_r+0x3f4>
80007c22:	e0 6a 0d 48 	mov	r10,3400
80007c26:	74 09       	ld.w	r9,r10[0x0]
80007c28:	e2 09 00 09 	add	r9,r1,r9
80007c2c:	95 09       	st.w	r10[0x0],r9
80007c2e:	10 36       	cp.w	r6,r8
80007c30:	c0 a1       	brne	80007c44 <_malloc_r+0x33c>
80007c32:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
80007c36:	c0 71       	brne	80007c44 <_malloc_r+0x33c>
80007c38:	e2 02 00 02 	add	r2,r1,r2
80007c3c:	68 28       	ld.w	r8,r4[0x8]
80007c3e:	a1 a2       	sbr	r2,0x0
80007c40:	91 12       	st.w	r8[0x4],r2
80007c42:	c4 e8       	rjmp	80007cde <_malloc_r+0x3d6>
80007c44:	e0 6a 09 88 	mov	r10,2440
80007c48:	74 0b       	ld.w	r11,r10[0x0]
80007c4a:	5b fb       	cp.w	r11,-1
80007c4c:	c0 31       	brne	80007c52 <_malloc_r+0x34a>
80007c4e:	95 06       	st.w	r10[0x0],r6
80007c50:	c0 78       	rjmp	80007c5e <_malloc_r+0x356>
80007c52:	ec 09 00 09 	add	r9,r6,r9
80007c56:	e0 6a 0d 48 	mov	r10,3400
80007c5a:	10 19       	sub	r9,r8
80007c5c:	95 09       	st.w	r10[0x0],r9
80007c5e:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
80007c62:	f0 09 11 08 	rsub	r9,r8,8
80007c66:	58 08       	cp.w	r8,0
80007c68:	f2 08 17 10 	movne	r8,r9
80007c6c:	ed d8 e1 06 	addne	r6,r6,r8
80007c70:	28 08       	sub	r8,-128
80007c72:	ec 01 00 01 	add	r1,r6,r1
80007c76:	0a 9c       	mov	r12,r5
80007c78:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
80007c7c:	f0 01 01 01 	sub	r1,r8,r1
80007c80:	02 9b       	mov	r11,r1
80007c82:	c0 9d       	rcall	80007e94 <_sbrk_r>
80007c84:	e0 68 0d 48 	mov	r8,3400
80007c88:	5b fc       	cp.w	r12,-1
80007c8a:	ec 0c 17 00 	moveq	r12,r6
80007c8e:	f9 b1 00 00 	moveq	r1,0
80007c92:	70 09       	ld.w	r9,r8[0x0]
80007c94:	0c 1c       	sub	r12,r6
80007c96:	89 26       	st.w	r4[0x8],r6
80007c98:	02 0c       	add	r12,r1
80007c9a:	12 01       	add	r1,r9
80007c9c:	a1 ac       	sbr	r12,0x0
80007c9e:	91 01       	st.w	r8[0x0],r1
80007ca0:	8d 1c       	st.w	r6[0x4],r12
80007ca2:	08 33       	cp.w	r3,r4
80007ca4:	c1 d0       	breq	80007cde <_malloc_r+0x3d6>
80007ca6:	58 f2       	cp.w	r2,15
80007ca8:	e0 8b 00 05 	brhi	80007cb2 <_malloc_r+0x3aa>
80007cac:	30 18       	mov	r8,1
80007cae:	8d 18       	st.w	r6[0x4],r8
80007cb0:	c2 68       	rjmp	80007cfc <_malloc_r+0x3f4>
80007cb2:	30 59       	mov	r9,5
80007cb4:	20 c2       	sub	r2,12
80007cb6:	e0 12 ff f8 	andl	r2,0xfff8
80007cba:	e6 02 00 08 	add	r8,r3,r2
80007cbe:	91 29       	st.w	r8[0x8],r9
80007cc0:	91 19       	st.w	r8[0x4],r9
80007cc2:	66 18       	ld.w	r8,r3[0x4]
80007cc4:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007cc8:	e5 e8 10 08 	or	r8,r2,r8
80007ccc:	87 18       	st.w	r3[0x4],r8
80007cce:	58 f2       	cp.w	r2,15
80007cd0:	e0 88 00 07 	brls	80007cde <_malloc_r+0x3d6>
80007cd4:	e6 cb ff f8 	sub	r11,r3,-8
80007cd8:	0a 9c       	mov	r12,r5
80007cda:	e0 a0 08 a7 	rcall	80008e28 <_free_r>
80007cde:	e0 69 0d 40 	mov	r9,3392
80007ce2:	72 0a       	ld.w	r10,r9[0x0]
80007ce4:	e0 68 0d 48 	mov	r8,3400
80007ce8:	70 08       	ld.w	r8,r8[0x0]
80007cea:	14 38       	cp.w	r8,r10
80007cec:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80007cf0:	e0 69 0d 3c 	mov	r9,3388
80007cf4:	72 0a       	ld.w	r10,r9[0x0]
80007cf6:	14 38       	cp.w	r8,r10
80007cf8:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80007cfc:	68 28       	ld.w	r8,r4[0x8]
80007cfe:	70 18       	ld.w	r8,r8[0x4]
80007d00:	e0 18 ff fc 	andl	r8,0xfffc
80007d04:	0e 38       	cp.w	r8,r7
80007d06:	5f 39       	srlo	r9
80007d08:	0e 18       	sub	r8,r7
80007d0a:	58 f8       	cp.w	r8,15
80007d0c:	5f aa       	srle	r10
80007d0e:	f5 e9 10 09 	or	r9,r10,r9
80007d12:	c0 50       	breq	80007d1c <_malloc_r+0x414>
80007d14:	0a 9c       	mov	r12,r5
80007d16:	fe b0 eb 47 	rcall	800053a4 <__malloc_unlock>
80007d1a:	d8 3a       	popm	r0-r7,pc,r12=0
80007d1c:	68 26       	ld.w	r6,r4[0x8]
80007d1e:	a1 a8       	sbr	r8,0x0
80007d20:	0e 99       	mov	r9,r7
80007d22:	a1 a9       	sbr	r9,0x0
80007d24:	8d 19       	st.w	r6[0x4],r9
80007d26:	ec 07 00 07 	add	r7,r6,r7
80007d2a:	0a 9c       	mov	r12,r5
80007d2c:	89 27       	st.w	r4[0x8],r7
80007d2e:	8f 18       	st.w	r7[0x4],r8
80007d30:	fe b0 eb 3a 	rcall	800053a4 <__malloc_unlock>
80007d34:	ec cc ff f8 	sub	r12,r6,-8
80007d38:	d8 32       	popm	r0-r7,pc
80007d3a:	d7 03       	nop

80007d3c <memcpy>:
80007d3c:	58 8a       	cp.w	r10,8
80007d3e:	c2 f5       	brlt	80007d9c <memcpy+0x60>
80007d40:	f9 eb 10 09 	or	r9,r12,r11
80007d44:	e2 19 00 03 	andl	r9,0x3,COH
80007d48:	e0 81 00 97 	brne	80007e76 <memcpy+0x13a>
80007d4c:	e0 4a 00 20 	cp.w	r10,32
80007d50:	c3 b4       	brge	80007dc6 <memcpy+0x8a>
80007d52:	f4 08 14 02 	asr	r8,r10,0x2
80007d56:	f0 09 11 08 	rsub	r9,r8,8
80007d5a:	fe 09 00 2f 	add	pc,pc,r9<<0x2
80007d5e:	76 69       	ld.w	r9,r11[0x18]
80007d60:	99 69       	st.w	r12[0x18],r9
80007d62:	76 59       	ld.w	r9,r11[0x14]
80007d64:	99 59       	st.w	r12[0x14],r9
80007d66:	76 49       	ld.w	r9,r11[0x10]
80007d68:	99 49       	st.w	r12[0x10],r9
80007d6a:	76 39       	ld.w	r9,r11[0xc]
80007d6c:	99 39       	st.w	r12[0xc],r9
80007d6e:	76 29       	ld.w	r9,r11[0x8]
80007d70:	99 29       	st.w	r12[0x8],r9
80007d72:	76 19       	ld.w	r9,r11[0x4]
80007d74:	99 19       	st.w	r12[0x4],r9
80007d76:	76 09       	ld.w	r9,r11[0x0]
80007d78:	99 09       	st.w	r12[0x0],r9
80007d7a:	f6 08 00 2b 	add	r11,r11,r8<<0x2
80007d7e:	f8 08 00 28 	add	r8,r12,r8<<0x2
80007d82:	e0 1a 00 03 	andl	r10,0x3
80007d86:	f4 0a 11 04 	rsub	r10,r10,4
80007d8a:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80007d8e:	17 a9       	ld.ub	r9,r11[0x2]
80007d90:	b0 a9       	st.b	r8[0x2],r9
80007d92:	17 99       	ld.ub	r9,r11[0x1]
80007d94:	b0 99       	st.b	r8[0x1],r9
80007d96:	17 89       	ld.ub	r9,r11[0x0]
80007d98:	b0 89       	st.b	r8[0x0],r9
80007d9a:	5e fc       	retal	r12
80007d9c:	f4 0a 11 09 	rsub	r10,r10,9
80007da0:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80007da4:	17 f9       	ld.ub	r9,r11[0x7]
80007da6:	b8 f9       	st.b	r12[0x7],r9
80007da8:	17 e9       	ld.ub	r9,r11[0x6]
80007daa:	b8 e9       	st.b	r12[0x6],r9
80007dac:	17 d9       	ld.ub	r9,r11[0x5]
80007dae:	b8 d9       	st.b	r12[0x5],r9
80007db0:	17 c9       	ld.ub	r9,r11[0x4]
80007db2:	b8 c9       	st.b	r12[0x4],r9
80007db4:	17 b9       	ld.ub	r9,r11[0x3]
80007db6:	b8 b9       	st.b	r12[0x3],r9
80007db8:	17 a9       	ld.ub	r9,r11[0x2]
80007dba:	b8 a9       	st.b	r12[0x2],r9
80007dbc:	17 99       	ld.ub	r9,r11[0x1]
80007dbe:	b8 99       	st.b	r12[0x1],r9
80007dc0:	17 89       	ld.ub	r9,r11[0x0]
80007dc2:	b8 89       	st.b	r12[0x0],r9
80007dc4:	5e fc       	retal	r12
80007dc6:	eb cd 40 c0 	pushm	r6-r7,lr
80007dca:	18 99       	mov	r9,r12
80007dcc:	22 0a       	sub	r10,32
80007dce:	b7 07       	ld.d	r6,r11++
80007dd0:	b3 26       	st.d	r9++,r6
80007dd2:	b7 07       	ld.d	r6,r11++
80007dd4:	b3 26       	st.d	r9++,r6
80007dd6:	b7 07       	ld.d	r6,r11++
80007dd8:	b3 26       	st.d	r9++,r6
80007dda:	b7 07       	ld.d	r6,r11++
80007ddc:	b3 26       	st.d	r9++,r6
80007dde:	22 0a       	sub	r10,32
80007de0:	cf 74       	brge	80007dce <memcpy+0x92>
80007de2:	2f 0a       	sub	r10,-16
80007de4:	c0 65       	brlt	80007df0 <memcpy+0xb4>
80007de6:	b7 07       	ld.d	r6,r11++
80007de8:	b3 26       	st.d	r9++,r6
80007dea:	b7 07       	ld.d	r6,r11++
80007dec:	b3 26       	st.d	r9++,r6
80007dee:	21 0a       	sub	r10,16
80007df0:	5c 3a       	neg	r10
80007df2:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
80007df6:	d7 03       	nop
80007df8:	d7 03       	nop
80007dfa:	f7 36 00 0e 	ld.ub	r6,r11[14]
80007dfe:	f3 66 00 0e 	st.b	r9[14],r6
80007e02:	f7 36 00 0d 	ld.ub	r6,r11[13]
80007e06:	f3 66 00 0d 	st.b	r9[13],r6
80007e0a:	f7 36 00 0c 	ld.ub	r6,r11[12]
80007e0e:	f3 66 00 0c 	st.b	r9[12],r6
80007e12:	f7 36 00 0b 	ld.ub	r6,r11[11]
80007e16:	f3 66 00 0b 	st.b	r9[11],r6
80007e1a:	f7 36 00 0a 	ld.ub	r6,r11[10]
80007e1e:	f3 66 00 0a 	st.b	r9[10],r6
80007e22:	f7 36 00 09 	ld.ub	r6,r11[9]
80007e26:	f3 66 00 09 	st.b	r9[9],r6
80007e2a:	f7 36 00 08 	ld.ub	r6,r11[8]
80007e2e:	f3 66 00 08 	st.b	r9[8],r6
80007e32:	f7 36 00 07 	ld.ub	r6,r11[7]
80007e36:	f3 66 00 07 	st.b	r9[7],r6
80007e3a:	f7 36 00 06 	ld.ub	r6,r11[6]
80007e3e:	f3 66 00 06 	st.b	r9[6],r6
80007e42:	f7 36 00 05 	ld.ub	r6,r11[5]
80007e46:	f3 66 00 05 	st.b	r9[5],r6
80007e4a:	f7 36 00 04 	ld.ub	r6,r11[4]
80007e4e:	f3 66 00 04 	st.b	r9[4],r6
80007e52:	f7 36 00 03 	ld.ub	r6,r11[3]
80007e56:	f3 66 00 03 	st.b	r9[3],r6
80007e5a:	f7 36 00 02 	ld.ub	r6,r11[2]
80007e5e:	f3 66 00 02 	st.b	r9[2],r6
80007e62:	f7 36 00 01 	ld.ub	r6,r11[1]
80007e66:	f3 66 00 01 	st.b	r9[1],r6
80007e6a:	f7 36 00 00 	ld.ub	r6,r11[0]
80007e6e:	f3 66 00 00 	st.b	r9[0],r6
80007e72:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80007e76:	20 1a       	sub	r10,1
80007e78:	f6 0a 07 09 	ld.ub	r9,r11[r10]
80007e7c:	f8 0a 0b 09 	st.b	r12[r10],r9
80007e80:	cf b1       	brne	80007e76 <memcpy+0x13a>
80007e82:	5e fc       	retal	r12

80007e84 <memset>:
80007e84:	18 98       	mov	r8,r12
80007e86:	c0 38       	rjmp	80007e8c <memset+0x8>
80007e88:	10 cb       	st.b	r8++,r11
80007e8a:	20 1a       	sub	r10,1
80007e8c:	58 0a       	cp.w	r10,0
80007e8e:	cf d1       	brne	80007e88 <memset+0x4>
80007e90:	5e fc       	retal	r12
80007e92:	d7 03       	nop

80007e94 <_sbrk_r>:
80007e94:	d4 21       	pushm	r4-r7,lr
80007e96:	30 08       	mov	r8,0
80007e98:	18 97       	mov	r7,r12
80007e9a:	e0 66 55 fc 	mov	r6,22012
80007e9e:	16 9c       	mov	r12,r11
80007ea0:	8d 08       	st.w	r6[0x0],r8
80007ea2:	e0 a0 06 9f 	rcall	80008be0 <_sbrk>
80007ea6:	5b fc       	cp.w	r12,-1
80007ea8:	c0 51       	brne	80007eb2 <_sbrk_r+0x1e>
80007eaa:	6c 08       	ld.w	r8,r6[0x0]
80007eac:	58 08       	cp.w	r8,0
80007eae:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007eb2:	d8 22       	popm	r4-r7,pc

80007eb4 <strcat>:
80007eb4:	18 99       	mov	r9,r12
80007eb6:	30 08       	mov	r8,0
80007eb8:	c0 28       	rjmp	80007ebc <strcat+0x8>
80007eba:	2f f9       	sub	r9,-1
80007ebc:	13 8a       	ld.ub	r10,r9[0x0]
80007ebe:	f0 0a 18 00 	cp.b	r10,r8
80007ec2:	cf c1       	brne	80007eba <strcat+0x6>
80007ec4:	30 08       	mov	r8,0
80007ec6:	f6 08 07 0a 	ld.ub	r10,r11[r8]
80007eca:	f2 08 0b 0a 	st.b	r9[r8],r10
80007ece:	2f f8       	sub	r8,-1
80007ed0:	58 0a       	cp.w	r10,0
80007ed2:	cf a1       	brne	80007ec6 <strcat+0x12>
80007ed4:	5e fc       	retal	r12

80007ed6 <strcpy>:
80007ed6:	30 08       	mov	r8,0
80007ed8:	f6 08 07 09 	ld.ub	r9,r11[r8]
80007edc:	f8 08 0b 09 	st.b	r12[r8],r9
80007ee0:	2f f8       	sub	r8,-1
80007ee2:	58 09       	cp.w	r9,0
80007ee4:	cf a1       	brne	80007ed8 <strcpy+0x2>
80007ee6:	5e fc       	retal	r12

80007ee8 <strlen>:
80007ee8:	30 09       	mov	r9,0
80007eea:	18 98       	mov	r8,r12
80007eec:	c0 28       	rjmp	80007ef0 <strlen+0x8>
80007eee:	2f f8       	sub	r8,-1
80007ef0:	11 8a       	ld.ub	r10,r8[0x0]
80007ef2:	f2 0a 18 00 	cp.b	r10,r9
80007ef6:	cf c1       	brne	80007eee <strlen+0x6>
80007ef8:	f0 0c 01 0c 	sub	r12,r8,r12
80007efc:	5e fc       	retal	r12
80007efe:	d7 03       	nop

80007f00 <strncpy>:
80007f00:	30 08       	mov	r8,0
80007f02:	10 3a       	cp.w	r10,r8
80007f04:	5e 0c       	reteq	r12
80007f06:	f6 08 07 09 	ld.ub	r9,r11[r8]
80007f0a:	f8 08 0b 09 	st.b	r12[r8],r9
80007f0e:	2f f8       	sub	r8,-1
80007f10:	58 09       	cp.w	r9,0
80007f12:	cf 81       	brne	80007f02 <strncpy+0x2>
80007f14:	10 3a       	cp.w	r10,r8
80007f16:	5e 0c       	reteq	r12
80007f18:	f8 08 0b 09 	st.b	r12[r8],r9
80007f1c:	2f f8       	sub	r8,-1
80007f1e:	cf bb       	rjmp	80007f14 <strncpy+0x14>

80007f20 <_strtod_r>:
80007f20:	d4 31       	pushm	r0-r7,lr
80007f22:	21 bd       	sub	sp,108
80007f24:	50 ba       	stdsp	sp[0x2c],r10
80007f26:	51 8b       	stdsp	sp[0x60],r11
80007f28:	16 92       	mov	r2,r11
80007f2a:	18 96       	mov	r6,r12
80007f2c:	fa c7 ff b8 	sub	r7,sp,-72
80007f30:	30 08       	mov	r8,0
80007f32:	30 09       	mov	r9,0
80007f34:	30 d5       	mov	r5,13
80007f36:	ee e9 00 00 	st.d	r7[0],r8
80007f3a:	32 be       	mov	lr,43
80007f3c:	32 dc       	mov	r12,45
80007f3e:	32 0b       	mov	r11,32
80007f40:	30 9a       	mov	r10,9
80007f42:	41 89       	lddsp	r9,sp[0x60]
80007f44:	13 88       	ld.ub	r8,r9[0x0]
80007f46:	ea 08 18 00 	cp.b	r8,r5
80007f4a:	e0 8b 00 0b 	brhi	80007f60 <_strtod_r+0x40>
80007f4e:	f4 08 18 00 	cp.b	r8,r10
80007f52:	c1 f2       	brcc	80007f90 <_strtod_r+0x70>
80007f54:	30 09       	mov	r9,0
80007f56:	f2 08 18 00 	cp.b	r8,r9
80007f5a:	c1 e1       	brne	80007f96 <_strtod_r+0x76>
80007f5c:	e0 8f 01 fe 	bral	80008358 <_strtod_r+0x438>
80007f60:	fc 08 18 00 	cp.b	r8,lr
80007f64:	c0 80       	breq	80007f74 <_strtod_r+0x54>
80007f66:	f8 08 18 00 	cp.b	r8,r12
80007f6a:	c0 80       	breq	80007f7a <_strtod_r+0x5a>
80007f6c:	f6 08 18 00 	cp.b	r8,r11
80007f70:	c1 31       	brne	80007f96 <_strtod_r+0x76>
80007f72:	c0 f8       	rjmp	80007f90 <_strtod_r+0x70>
80007f74:	30 0e       	mov	lr,0
80007f76:	50 8e       	stdsp	sp[0x20],lr
80007f78:	c0 38       	rjmp	80007f7e <_strtod_r+0x5e>
80007f7a:	30 1c       	mov	r12,1
80007f7c:	50 8c       	stdsp	sp[0x20],r12
80007f7e:	2f f9       	sub	r9,-1
80007f80:	51 89       	stdsp	sp[0x60],r9
80007f82:	30 08       	mov	r8,0
80007f84:	13 89       	ld.ub	r9,r9[0x0]
80007f86:	f0 09 18 00 	cp.b	r9,r8
80007f8a:	c0 81       	brne	80007f9a <_strtod_r+0x7a>
80007f8c:	e0 8f 01 e6 	bral	80008358 <_strtod_r+0x438>
80007f90:	2f f9       	sub	r9,-1
80007f92:	51 89       	stdsp	sp[0x60],r9
80007f94:	cd 7b       	rjmp	80007f42 <_strtod_r+0x22>
80007f96:	30 0b       	mov	r11,0
80007f98:	50 8b       	stdsp	sp[0x20],r11
80007f9a:	41 89       	lddsp	r9,sp[0x60]
80007f9c:	33 0a       	mov	r10,48
80007f9e:	13 88       	ld.ub	r8,r9[0x0]
80007fa0:	f4 08 18 00 	cp.b	r8,r10
80007fa4:	c0 30       	breq	80007faa <_strtod_r+0x8a>
80007fa6:	30 00       	mov	r0,0
80007fa8:	c6 b8       	rjmp	8000807e <_strtod_r+0x15e>
80007faa:	13 99       	ld.ub	r9,r9[0x1]
80007fac:	35 8a       	mov	r10,88
80007fae:	f4 09 18 00 	cp.b	r9,r10
80007fb2:	c0 50       	breq	80007fbc <_strtod_r+0x9c>
80007fb4:	37 8a       	mov	r10,120
80007fb6:	f4 09 18 00 	cp.b	r9,r10
80007fba:	c5 61       	brne	80008066 <_strtod_r+0x146>
80007fbc:	40 8a       	lddsp	r10,sp[0x20]
80007fbe:	e0 67 09 a0 	mov	r7,2464
80007fc2:	1a da       	st.w	--sp,r10
80007fc4:	0c 9c       	mov	r12,r6
80007fc6:	fa c8 ff a0 	sub	r8,sp,-96
80007fca:	fa c9 ff a4 	sub	r9,sp,-92
80007fce:	fa cb ff 9c 	sub	r11,sp,-100
80007fd2:	0e 9a       	mov	r10,r7
80007fd4:	e0 a0 08 54 	rcall	8000907c <__gethex>
80007fd8:	2f fd       	sub	sp,-4
80007fda:	18 94       	mov	r4,r12
80007fdc:	eb dc c0 03 	bfextu	r5,r12,0x0,0x3
80007fe0:	e0 80 05 be 	breq	80008b5c <_strtod_r+0xc3c>
80007fe4:	58 65       	cp.w	r5,6
80007fe6:	c0 61       	brne	80007ff2 <_strtod_r+0xd2>
80007fe8:	30 09       	mov	r9,0
80007fea:	51 82       	stdsp	sp[0x60],r2
80007fec:	50 89       	stdsp	sp[0x20],r9
80007fee:	e0 8f 05 b7 	bral	80008b5c <_strtod_r+0xc3c>
80007ff2:	41 7a       	lddsp	r10,sp[0x5c]
80007ff4:	58 0a       	cp.w	r10,0
80007ff6:	c0 a0       	breq	8000800a <_strtod_r+0xea>
80007ff8:	6e 0b       	ld.w	r11,r7[0x0]
80007ffa:	fa cc ff c8 	sub	r12,sp,-56
80007ffe:	e0 a0 0c 37 	rcall	8000986c <__copybits>
80008002:	0c 9c       	mov	r12,r6
80008004:	41 7b       	lddsp	r11,sp[0x5c]
80008006:	e0 a0 0c 71 	rcall	800098e8 <_Bfree>
8000800a:	41 69       	lddsp	r9,sp[0x58]
8000800c:	58 65       	cp.w	r5,6
8000800e:	e0 8b 00 23 	brhi	80008054 <_strtod_r+0x134>
80008012:	fe c8 d9 f2 	sub	r8,pc,-9742
80008016:	f0 05 03 2f 	ld.w	pc,r8[r5<<0x2]
8000801a:	30 08       	mov	r8,0
8000801c:	51 28       	stdsp	sp[0x48],r8
8000801e:	c1 a8       	rjmp	80008052 <_strtod_r+0x132>
80008020:	40 e8       	lddsp	r8,sp[0x38]
80008022:	51 38       	stdsp	sp[0x4c],r8
80008024:	40 f8       	lddsp	r8,sp[0x3c]
80008026:	c0 98       	rjmp	80008038 <_strtod_r+0x118>
80008028:	40 e8       	lddsp	r8,sp[0x38]
8000802a:	f2 c9 fb cd 	sub	r9,r9,-1075
8000802e:	51 38       	stdsp	sp[0x4c],r8
80008030:	40 f8       	lddsp	r8,sp[0x3c]
80008032:	b5 c8       	cbr	r8,0x14
80008034:	f1 e9 11 48 	or	r8,r8,r9<<0x14
80008038:	51 28       	stdsp	sp[0x48],r8
8000803a:	c0 d8       	rjmp	80008054 <_strtod_r+0x134>
8000803c:	fc 18 7f f0 	movh	r8,0x7ff0
80008040:	51 28       	stdsp	sp[0x48],r8
80008042:	30 08       	mov	r8,0
80008044:	c0 78       	rjmp	80008052 <_strtod_r+0x132>
80008046:	e0 68 ff ff 	mov	r8,65535
8000804a:	ea 18 7f ff 	orh	r8,0x7fff
8000804e:	51 28       	stdsp	sp[0x48],r8
80008050:	3f f8       	mov	r8,-1
80008052:	51 38       	stdsp	sp[0x4c],r8
80008054:	e2 14 00 08 	andl	r4,0x8,COH
80008058:	e0 80 05 82 	breq	80008b5c <_strtod_r+0xc3c>
8000805c:	41 28       	lddsp	r8,sp[0x48]
8000805e:	bf b8       	sbr	r8,0x1f
80008060:	51 28       	stdsp	sp[0x48],r8
80008062:	e0 8f 05 7d 	bral	80008b5c <_strtod_r+0xc3c>
80008066:	10 9a       	mov	r10,r8
80008068:	41 88       	lddsp	r8,sp[0x60]
8000806a:	2f f8       	sub	r8,-1
8000806c:	51 88       	stdsp	sp[0x60],r8
8000806e:	11 88       	ld.ub	r8,r8[0x0]
80008070:	f4 08 18 00 	cp.b	r8,r10
80008074:	cf a0       	breq	80008068 <_strtod_r+0x148>
80008076:	58 08       	cp.w	r8,0
80008078:	e0 80 05 72 	breq	80008b5c <_strtod_r+0xc3c>
8000807c:	30 10       	mov	r0,1
8000807e:	30 04       	mov	r4,0
80008080:	41 88       	lddsp	r8,sp[0x60]
80008082:	08 93       	mov	r3,r4
80008084:	50 78       	stdsp	sp[0x1c],r8
80008086:	08 9a       	mov	r10,r4
80008088:	c1 38       	rjmp	800080ae <_strtod_r+0x18e>
8000808a:	58 8a       	cp.w	r10,8
8000808c:	e0 89 00 06 	brgt	80008098 <_strtod_r+0x178>
80008090:	23 08       	sub	r8,48
80008092:	f0 0b 00 13 	add	r3,r8,r11<<0x1
80008096:	c0 98       	rjmp	800080a8 <_strtod_r+0x188>
80008098:	58 fa       	cp.w	r10,15
8000809a:	e0 89 00 07 	brgt	800080a8 <_strtod_r+0x188>
8000809e:	e8 04 00 24 	add	r4,r4,r4<<0x2
800080a2:	23 08       	sub	r8,48
800080a4:	f0 04 00 14 	add	r4,r8,r4<<0x1
800080a8:	2f f9       	sub	r9,-1
800080aa:	2f fa       	sub	r10,-1
800080ac:	51 89       	stdsp	sp[0x60],r9
800080ae:	41 89       	lddsp	r9,sp[0x60]
800080b0:	e6 03 00 2b 	add	r11,r3,r3<<0x2
800080b4:	13 88       	ld.ub	r8,r9[0x0]
800080b6:	e0 48 00 2f 	cp.w	r8,47
800080ba:	e0 8a 00 07 	brle	800080c8 <_strtod_r+0x1a8>
800080be:	e0 48 00 39 	cp.w	r8,57
800080c2:	fe 9a ff e4 	brle	8000808a <_strtod_r+0x16a>
800080c6:	c5 b8       	rjmp	8000817c <_strtod_r+0x25c>
800080c8:	14 95       	mov	r5,r10
800080ca:	e0 48 00 2e 	cp.w	r8,46
800080ce:	c5 71       	brne	8000817c <_strtod_r+0x25c>
800080d0:	2f f9       	sub	r9,-1
800080d2:	51 89       	stdsp	sp[0x60],r9
800080d4:	13 88       	ld.ub	r8,r9[0x0]
800080d6:	58 0a       	cp.w	r10,0
800080d8:	c0 40       	breq	800080e0 <_strtod_r+0x1c0>
800080da:	30 09       	mov	r9,0
800080dc:	12 9b       	mov	r11,r9
800080de:	c4 78       	rjmp	8000816c <_strtod_r+0x24c>
800080e0:	14 99       	mov	r9,r10
800080e2:	c0 68       	rjmp	800080ee <_strtod_r+0x1ce>
800080e4:	41 88       	lddsp	r8,sp[0x60]
800080e6:	2f f9       	sub	r9,-1
800080e8:	2f f8       	sub	r8,-1
800080ea:	51 88       	stdsp	sp[0x60],r8
800080ec:	11 88       	ld.ub	r8,r8[0x0]
800080ee:	e0 48 00 30 	cp.w	r8,48
800080f2:	cf 90       	breq	800080e4 <_strtod_r+0x1c4>
800080f4:	f0 cb 00 31 	sub	r11,r8,49
800080f8:	58 8b       	cp.w	r11,8
800080fa:	e0 88 00 07 	brls	80008108 <_strtod_r+0x1e8>
800080fe:	30 0a       	mov	r10,0
80008100:	30 11       	mov	r1,1
80008102:	14 9b       	mov	r11,r10
80008104:	50 11       	stdsp	sp[0x4],r1
80008106:	c3 f8       	rjmp	80008184 <_strtod_r+0x264>
80008108:	12 9b       	mov	r11,r9
8000810a:	41 8e       	lddsp	lr,sp[0x60]
8000810c:	30 09       	mov	r9,0
8000810e:	50 7e       	stdsp	sp[0x1c],lr
80008110:	2f f9       	sub	r9,-1
80008112:	23 08       	sub	r8,48
80008114:	c2 80       	breq	80008164 <_strtod_r+0x244>
80008116:	12 0b       	add	r11,r9
80008118:	30 1e       	mov	lr,1
8000811a:	c1 08       	rjmp	8000813a <_strtod_r+0x21a>
8000811c:	18 95       	mov	r5,r12
8000811e:	20 1c       	sub	r12,1
80008120:	58 8c       	cp.w	r12,8
80008122:	e0 89 00 05 	brgt	8000812c <_strtod_r+0x20c>
80008126:	e2 03 15 01 	lsl	r3,r1,0x1
8000812a:	c0 78       	rjmp	80008138 <_strtod_r+0x218>
8000812c:	59 05       	cp.w	r5,16
8000812e:	e0 89 00 05 	brgt	80008138 <_strtod_r+0x218>
80008132:	e8 04 00 24 	add	r4,r4,r4<<0x2
80008136:	a1 74       	lsl	r4,0x1
80008138:	2f fe       	sub	lr,-1
8000813a:	e6 03 00 21 	add	r1,r3,r3<<0x2
8000813e:	ea cc ff ff 	sub	r12,r5,-1
80008142:	12 3e       	cp.w	lr,r9
80008144:	ce c5       	brlt	8000811c <_strtod_r+0x1fc>
80008146:	58 85       	cp.w	r5,8
80008148:	e0 89 00 05 	brgt	80008152 <_strtod_r+0x232>
8000814c:	f0 01 00 13 	add	r3,r8,r1<<0x1
80008150:	c0 88       	rjmp	80008160 <_strtod_r+0x240>
80008152:	59 0c       	cp.w	r12,16
80008154:	e0 89 00 06 	brgt	80008160 <_strtod_r+0x240>
80008158:	e8 04 00 24 	add	r4,r4,r4<<0x2
8000815c:	f0 04 00 14 	add	r4,r8,r4<<0x1
80008160:	18 95       	mov	r5,r12
80008162:	30 09       	mov	r9,0
80008164:	41 88       	lddsp	r8,sp[0x60]
80008166:	2f f8       	sub	r8,-1
80008168:	51 88       	stdsp	sp[0x60],r8
8000816a:	11 88       	ld.ub	r8,r8[0x0]
8000816c:	f0 cc 00 30 	sub	r12,r8,48
80008170:	58 9c       	cp.w	r12,9
80008172:	fe 98 ff cf 	brls	80008110 <_strtod_r+0x1f0>
80008176:	30 1c       	mov	r12,1
80008178:	50 1c       	stdsp	sp[0x4],r12
8000817a:	c0 58       	rjmp	80008184 <_strtod_r+0x264>
8000817c:	30 09       	mov	r9,0
8000817e:	14 95       	mov	r5,r10
80008180:	12 9b       	mov	r11,r9
80008182:	50 19       	stdsp	sp[0x4],r9
80008184:	e0 48 00 45 	cp.w	r8,69
80008188:	5f 0e       	sreq	lr
8000818a:	e0 48 00 65 	cp.w	r8,101
8000818e:	5f 0c       	sreq	r12
80008190:	fd ec 10 0c 	or	r12,lr,r12
80008194:	c6 60       	breq	80008260 <_strtod_r+0x340>
80008196:	eb e9 10 08 	or	r8,r5,r9
8000819a:	00 48       	or	r8,r0
8000819c:	e0 80 00 de 	breq	80008358 <_strtod_r+0x438>
800081a0:	41 82       	lddsp	r2,sp[0x60]
800081a2:	e4 cc ff ff 	sub	r12,r2,-1
800081a6:	51 8c       	stdsp	sp[0x60],r12
800081a8:	32 be       	mov	lr,43
800081aa:	19 88       	ld.ub	r8,r12[0x0]
800081ac:	fc 08 18 00 	cp.b	r8,lr
800081b0:	c0 60       	breq	800081bc <_strtod_r+0x29c>
800081b2:	32 de       	mov	lr,45
800081b4:	fc 08 18 00 	cp.b	r8,lr
800081b8:	c0 51       	brne	800081c2 <_strtod_r+0x2a2>
800081ba:	c0 78       	rjmp	800081c8 <_strtod_r+0x2a8>
800081bc:	30 08       	mov	r8,0
800081be:	50 c8       	stdsp	sp[0x30],r8
800081c0:	c0 68       	rjmp	800081cc <_strtod_r+0x2ac>
800081c2:	30 01       	mov	r1,0
800081c4:	50 c1       	stdsp	sp[0x30],r1
800081c6:	c0 68       	rjmp	800081d2 <_strtod_r+0x2b2>
800081c8:	30 1e       	mov	lr,1
800081ca:	50 ce       	stdsp	sp[0x30],lr
800081cc:	2f fc       	sub	r12,-1
800081ce:	51 8c       	stdsp	sp[0x60],r12
800081d0:	19 88       	ld.ub	r8,r12[0x0]
800081d2:	f0 cc 00 30 	sub	r12,r8,48
800081d6:	58 9c       	cp.w	r12,9
800081d8:	e0 88 00 08 	brls	800081e8 <_strtod_r+0x2c8>
800081dc:	c3 e8       	rjmp	80008258 <_strtod_r+0x338>
800081de:	41 88       	lddsp	r8,sp[0x60]
800081e0:	2f f8       	sub	r8,-1
800081e2:	51 88       	stdsp	sp[0x60],r8
800081e4:	11 88       	ld.ub	r8,r8[0x0]
800081e6:	c0 28       	rjmp	800081ea <_strtod_r+0x2ca>
800081e8:	40 ce       	lddsp	lr,sp[0x30]
800081ea:	e0 48 00 30 	cp.w	r8,48
800081ee:	cf 80       	breq	800081de <_strtod_r+0x2be>
800081f0:	50 ce       	stdsp	sp[0x30],lr
800081f2:	f0 cc 00 31 	sub	r12,r8,49
800081f6:	58 8c       	cp.w	r12,8
800081f8:	e0 8b 00 34 	brhi	80008260 <_strtod_r+0x340>
800081fc:	41 8c       	lddsp	r12,sp[0x60]
800081fe:	23 08       	sub	r8,48
80008200:	50 3c       	stdsp	sp[0xc],r12
80008202:	50 98       	stdsp	sp[0x24],r8
80008204:	10 9c       	mov	r12,r8
80008206:	c0 58       	rjmp	80008210 <_strtod_r+0x2f0>
80008208:	23 08       	sub	r8,48
8000820a:	40 51       	lddsp	r1,sp[0x14]
8000820c:	f0 01 00 1c 	add	r12,r8,r1<<0x1
80008210:	41 81       	lddsp	r1,sp[0x60]
80008212:	f8 0c 00 28 	add	r8,r12,r12<<0x2
80008216:	2f f1       	sub	r1,-1
80008218:	50 58       	stdsp	sp[0x14],r8
8000821a:	51 81       	stdsp	sp[0x60],r1
8000821c:	03 88       	ld.ub	r8,r1[0x0]
8000821e:	e0 48 00 2f 	cp.w	r8,47
80008222:	e0 8a 00 06 	brle	8000822e <_strtod_r+0x30e>
80008226:	e0 48 00 39 	cp.w	r8,57
8000822a:	fe 9a ff ef 	brle	80008208 <_strtod_r+0x2e8>
8000822e:	50 ce       	stdsp	sp[0x30],lr
80008230:	40 3e       	lddsp	lr,sp[0xc]
80008232:	1c 11       	sub	r1,lr
80008234:	50 9c       	stdsp	sp[0x24],r12
80008236:	58 81       	cp.w	r1,8
80008238:	5f 9c       	srgt	r12
8000823a:	40 91       	lddsp	r1,sp[0x24]
8000823c:	e0 41 4e 1f 	cp.w	r1,19999
80008240:	5f 9e       	srgt	lr
80008242:	1c 4c       	or	r12,lr
80008244:	e0 6e 4e 1f 	mov	lr,19999
80008248:	fc 01 17 10 	movne	r1,lr
8000824c:	50 31       	stdsp	sp[0xc],r1
8000824e:	40 cc       	lddsp	r12,sp[0x30]
80008250:	58 0c       	cp.w	r12,0
80008252:	c0 90       	breq	80008264 <_strtod_r+0x344>
80008254:	5c 31       	neg	r1
80008256:	c0 38       	rjmp	8000825c <_strtod_r+0x33c>
80008258:	51 82       	stdsp	sp[0x60],r2
8000825a:	30 01       	mov	r1,0
8000825c:	50 31       	stdsp	sp[0xc],r1
8000825e:	c0 38       	rjmp	80008264 <_strtod_r+0x344>
80008260:	30 0e       	mov	lr,0
80008262:	50 3e       	stdsp	sp[0xc],lr
80008264:	58 05       	cp.w	r5,0
80008266:	c7 e1       	brne	80008362 <_strtod_r+0x442>
80008268:	00 49       	or	r9,r0
8000826a:	e0 81 04 79 	brne	80008b5c <_strtod_r+0xc3c>
8000826e:	40 1c       	lddsp	r12,sp[0x4]
80008270:	58 0c       	cp.w	r12,0
80008272:	c7 31       	brne	80008358 <_strtod_r+0x438>
80008274:	e0 48 00 4e 	cp.w	r8,78
80008278:	c3 e0       	breq	800082f4 <_strtod_r+0x3d4>
8000827a:	e0 89 00 06 	brgt	80008286 <_strtod_r+0x366>
8000827e:	e0 48 00 49 	cp.w	r8,73
80008282:	c6 b1       	brne	80008358 <_strtod_r+0x438>
80008284:	c0 88       	rjmp	80008294 <_strtod_r+0x374>
80008286:	e0 48 00 69 	cp.w	r8,105
8000828a:	c0 50       	breq	80008294 <_strtod_r+0x374>
8000828c:	e0 48 00 6e 	cp.w	r8,110
80008290:	c6 41       	brne	80008358 <_strtod_r+0x438>
80008292:	c3 18       	rjmp	800082f4 <_strtod_r+0x3d4>
80008294:	41 88       	lddsp	r8,sp[0x60]
80008296:	fe ca dc 5a 	sub	r10,pc,-9126
8000829a:	c0 d8       	rjmp	800082b4 <_strtod_r+0x394>
8000829c:	2f f8       	sub	r8,-1
8000829e:	11 89       	ld.ub	r9,r8[0x0]
800082a0:	e0 49 00 40 	cp.w	r9,64
800082a4:	e0 8a 00 06 	brle	800082b0 <_strtod_r+0x390>
800082a8:	e0 49 00 5a 	cp.w	r9,90
800082ac:	f7 b9 0a e0 	suble	r9,-32
800082b0:	16 39       	cp.w	r9,r11
800082b2:	c5 31       	brne	80008358 <_strtod_r+0x438>
800082b4:	15 3b       	ld.ub	r11,r10++
800082b6:	58 0b       	cp.w	r11,0
800082b8:	cf 21       	brne	8000829c <_strtod_r+0x37c>
800082ba:	51 88       	stdsp	sp[0x60],r8
800082bc:	10 9a       	mov	r10,r8
800082be:	fe cb dc 7e 	sub	r11,pc,-9090
800082c2:	c0 c8       	rjmp	800082da <_strtod_r+0x3ba>
800082c4:	15 89       	ld.ub	r9,r10[0x0]
800082c6:	e0 49 00 40 	cp.w	r9,64
800082ca:	e0 8a 00 06 	brle	800082d6 <_strtod_r+0x3b6>
800082ce:	e0 49 00 5a 	cp.w	r9,90
800082d2:	f7 b9 0a e0 	suble	r9,-32
800082d6:	18 39       	cp.w	r9,r12
800082d8:	c0 91       	brne	800082ea <_strtod_r+0x3ca>
800082da:	f4 c9 ff ff 	sub	r9,r10,-1
800082de:	17 3c       	ld.ub	r12,r11++
800082e0:	12 9a       	mov	r10,r9
800082e2:	58 0c       	cp.w	r12,0
800082e4:	cf 01       	brne	800082c4 <_strtod_r+0x3a4>
800082e6:	51 89       	stdsp	sp[0x60],r9
800082e8:	c0 38       	rjmp	800082ee <_strtod_r+0x3ce>
800082ea:	2f f8       	sub	r8,-1
800082ec:	51 88       	stdsp	sp[0x60],r8
800082ee:	fc 18 7f f0 	movh	r8,0x7ff0
800082f2:	c2 e8       	rjmp	8000834e <_strtod_r+0x42e>
800082f4:	41 89       	lddsp	r9,sp[0x60]
800082f6:	fe ca dc ae 	sub	r10,pc,-9042
800082fa:	c0 c8       	rjmp	80008312 <_strtod_r+0x3f2>
800082fc:	13 88       	ld.ub	r8,r9[0x0]
800082fe:	e0 48 00 40 	cp.w	r8,64
80008302:	e0 8a 00 06 	brle	8000830e <_strtod_r+0x3ee>
80008306:	e0 48 00 5a 	cp.w	r8,90
8000830a:	f7 b8 0a e0 	suble	r8,-32
8000830e:	16 38       	cp.w	r8,r11
80008310:	c2 41       	brne	80008358 <_strtod_r+0x438>
80008312:	f2 c8 ff ff 	sub	r8,r9,-1
80008316:	15 3b       	ld.ub	r11,r10++
80008318:	10 99       	mov	r9,r8
8000831a:	58 0b       	cp.w	r11,0
8000831c:	cf 01       	brne	800082fc <_strtod_r+0x3dc>
8000831e:	51 88       	stdsp	sp[0x60],r8
80008320:	11 89       	ld.ub	r9,r8[0x0]
80008322:	32 88       	mov	r8,40
80008324:	f0 09 18 00 	cp.b	r9,r8
80008328:	c1 11       	brne	8000834a <_strtod_r+0x42a>
8000832a:	fa ca ff c8 	sub	r10,sp,-56
8000832e:	e0 6b 09 8c 	mov	r11,2444
80008332:	fa cc ff a0 	sub	r12,sp,-96
80008336:	e0 a0 08 b5 	rcall	800094a0 <__hexnan>
8000833a:	58 5c       	cp.w	r12,5
8000833c:	c0 71       	brne	8000834a <_strtod_r+0x42a>
8000833e:	40 f8       	lddsp	r8,sp[0x3c]
80008340:	ea 18 7f f0 	orh	r8,0x7ff0
80008344:	8f 08       	st.w	r7[0x0],r8
80008346:	40 e8       	lddsp	r8,sp[0x38]
80008348:	c0 58       	rjmp	80008352 <_strtod_r+0x432>
8000834a:	fc 18 7f f8 	movh	r8,0x7ff8
8000834e:	8f 08       	st.w	r7[0x0],r8
80008350:	30 08       	mov	r8,0
80008352:	8f 18       	st.w	r7[0x4],r8
80008354:	e0 8f 04 04 	bral	80008b5c <_strtod_r+0xc3c>
80008358:	30 0b       	mov	r11,0
8000835a:	51 82       	stdsp	sp[0x60],r2
8000835c:	50 8b       	stdsp	sp[0x20],r11
8000835e:	e0 8f 03 ff 	bral	80008b5c <_strtod_r+0xc3c>
80008362:	58 0a       	cp.w	r10,0
80008364:	ea 0a 17 00 	moveq	r10,r5
80008368:	40 31       	lddsp	r1,sp[0xc]
8000836a:	50 5a       	stdsp	sp[0x14],r10
8000836c:	16 11       	sub	r1,r11
8000836e:	06 9c       	mov	r12,r3
80008370:	fe b0 f6 36 	rcall	80006fdc <__avr32_u32_to_f64>
80008374:	ee eb 00 00 	st.d	r7[0],r10
80008378:	31 02       	mov	r2,16
8000837a:	ea 02 0d 42 	min	r2,r5,r2
8000837e:	58 92       	cp.w	r2,9
80008380:	e0 8a 00 19 	brle	800083b2 <_strtod_r+0x492>
80008384:	fa e8 00 48 	ld.d	r8,sp[72]
80008388:	e4 cb 00 09 	sub	r11,r2,9
8000838c:	fe ca dc 90 	sub	r10,pc,-9072
80008390:	f4 0b 02 3a 	ld.d	r10,r10[r11<<0x3]
80008394:	fe b0 f3 e2 	rcall	80006b58 <__avr32_f64_mul>
80008398:	08 9c       	mov	r12,r4
8000839a:	fa eb 00 04 	st.d	sp[4],r10
8000839e:	fe b0 f6 1f 	rcall	80006fdc <__avr32_u32_to_f64>
800083a2:	14 98       	mov	r8,r10
800083a4:	16 99       	mov	r9,r11
800083a6:	fa ea 00 04 	ld.d	r10,sp[4]
800083aa:	fe b0 f5 91 	rcall	80006ecc <__avr32_f64_add>
800083ae:	ee eb 00 00 	st.d	r7[0],r10
800083b2:	58 f5       	cp.w	r5,15
800083b4:	e0 89 00 2b 	brgt	8000840a <_strtod_r+0x4ea>
800083b8:	58 01       	cp.w	r1,0
800083ba:	e0 80 03 d1 	breq	80008b5c <_strtod_r+0xc3c>
800083be:	e0 8a 00 19 	brle	800083f0 <_strtod_r+0x4d0>
800083c2:	59 61       	cp.w	r1,22
800083c4:	e0 8a 00 0a 	brle	800083d8 <_strtod_r+0x4b8>
800083c8:	ea 08 11 0f 	rsub	r8,r5,15
800083cc:	f0 c9 ff ea 	sub	r9,r8,-22
800083d0:	12 31       	cp.w	r1,r9
800083d2:	e0 89 00 1c 	brgt	8000840a <_strtod_r+0x4ea>
800083d6:	10 11       	sub	r1,r8
800083d8:	fe c8 dc dc 	sub	r8,pc,-8996
800083dc:	fa ea 00 48 	ld.d	r10,sp[72]
800083e0:	f0 01 02 38 	ld.d	r8,r8[r1<<0x3]
800083e4:	fe b0 f3 ba 	rcall	80006b58 <__avr32_f64_mul>
800083e8:	ee eb 00 00 	st.d	r7[0],r10
800083ec:	e0 8f 03 b8 	bral	80008b5c <_strtod_r+0xc3c>
800083f0:	5a a1       	cp.w	r1,-22
800083f2:	c0 c5       	brlt	8000840a <_strtod_r+0x4ea>
800083f4:	fe c8 dc f8 	sub	r8,pc,-8968
800083f8:	fa ea 00 48 	ld.d	r10,sp[72]
800083fc:	f0 01 01 31 	sub	r1,r8,r1<<0x3
80008400:	e2 e8 00 00 	ld.d	r8,r1[0]
80008404:	fe b0 f6 dc 	rcall	800071bc <__avr32_f64_div>
80008408:	cf 0b       	rjmp	800083e8 <_strtod_r+0x4c8>
8000840a:	ea 02 01 04 	sub	r4,r5,r2
8000840e:	02 04       	add	r4,r1
80008410:	58 04       	cp.w	r4,0
80008412:	e0 8a 00 72 	brle	800084f6 <_strtod_r+0x5d6>
80008416:	f1 d4 c0 04 	bfextu	r8,r4,0x0,0x4
8000841a:	c0 b0       	breq	80008430 <_strtod_r+0x510>
8000841c:	fa ea 00 48 	ld.d	r10,sp[72]
80008420:	fe c9 dd 24 	sub	r9,pc,-8924
80008424:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80008428:	fe b0 f3 98 	rcall	80006b58 <__avr32_f64_mul>
8000842c:	ee eb 00 00 	st.d	r7[0],r10
80008430:	e0 14 ff f0 	andl	r4,0xfff0
80008434:	e0 80 00 d2 	breq	800085d8 <_strtod_r+0x6b8>
80008438:	e0 44 01 34 	cp.w	r4,308
8000843c:	e0 8a 00 15 	brle	80008466 <_strtod_r+0x546>
80008440:	30 05       	mov	r5,0
80008442:	0a 92       	mov	r2,r5
80008444:	50 75       	stdsp	sp[0x1c],r5
80008446:	0a 90       	mov	r0,r5
80008448:	c0 28       	rjmp	8000844c <_strtod_r+0x52c>
8000844a:	06 95       	mov	r5,r3
8000844c:	32 28       	mov	r8,34
8000844e:	8d 38       	st.w	r6[0xc],r8
80008450:	fc 18 7f f0 	movh	r8,0x7ff0
80008454:	8f 08       	st.w	r7[0x0],r8
80008456:	30 08       	mov	r8,0
80008458:	8f 18       	st.w	r7[0x4],r8
8000845a:	40 7a       	lddsp	r10,sp[0x1c]
8000845c:	58 0a       	cp.w	r10,0
8000845e:	e0 81 03 6b 	brne	80008b34 <_strtod_r+0xc14>
80008462:	e0 8f 03 7d 	bral	80008b5c <_strtod_r+0xc3c>
80008466:	fa e8 00 48 	ld.d	r8,sp[72]
8000846a:	a5 44       	asr	r4,0x4
8000846c:	fa e9 00 04 	st.d	sp[4],r8
80008470:	fe c2 dc ac 	sub	r2,pc,-9044
80008474:	30 00       	mov	r0,0
80008476:	c0 f8       	rjmp	80008494 <_strtod_r+0x574>
80008478:	2f f0       	sub	r0,-1
8000847a:	ed b4 00 00 	bld	r4,0x0
8000847e:	c0 91       	brne	80008490 <_strtod_r+0x570>
80008480:	fa ea 00 04 	ld.d	r10,sp[4]
80008484:	e4 e8 00 00 	ld.d	r8,r2[0]
80008488:	fe b0 f3 68 	rcall	80006b58 <__avr32_f64_mul>
8000848c:	ee eb 00 00 	st.d	r7[0],r10
80008490:	a1 54       	asr	r4,0x1
80008492:	2f 82       	sub	r2,-8
80008494:	58 14       	cp.w	r4,1
80008496:	fe 99 ff f1 	brgt	80008478 <_strtod_r+0x558>
8000849a:	41 24       	lddsp	r4,sp[0x48]
8000849c:	fc 18 fc b0 	movh	r8,0xfcb0
800084a0:	e8 08 00 08 	add	r8,r4,r8
800084a4:	8f 08       	st.w	r7[0x0],r8
800084a6:	fe c8 dc e2 	sub	r8,pc,-8990
800084aa:	fa ea 00 48 	ld.d	r10,sp[72]
800084ae:	f0 00 02 38 	ld.d	r8,r8[r0<<0x3]
800084b2:	fe b0 f3 53 	rcall	80006b58 <__avr32_f64_mul>
800084b6:	ee eb 00 00 	st.d	r7[0],r10
800084ba:	08 98       	mov	r8,r4
800084bc:	fc 1e 7c a0 	movh	lr,0x7ca0
800084c0:	e6 18 7f f0 	andh	r8,0x7ff0,COH
800084c4:	1c 38       	cp.w	r8,lr
800084c6:	fe 9b ff bd 	brhi	80008440 <_strtod_r+0x520>
800084ca:	fc 1c 7c 90 	movh	r12,0x7c90
800084ce:	18 38       	cp.w	r8,r12
800084d0:	e0 88 00 0c 	brls	800084e8 <_strtod_r+0x5c8>
800084d4:	e0 68 ff ff 	mov	r8,65535
800084d8:	ea 18 7f ef 	orh	r8,0x7fef
800084dc:	8f 08       	st.w	r7[0x0],r8
800084de:	3f f8       	mov	r8,-1
800084e0:	8f 18       	st.w	r7[0x4],r8
800084e2:	30 0b       	mov	r11,0
800084e4:	50 1b       	stdsp	sp[0x4],r11
800084e6:	c7 b8       	rjmp	800085dc <_strtod_r+0x6bc>
800084e8:	fc 18 03 50 	movh	r8,0x350
800084ec:	10 04       	add	r4,r8
800084ee:	8f 04       	st.w	r7[0x0],r4
800084f0:	30 0a       	mov	r10,0
800084f2:	50 1a       	stdsp	sp[0x4],r10
800084f4:	c7 48       	rjmp	800085dc <_strtod_r+0x6bc>
800084f6:	58 04       	cp.w	r4,0
800084f8:	c7 00       	breq	800085d8 <_strtod_r+0x6b8>
800084fa:	5c 34       	neg	r4
800084fc:	f1 d4 c0 04 	bfextu	r8,r4,0x0,0x4
80008500:	c0 b0       	breq	80008516 <_strtod_r+0x5f6>
80008502:	fa ea 00 48 	ld.d	r10,sp[72]
80008506:	fe c9 de 0a 	sub	r9,pc,-8694
8000850a:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
8000850e:	fe b0 f6 57 	rcall	800071bc <__avr32_f64_div>
80008512:	ee eb 00 00 	st.d	r7[0],r10
80008516:	a5 44       	asr	r4,0x4
80008518:	c6 00       	breq	800085d8 <_strtod_r+0x6b8>
8000851a:	59 f4       	cp.w	r4,31
8000851c:	e0 89 00 4c 	brgt	800085b4 <_strtod_r+0x694>
80008520:	08 98       	mov	r8,r4
80008522:	e2 18 00 10 	andl	r8,0x10,COH
80008526:	f9 b8 01 6a 	movne	r8,106
8000852a:	fe c2 de de 	sub	r2,pc,-8482
8000852e:	50 18       	stdsp	sp[0x4],r8
80008530:	fa e8 00 48 	ld.d	r8,sp[72]
80008534:	fa e9 00 0c 	st.d	sp[12],r8
80008538:	c0 f8       	rjmp	80008556 <_strtod_r+0x636>
8000853a:	d7 03       	nop
8000853c:	ed b4 00 00 	bld	r4,0x0
80008540:	c0 91       	brne	80008552 <_strtod_r+0x632>
80008542:	fa ea 00 0c 	ld.d	r10,sp[12]
80008546:	e4 e8 00 00 	ld.d	r8,r2[0]
8000854a:	fe b0 f3 07 	rcall	80006b58 <__avr32_f64_mul>
8000854e:	ee eb 00 00 	st.d	r7[0],r10
80008552:	a1 54       	asr	r4,0x1
80008554:	2f 82       	sub	r2,-8
80008556:	58 04       	cp.w	r4,0
80008558:	fe 99 ff f2 	brgt	8000853c <_strtod_r+0x61c>
8000855c:	40 18       	lddsp	r8,sp[0x4]
8000855e:	58 08       	cp.w	r8,0
80008560:	c2 30       	breq	800085a6 <_strtod_r+0x686>
80008562:	41 29       	lddsp	r9,sp[0x48]
80008564:	f1 d9 c2 8b 	bfextu	r8,r9,0x14,0xb
80008568:	f0 08 11 6b 	rsub	r8,r8,107
8000856c:	58 08       	cp.w	r8,0
8000856e:	e0 8a 00 1c 	brle	800085a6 <_strtod_r+0x686>
80008572:	59 f8       	cp.w	r8,31
80008574:	e0 8a 00 13 	brle	8000859a <_strtod_r+0x67a>
80008578:	30 0a       	mov	r10,0
8000857a:	8f 1a       	st.w	r7[0x4],r10
8000857c:	e0 48 00 34 	cp.w	r8,52
80008580:	e0 8a 00 06 	brle	8000858c <_strtod_r+0x66c>
80008584:	fc 18 03 70 	movh	r8,0x370
80008588:	8f 08       	st.w	r7[0x0],r8
8000858a:	c0 e8       	rjmp	800085a6 <_strtod_r+0x686>
8000858c:	3f fa       	mov	r10,-1
8000858e:	f4 08 09 48 	lsl	r8,r10,r8
80008592:	f1 e9 00 09 	and	r9,r8,r9
80008596:	8f 09       	st.w	r7[0x0],r9
80008598:	c0 78       	rjmp	800085a6 <_strtod_r+0x686>
8000859a:	3f f9       	mov	r9,-1
8000859c:	f2 08 09 48 	lsl	r8,r9,r8
800085a0:	41 39       	lddsp	r9,sp[0x4c]
800085a2:	12 68       	and	r8,r9
800085a4:	8f 18       	st.w	r7[0x4],r8
800085a6:	30 08       	mov	r8,0
800085a8:	30 09       	mov	r9,0
800085aa:	fa ea 00 48 	ld.d	r10,sp[72]
800085ae:	fe b0 f5 8b 	rcall	800070c4 <__avr32_f64_cmp_eq>
800085b2:	c1 50       	breq	800085dc <_strtod_r+0x6bc>
800085b4:	30 05       	mov	r5,0
800085b6:	0a 92       	mov	r2,r5
800085b8:	50 75       	stdsp	sp[0x1c],r5
800085ba:	0a 90       	mov	r0,r5
800085bc:	c0 28       	rjmp	800085c0 <_strtod_r+0x6a0>
800085be:	06 95       	mov	r5,r3
800085c0:	30 08       	mov	r8,0
800085c2:	30 09       	mov	r9,0
800085c4:	ee e9 00 00 	st.d	r7[0],r8
800085c8:	32 28       	mov	r8,34
800085ca:	8d 38       	st.w	r6[0xc],r8
800085cc:	40 71       	lddsp	r1,sp[0x1c]
800085ce:	58 01       	cp.w	r1,0
800085d0:	e0 81 02 b2 	brne	80008b34 <_strtod_r+0xc14>
800085d4:	e0 8f 02 c4 	bral	80008b5c <_strtod_r+0xc3c>
800085d8:	30 0e       	mov	lr,0
800085da:	50 1e       	stdsp	sp[0x4],lr
800085dc:	06 98       	mov	r8,r3
800085de:	0a 99       	mov	r9,r5
800085e0:	40 5a       	lddsp	r10,sp[0x14]
800085e2:	40 7b       	lddsp	r11,sp[0x1c]
800085e4:	0c 9c       	mov	r12,r6
800085e6:	e0 a0 0b dd 	rcall	80009da0 <__s2b>
800085ea:	50 7c       	stdsp	sp[0x1c],r12
800085ec:	2f 4c       	sub	r12,-12
800085ee:	50 dc       	stdsp	sp[0x34],r12
800085f0:	e2 0c 11 00 	rsub	r12,r1,0
800085f4:	50 cc       	stdsp	sp[0x30],r12
800085f6:	40 7a       	lddsp	r10,sp[0x1c]
800085f8:	0c 9c       	mov	r12,r6
800085fa:	74 1b       	ld.w	r11,r10[0x4]
800085fc:	e0 a0 09 90 	rcall	8000991c <_Balloc>
80008600:	40 79       	lddsp	r9,sp[0x1c]
80008602:	40 db       	lddsp	r11,sp[0x34]
80008604:	72 4a       	ld.w	r10,r9[0x10]
80008606:	18 90       	mov	r0,r12
80008608:	2f ea       	sub	r10,-2
8000860a:	2f 4c       	sub	r12,-12
8000860c:	a3 6a       	lsl	r10,0x2
8000860e:	fe b0 fb 97 	rcall	80007d3c <memcpy>
80008612:	fa ea 00 48 	ld.d	r10,sp[72]
80008616:	fa c8 ff 9c 	sub	r8,sp,-100
8000861a:	fa c9 ff 98 	sub	r9,sp,-104
8000861e:	0c 9c       	mov	r12,r6
80008620:	e0 a0 09 b6 	rcall	8000998c <__d2b>
80008624:	30 1b       	mov	r11,1
80008626:	51 7c       	stdsp	sp[0x5c],r12
80008628:	0c 9c       	mov	r12,r6
8000862a:	e0 a0 0b 2f 	rcall	80009c88 <__i2b>
8000862e:	41 ab       	lddsp	r11,sp[0x68]
80008630:	58 01       	cp.w	r1,0
80008632:	f9 ba 04 00 	movge	r10,0
80008636:	e2 03 17 40 	movge	r3,r1
8000863a:	e2 05 17 40 	movge	r5,r1
8000863e:	f4 08 17 40 	movge	r8,r10
80008642:	f9 b3 05 00 	movlt	r3,0
80008646:	fb fa 50 0c 	ld.wlt	r10,sp[0x30]
8000864a:	f4 08 17 50 	movlt	r8,r10
8000864e:	e6 05 17 50 	movlt	r5,r3
80008652:	18 92       	mov	r2,r12
80008654:	58 0b       	cp.w	r11,0
80008656:	c0 45       	brlt	8000865e <_strtod_r+0x73e>
80008658:	f4 0b 00 08 	add	r8,r10,r11
8000865c:	c0 28       	rjmp	80008660 <_strtod_r+0x740>
8000865e:	16 15       	sub	r5,r11
80008660:	40 1e       	lddsp	lr,sp[0x4]
80008662:	41 99       	lddsp	r9,sp[0x64]
80008664:	1c 1b       	sub	r11,lr
80008666:	1c 05       	add	r5,lr
80008668:	f6 cc fb cd 	sub	r12,r11,-1075
8000866c:	f2 0e 11 36 	rsub	lr,r9,54
80008670:	f6 09 00 09 	add	r9,r11,r9
80008674:	fe 59 fc 02 	cp.w	r9,-1022
80008678:	fc 09 17 90 	movgt	r9,lr
8000867c:	f8 09 17 a0 	movle	r9,r12
80008680:	12 05       	add	r5,r9
80008682:	f2 08 00 04 	add	r4,r9,r8
80008686:	e8 05 0d 49 	min	r9,r4,r5
8000868a:	f2 08 0d 49 	min	r9,r9,r8
8000868e:	58 09       	cp.w	r9,0
80008690:	e0 89 00 04 	brgt	80008698 <_strtod_r+0x778>
80008694:	50 38       	stdsp	sp[0xc],r8
80008696:	c0 58       	rjmp	800086a0 <_strtod_r+0x780>
80008698:	12 18       	sub	r8,r9
8000869a:	12 14       	sub	r4,r9
8000869c:	50 38       	stdsp	sp[0xc],r8
8000869e:	12 15       	sub	r5,r9
800086a0:	58 0a       	cp.w	r10,0
800086a2:	c1 30       	breq	800086c8 <_strtod_r+0x7a8>
800086a4:	04 9b       	mov	r11,r2
800086a6:	0c 9c       	mov	r12,r6
800086a8:	e0 a0 0b 36 	rcall	80009d14 <__pow5mult>
800086ac:	41 7a       	lddsp	r10,sp[0x5c]
800086ae:	18 9b       	mov	r11,r12
800086b0:	18 92       	mov	r2,r12
800086b2:	0c 9c       	mov	r12,r6
800086b4:	e0 a0 0a 6a 	rcall	80009b88 <__multiply>
800086b8:	18 98       	mov	r8,r12
800086ba:	41 7b       	lddsp	r11,sp[0x5c]
800086bc:	50 08       	stdsp	sp[0x0],r8
800086be:	0c 9c       	mov	r12,r6
800086c0:	e0 a0 09 14 	rcall	800098e8 <_Bfree>
800086c4:	40 08       	lddsp	r8,sp[0x0]
800086c6:	51 78       	stdsp	sp[0x5c],r8
800086c8:	58 04       	cp.w	r4,0
800086ca:	e0 8a 00 08 	brle	800086da <_strtod_r+0x7ba>
800086ce:	08 9a       	mov	r10,r4
800086d0:	41 7b       	lddsp	r11,sp[0x5c]
800086d2:	0c 9c       	mov	r12,r6
800086d4:	e0 a0 0a 16 	rcall	80009b00 <__lshift>
800086d8:	51 7c       	stdsp	sp[0x5c],r12
800086da:	58 03       	cp.w	r3,0
800086dc:	c0 70       	breq	800086ea <_strtod_r+0x7ca>
800086de:	00 9b       	mov	r11,r0
800086e0:	06 9a       	mov	r10,r3
800086e2:	0c 9c       	mov	r12,r6
800086e4:	e0 a0 0b 18 	rcall	80009d14 <__pow5mult>
800086e8:	18 90       	mov	r0,r12
800086ea:	58 05       	cp.w	r5,0
800086ec:	e0 8a 00 08 	brle	800086fc <_strtod_r+0x7dc>
800086f0:	00 9b       	mov	r11,r0
800086f2:	0a 9a       	mov	r10,r5
800086f4:	0c 9c       	mov	r12,r6
800086f6:	e0 a0 0a 05 	rcall	80009b00 <__lshift>
800086fa:	18 90       	mov	r0,r12
800086fc:	40 3c       	lddsp	r12,sp[0xc]
800086fe:	58 0c       	cp.w	r12,0
80008700:	e0 8a 00 08 	brle	80008710 <_strtod_r+0x7f0>
80008704:	18 9a       	mov	r10,r12
80008706:	04 9b       	mov	r11,r2
80008708:	0c 9c       	mov	r12,r6
8000870a:	e0 a0 09 fb 	rcall	80009b00 <__lshift>
8000870e:	18 92       	mov	r2,r12
80008710:	00 9a       	mov	r10,r0
80008712:	41 7b       	lddsp	r11,sp[0x5c]
80008714:	0c 9c       	mov	r12,r6
80008716:	e0 a0 09 8d 	rcall	80009a30 <__mdiff>
8000871a:	30 09       	mov	r9,0
8000871c:	78 3a       	ld.w	r10,r12[0xc]
8000871e:	18 93       	mov	r3,r12
80008720:	04 9b       	mov	r11,r2
80008722:	50 3a       	stdsp	sp[0xc],r10
80008724:	99 39       	st.w	r12[0xc],r9
80008726:	e0 a0 07 f2 	rcall	8000970a <__mcmp>
8000872a:	c2 a4       	brge	8000877e <_strtod_r+0x85e>
8000872c:	06 95       	mov	r5,r3
8000872e:	40 38       	lddsp	r8,sp[0xc]
80008730:	58 08       	cp.w	r8,0
80008732:	e0 81 01 e5 	brne	80008afc <_strtod_r+0xbdc>
80008736:	41 38       	lddsp	r8,sp[0x4c]
80008738:	58 08       	cp.w	r8,0
8000873a:	e0 81 01 e1 	brne	80008afc <_strtod_r+0xbdc>
8000873e:	41 28       	lddsp	r8,sp[0x48]
80008740:	f3 d8 c0 14 	bfextu	r9,r8,0x0,0x14
80008744:	e0 81 01 dc 	brne	80008afc <_strtod_r+0xbdc>
80008748:	e6 18 7f f0 	andh	r8,0x7ff0,COH
8000874c:	fc 11 06 b0 	movh	r1,0x6b0
80008750:	02 38       	cp.w	r8,r1
80008752:	e0 88 01 d5 	brls	80008afc <_strtod_r+0xbdc>
80008756:	66 58       	ld.w	r8,r3[0x14]
80008758:	58 08       	cp.w	r8,0
8000875a:	c0 51       	brne	80008764 <_strtod_r+0x844>
8000875c:	66 48       	ld.w	r8,r3[0x10]
8000875e:	58 18       	cp.w	r8,1
80008760:	e0 8a 01 ce 	brle	80008afc <_strtod_r+0xbdc>
80008764:	0a 9b       	mov	r11,r5
80008766:	30 1a       	mov	r10,1
80008768:	0c 9c       	mov	r12,r6
8000876a:	e0 a0 09 cb 	rcall	80009b00 <__lshift>
8000876e:	04 9b       	mov	r11,r2
80008770:	18 95       	mov	r5,r12
80008772:	e0 a0 07 cc 	rcall	8000970a <__mcmp>
80008776:	e0 89 00 33 	brgt	800087dc <_strtod_r+0x8bc>
8000877a:	e0 8f 01 c1 	bral	80008afc <_strtod_r+0xbdc>
8000877e:	58 0c       	cp.w	r12,0
80008780:	c7 91       	brne	80008872 <_strtod_r+0x952>
80008782:	06 95       	mov	r5,r3
80008784:	41 28       	lddsp	r8,sp[0x48]
80008786:	40 3e       	lddsp	lr,sp[0xc]
80008788:	58 0e       	cp.w	lr,0
8000878a:	c2 30       	breq	800087d0 <_strtod_r+0x8b0>
8000878c:	f3 d8 c0 14 	bfextu	r9,r8,0x0,0x14
80008790:	ee 59 ff ff 	cp.w	r9,1048575
80008794:	c4 31       	brne	8000881a <_strtod_r+0x8fa>
80008796:	41 3a       	lddsp	r10,sp[0x4c]
80008798:	40 1c       	lddsp	r12,sp[0x4]
8000879a:	58 0c       	cp.w	r12,0
8000879c:	c1 00       	breq	800087bc <_strtod_r+0x89c>
8000879e:	10 99       	mov	r9,r8
800087a0:	fc 1b 06 a0 	movh	r11,0x6a0
800087a4:	e6 19 7f f0 	andh	r9,0x7ff0,COH
800087a8:	16 39       	cp.w	r9,r11
800087aa:	e0 8b 00 09 	brhi	800087bc <_strtod_r+0x89c>
800087ae:	b5 89       	lsr	r9,0x14
800087b0:	3f fb       	mov	r11,-1
800087b2:	f2 09 11 6b 	rsub	r9,r9,107
800087b6:	f6 09 09 49 	lsl	r9,r11,r9
800087ba:	c0 28       	rjmp	800087be <_strtod_r+0x89e>
800087bc:	3f f9       	mov	r9,-1
800087be:	12 3a       	cp.w	r10,r9
800087c0:	c2 d1       	brne	8000881a <_strtod_r+0x8fa>
800087c2:	e6 18 7f f0 	andh	r8,0x7ff0,COH
800087c6:	f0 28 00 00 	sub	r8,-1048576
800087ca:	8f 08       	st.w	r7[0x0],r8
800087cc:	30 08       	mov	r8,0
800087ce:	c2 48       	rjmp	80008816 <_strtod_r+0x8f6>
800087d0:	f1 d8 c0 14 	bfextu	r8,r8,0x0,0x14
800087d4:	c2 31       	brne	8000881a <_strtod_r+0x8fa>
800087d6:	41 38       	lddsp	r8,sp[0x4c]
800087d8:	58 08       	cp.w	r8,0
800087da:	c2 01       	brne	8000881a <_strtod_r+0x8fa>
800087dc:	40 1a       	lddsp	r10,sp[0x4]
800087de:	58 0a       	cp.w	r10,0
800087e0:	c0 f0       	breq	800087fe <_strtod_r+0x8de>
800087e2:	41 28       	lddsp	r8,sp[0x48]
800087e4:	fc 19 06 b0 	movh	r9,0x6b0
800087e8:	e6 18 7f f0 	andh	r8,0x7ff0,COH
800087ec:	12 38       	cp.w	r8,r9
800087ee:	e0 8b 00 08 	brhi	800087fe <_strtod_r+0x8de>
800087f2:	fc 11 03 70 	movh	r1,0x370
800087f6:	02 38       	cp.w	r8,r1
800087f8:	e0 8b 01 85 	brhi	80008b02 <_strtod_r+0xbe2>
800087fc:	ce 2a       	rjmp	800085c0 <_strtod_r+0x6a0>
800087fe:	41 28       	lddsp	r8,sp[0x48]
80008800:	f0 69 00 00 	mov	r9,-1048576
80008804:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80008808:	12 08       	add	r8,r9
8000880a:	ea 18 00 0f 	orh	r8,0xf
8000880e:	e8 18 ff ff 	orl	r8,0xffff
80008812:	8f 08       	st.w	r7[0x0],r8
80008814:	3f f8       	mov	r8,-1
80008816:	8f 18       	st.w	r7[0x4],r8
80008818:	c7 29       	rjmp	80008afc <_strtod_r+0xbdc>
8000881a:	41 38       	lddsp	r8,sp[0x4c]
8000881c:	ed b8 00 00 	bld	r8,0x0
80008820:	e0 81 01 6e 	brne	80008afc <_strtod_r+0xbdc>
80008824:	fa ea 00 48 	ld.d	r10,sp[72]
80008828:	fa eb 00 14 	st.d	sp[20],r10
8000882c:	40 3a       	lddsp	r10,sp[0xc]
8000882e:	58 0a       	cp.w	r10,0
80008830:	c0 e0       	breq	8000884c <_strtod_r+0x92c>
80008832:	fa ea 00 14 	ld.d	r10,sp[20]
80008836:	e0 a0 07 83 	rcall	8000973c <__ulp>
8000883a:	14 98       	mov	r8,r10
8000883c:	16 99       	mov	r9,r11
8000883e:	fa ea 00 14 	ld.d	r10,sp[20]
80008842:	fe b0 f3 45 	rcall	80006ecc <__avr32_f64_add>
80008846:	ee eb 00 00 	st.d	r7[0],r10
8000884a:	c5 99       	rjmp	80008afc <_strtod_r+0xbdc>
8000884c:	fa ea 00 14 	ld.d	r10,sp[20]
80008850:	e0 a0 07 76 	rcall	8000973c <__ulp>
80008854:	14 98       	mov	r8,r10
80008856:	16 99       	mov	r9,r11
80008858:	fa ea 00 14 	ld.d	r10,sp[20]
8000885c:	fe b0 f2 6a 	rcall	80006d30 <__avr32_f64_sub>
80008860:	30 08       	mov	r8,0
80008862:	ee eb 00 00 	st.d	r7[0],r10
80008866:	30 09       	mov	r9,0
80008868:	fe b0 f4 2e 	rcall	800070c4 <__avr32_f64_cmp_eq>
8000886c:	e0 80 01 48 	breq	80008afc <_strtod_r+0xbdc>
80008870:	ca 8a       	rjmp	800085c0 <_strtod_r+0x6a0>
80008872:	04 9b       	mov	r11,r2
80008874:	06 9c       	mov	r12,r3
80008876:	e0 a0 07 d3 	rcall	8000981c <__ratio>
8000887a:	16 95       	mov	r5,r11
8000887c:	14 94       	mov	r4,r10
8000887e:	14 98       	mov	r8,r10
80008880:	0a 99       	mov	r9,r5
80008882:	30 0a       	mov	r10,0
80008884:	fc 1b 40 00 	movh	r11,0x4000
80008888:	fe b0 f4 31 	rcall	800070ea <__avr32_f64_cmp_ge>
8000888c:	c3 a0       	breq	80008900 <_strtod_r+0x9e0>
8000888e:	40 39       	lddsp	r9,sp[0xc]
80008890:	58 09       	cp.w	r9,0
80008892:	c0 50       	breq	8000889c <_strtod_r+0x97c>
80008894:	30 08       	mov	r8,0
80008896:	fc 19 3f f0 	movh	r9,0x3ff0
8000889a:	c1 28       	rjmp	800088be <_strtod_r+0x99e>
8000889c:	41 38       	lddsp	r8,sp[0x4c]
8000889e:	58 08       	cp.w	r8,0
800088a0:	c0 61       	brne	800088ac <_strtod_r+0x98c>
800088a2:	41 28       	lddsp	r8,sp[0x48]
800088a4:	f1 d8 c0 14 	bfextu	r8,r8,0x0,0x14
800088a8:	c0 81       	brne	800088b8 <_strtod_r+0x998>
800088aa:	c1 08       	rjmp	800088ca <_strtod_r+0x9aa>
800088ac:	58 18       	cp.w	r8,1
800088ae:	c0 51       	brne	800088b8 <_strtod_r+0x998>
800088b0:	41 28       	lddsp	r8,sp[0x48]
800088b2:	58 08       	cp.w	r8,0
800088b4:	fe 90 fe 85 	breq	800085be <_strtod_r+0x69e>
800088b8:	30 08       	mov	r8,0
800088ba:	fc 19 bf f0 	movh	r9,0xbff0
800088be:	fa e9 00 50 	st.d	sp[80],r8
800088c2:	fc 15 3f f0 	movh	r5,0x3ff0
800088c6:	30 04       	mov	r4,0
800088c8:	c3 18       	rjmp	8000892a <_strtod_r+0xa0a>
800088ca:	30 08       	mov	r8,0
800088cc:	fc 19 3f f0 	movh	r9,0x3ff0
800088d0:	08 9a       	mov	r10,r4
800088d2:	0a 9b       	mov	r11,r5
800088d4:	fe b0 f4 3f 	rcall	80007152 <__avr32_f64_cmp_lt>
800088d8:	c0 50       	breq	800088e2 <_strtod_r+0x9c2>
800088da:	fc 15 3f e0 	movh	r5,0x3fe0
800088de:	30 04       	mov	r4,0
800088e0:	c0 a8       	rjmp	800088f4 <_strtod_r+0x9d4>
800088e2:	08 9a       	mov	r10,r4
800088e4:	0a 9b       	mov	r11,r5
800088e6:	30 08       	mov	r8,0
800088e8:	fc 19 3f e0 	movh	r9,0x3fe0
800088ec:	fe b0 f1 36 	rcall	80006b58 <__avr32_f64_mul>
800088f0:	16 95       	mov	r5,r11
800088f2:	14 94       	mov	r4,r10
800088f4:	0a 98       	mov	r8,r5
800088f6:	51 54       	stdsp	sp[0x54],r4
800088f8:	ee 18 80 00 	eorh	r8,0x8000
800088fc:	51 48       	stdsp	sp[0x50],r8
800088fe:	c1 68       	rjmp	8000892a <_strtod_r+0xa0a>
80008900:	08 9a       	mov	r10,r4
80008902:	0a 9b       	mov	r11,r5
80008904:	30 08       	mov	r8,0
80008906:	fc 19 3f e0 	movh	r9,0x3fe0
8000890a:	fe b0 f1 27 	rcall	80006b58 <__avr32_f64_mul>
8000890e:	40 3e       	lddsp	lr,sp[0xc]
80008910:	16 95       	mov	r5,r11
80008912:	14 94       	mov	r4,r10
80008914:	0a 9a       	mov	r10,r5
80008916:	08 98       	mov	r8,r4
80008918:	ee 1a 80 00 	eorh	r10,0x8000
8000891c:	58 0e       	cp.w	lr,0
8000891e:	f4 09 17 00 	moveq	r9,r10
80008922:	ea 09 17 10 	movne	r9,r5
80008926:	fa e9 00 50 	st.d	sp[80],r8
8000892a:	41 29       	lddsp	r9,sp[0x48]
8000892c:	12 9c       	mov	r12,r9
8000892e:	e6 1c 7f f0 	andh	r12,0x7ff0,COH
80008932:	50 5c       	stdsp	sp[0x14],r12
80008934:	fc 1b 7f e0 	movh	r11,0x7fe0
80008938:	16 3c       	cp.w	r12,r11
8000893a:	c4 11       	brne	800089bc <_strtod_r+0xa9c>
8000893c:	fa ea 00 48 	ld.d	r10,sp[72]
80008940:	fc 18 fc b0 	movh	r8,0xfcb0
80008944:	fa eb 00 40 	st.d	sp[64],r10
80008948:	f2 08 00 08 	add	r8,r9,r8
8000894c:	8f 08       	st.w	r7[0x0],r8
8000894e:	fa e8 00 50 	ld.d	r8,sp[80]
80008952:	fa e9 00 24 	st.d	sp[36],r8
80008956:	e0 a0 06 f3 	rcall	8000973c <__ulp>
8000895a:	14 98       	mov	r8,r10
8000895c:	16 99       	mov	r9,r11
8000895e:	fa ea 00 24 	ld.d	r10,sp[36]
80008962:	fe b0 f0 fb 	rcall	80006b58 <__avr32_f64_mul>
80008966:	14 98       	mov	r8,r10
80008968:	16 99       	mov	r9,r11
8000896a:	fa ea 00 48 	ld.d	r10,sp[72]
8000896e:	fe b0 f2 af 	rcall	80006ecc <__avr32_f64_add>
80008972:	ee eb 00 00 	st.d	r7[0],r10
80008976:	e0 6e ff ff 	mov	lr,65535
8000897a:	ea 1e 7c 9f 	orh	lr,0x7c9f
8000897e:	41 28       	lddsp	r8,sp[0x48]
80008980:	10 99       	mov	r9,r8
80008982:	e6 19 7f f0 	andh	r9,0x7ff0,COH
80008986:	1c 39       	cp.w	r9,lr
80008988:	e0 88 00 15 	brls	800089b2 <_strtod_r+0xa92>
8000898c:	41 08       	lddsp	r8,sp[0x40]
8000898e:	e0 6c ff ff 	mov	r12,65535
80008992:	ea 1c 7f ef 	orh	r12,0x7fef
80008996:	18 38       	cp.w	r8,r12
80008998:	c0 51       	brne	800089a2 <_strtod_r+0xa82>
8000899a:	41 18       	lddsp	r8,sp[0x44]
8000899c:	5b f8       	cp.w	r8,-1
8000899e:	fe 90 fd 56 	breq	8000844a <_strtod_r+0x52a>
800089a2:	e0 68 ff ff 	mov	r8,65535
800089a6:	ea 18 7f ef 	orh	r8,0x7fef
800089aa:	8f 08       	st.w	r7[0x0],r8
800089ac:	3f f8       	mov	r8,-1
800089ae:	8f 18       	st.w	r7[0x4],r8
800089b0:	c9 48       	rjmp	80008ad8 <_strtod_r+0xbb8>
800089b2:	fc 19 03 50 	movh	r9,0x350
800089b6:	12 08       	add	r8,r9
800089b8:	8f 08       	st.w	r7[0x0],r8
800089ba:	c4 b8       	rjmp	80008a50 <_strtod_r+0xb30>
800089bc:	40 1b       	lddsp	r11,sp[0x4]
800089be:	40 5a       	lddsp	r10,sp[0x14]
800089c0:	58 0b       	cp.w	r11,0
800089c2:	5f 19       	srne	r9
800089c4:	fc 18 06 a0 	movh	r8,0x6a0
800089c8:	10 3a       	cp.w	r10,r8
800089ca:	5f 88       	srls	r8
800089cc:	f3 e8 00 08 	and	r8,r9,r8
800089d0:	c2 a0       	breq	80008a24 <_strtod_r+0xb04>
800089d2:	fc 1a ff c0 	movh	r10,0xffc0
800089d6:	e0 6b ff ff 	mov	r11,65535
800089da:	ea 1b 41 df 	orh	r11,0x41df
800089de:	0a 99       	mov	r9,r5
800089e0:	08 98       	mov	r8,r4
800089e2:	fe b0 f3 84 	rcall	800070ea <__avr32_f64_cmp_ge>
800089e6:	c1 70       	breq	80008a14 <_strtod_r+0xaf4>
800089e8:	0a 9b       	mov	r11,r5
800089ea:	08 9a       	mov	r10,r4
800089ec:	e0 a0 0a 42 	rcall	80009e70 <__avr32_f64_to_u32>
800089f0:	f9 bc 00 01 	moveq	r12,1
800089f4:	fe b0 f2 f4 	rcall	80006fdc <__avr32_u32_to_f64>
800089f8:	40 3e       	lddsp	lr,sp[0xc]
800089fa:	16 95       	mov	r5,r11
800089fc:	14 94       	mov	r4,r10
800089fe:	0a 9a       	mov	r10,r5
80008a00:	08 98       	mov	r8,r4
80008a02:	ee 1a 80 00 	eorh	r10,0x8000
80008a06:	58 0e       	cp.w	lr,0
80008a08:	f4 09 17 00 	moveq	r9,r10
80008a0c:	ea 09 17 10 	movne	r9,r5
80008a10:	fa e9 00 50 	st.d	sp[80],r8
80008a14:	41 49       	lddsp	r9,sp[0x50]
80008a16:	fc 18 06 b0 	movh	r8,0x6b0
80008a1a:	40 5c       	lddsp	r12,sp[0x14]
80008a1c:	f2 08 00 08 	add	r8,r9,r8
80008a20:	18 18       	sub	r8,r12
80008a22:	51 48       	stdsp	sp[0x50],r8
80008a24:	fa ea 00 50 	ld.d	r10,sp[80]
80008a28:	fa eb 00 24 	st.d	sp[36],r10
80008a2c:	fa ea 00 48 	ld.d	r10,sp[72]
80008a30:	e0 a0 06 86 	rcall	8000973c <__ulp>
80008a34:	14 98       	mov	r8,r10
80008a36:	16 99       	mov	r9,r11
80008a38:	fa ea 00 24 	ld.d	r10,sp[36]
80008a3c:	fe b0 f0 8e 	rcall	80006b58 <__avr32_f64_mul>
80008a40:	14 98       	mov	r8,r10
80008a42:	16 99       	mov	r9,r11
80008a44:	fa ea 00 48 	ld.d	r10,sp[72]
80008a48:	fe b0 f2 42 	rcall	80006ecc <__avr32_f64_add>
80008a4c:	ee eb 00 00 	st.d	r7[0],r10
80008a50:	41 2a       	lddsp	r10,sp[0x48]
80008a52:	50 9a       	stdsp	sp[0x24],r10
80008a54:	40 19       	lddsp	r9,sp[0x4]
80008a56:	58 09       	cp.w	r9,0
80008a58:	c4 01       	brne	80008ad8 <_strtod_r+0xbb8>
80008a5a:	14 98       	mov	r8,r10
80008a5c:	40 5e       	lddsp	lr,sp[0x14]
80008a5e:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80008a62:	10 3e       	cp.w	lr,r8
80008a64:	c3 a1       	brne	80008ad8 <_strtod_r+0xbb8>
80008a66:	0a 9b       	mov	r11,r5
80008a68:	08 9a       	mov	r10,r4
80008a6a:	e0 a0 0a 05 	rcall	80009e74 <__avr32_f64_to_s32>
80008a6e:	fe b0 f2 bb 	rcall	80006fe4 <__avr32_s32_to_f64>
80008a72:	14 98       	mov	r8,r10
80008a74:	16 99       	mov	r9,r11
80008a76:	08 9a       	mov	r10,r4
80008a78:	0a 9b       	mov	r11,r5
80008a7a:	fe b0 f1 5b 	rcall	80006d30 <__avr32_f64_sub>
80008a7e:	40 3c       	lddsp	r12,sp[0xc]
80008a80:	14 94       	mov	r4,r10
80008a82:	16 95       	mov	r5,r11
80008a84:	58 0c       	cp.w	r12,0
80008a86:	c0 81       	brne	80008a96 <_strtod_r+0xb76>
80008a88:	41 38       	lddsp	r8,sp[0x4c]
80008a8a:	58 08       	cp.w	r8,0
80008a8c:	c0 51       	brne	80008a96 <_strtod_r+0xb76>
80008a8e:	40 99       	lddsp	r9,sp[0x24]
80008a90:	f1 d9 c0 14 	bfextu	r8,r9,0x0,0x14
80008a94:	c1 70       	breq	80008ac2 <_strtod_r+0xba2>
80008a96:	e0 68 35 95 	mov	r8,13717
80008a9a:	ea 18 94 a0 	orh	r8,0x94a0
80008a9e:	e0 69 ff ff 	mov	r9,65535
80008aa2:	ea 19 3f df 	orh	r9,0x3fdf
80008aa6:	08 9a       	mov	r10,r4
80008aa8:	0a 9b       	mov	r11,r5
80008aaa:	fe b0 f3 54 	rcall	80007152 <__avr32_f64_cmp_lt>
80008aae:	c4 21       	brne	80008b32 <_strtod_r+0xc12>
80008ab0:	08 98       	mov	r8,r4
80008ab2:	0a 99       	mov	r9,r5
80008ab4:	e0 6a e5 35 	mov	r10,58677
80008ab8:	ea 1a 35 af 	orh	r10,0x35af
80008abc:	fc 1b 3f e0 	movh	r11,0x3fe0
80008ac0:	c0 98       	rjmp	80008ad2 <_strtod_r+0xbb2>
80008ac2:	e0 68 35 95 	mov	r8,13717
80008ac6:	ea 18 94 a0 	orh	r8,0x94a0
80008aca:	e0 69 ff ff 	mov	r9,65535
80008ace:	ea 19 3f cf 	orh	r9,0x3fcf
80008ad2:	fe b0 f3 40 	rcall	80007152 <__avr32_f64_cmp_lt>
80008ad6:	c2 e1       	brne	80008b32 <_strtod_r+0xc12>
80008ad8:	41 7b       	lddsp	r11,sp[0x5c]
80008ada:	0c 9c       	mov	r12,r6
80008adc:	e0 a0 07 06 	rcall	800098e8 <_Bfree>
80008ae0:	00 9b       	mov	r11,r0
80008ae2:	0c 9c       	mov	r12,r6
80008ae4:	e0 a0 07 02 	rcall	800098e8 <_Bfree>
80008ae8:	04 9b       	mov	r11,r2
80008aea:	0c 9c       	mov	r12,r6
80008aec:	e0 a0 06 fe 	rcall	800098e8 <_Bfree>
80008af0:	06 9b       	mov	r11,r3
80008af2:	0c 9c       	mov	r12,r6
80008af4:	e0 a0 06 fa 	rcall	800098e8 <_Bfree>
80008af8:	fe 9f fd 7f 	bral	800085f6 <_strtod_r+0x6d6>
80008afc:	40 18       	lddsp	r8,sp[0x4]
80008afe:	58 08       	cp.w	r8,0
80008b00:	c1 a0       	breq	80008b34 <_strtod_r+0xc14>
80008b02:	fc 19 39 50 	movh	r9,0x3950
80008b06:	fa ea 00 48 	ld.d	r10,sp[72]
80008b0a:	fa c8 ff c0 	sub	r8,sp,-64
80008b0e:	91 09       	st.w	r8[0x0],r9
80008b10:	30 09       	mov	r9,0
80008b12:	91 19       	st.w	r8[0x4],r9
80008b14:	fa e8 00 40 	ld.d	r8,sp[64]
80008b18:	fe b0 f0 20 	rcall	80006b58 <__avr32_f64_mul>
80008b1c:	ee eb 00 00 	st.d	r7[0],r10
80008b20:	41 28       	lddsp	r8,sp[0x48]
80008b22:	58 08       	cp.w	r8,0
80008b24:	c0 81       	brne	80008b34 <_strtod_r+0xc14>
80008b26:	41 38       	lddsp	r8,sp[0x4c]
80008b28:	58 08       	cp.w	r8,0
80008b2a:	c0 51       	brne	80008b34 <_strtod_r+0xc14>
80008b2c:	32 28       	mov	r8,34
80008b2e:	8d 38       	st.w	r6[0xc],r8
80008b30:	c0 28       	rjmp	80008b34 <_strtod_r+0xc14>
80008b32:	06 95       	mov	r5,r3
80008b34:	41 7b       	lddsp	r11,sp[0x5c]
80008b36:	0c 9c       	mov	r12,r6
80008b38:	e0 a0 06 d8 	rcall	800098e8 <_Bfree>
80008b3c:	00 9b       	mov	r11,r0
80008b3e:	0c 9c       	mov	r12,r6
80008b40:	e0 a0 06 d4 	rcall	800098e8 <_Bfree>
80008b44:	04 9b       	mov	r11,r2
80008b46:	0c 9c       	mov	r12,r6
80008b48:	e0 a0 06 d0 	rcall	800098e8 <_Bfree>
80008b4c:	40 7b       	lddsp	r11,sp[0x1c]
80008b4e:	0c 9c       	mov	r12,r6
80008b50:	e0 a0 06 cc 	rcall	800098e8 <_Bfree>
80008b54:	0a 9b       	mov	r11,r5
80008b56:	0c 9c       	mov	r12,r6
80008b58:	e0 a0 06 c8 	rcall	800098e8 <_Bfree>
80008b5c:	40 b1       	lddsp	r1,sp[0x2c]
80008b5e:	58 01       	cp.w	r1,0
80008b60:	fb f8 10 18 	ld.wne	r8,sp[0x60]
80008b64:	e3 f8 1a 00 	st.wne	r1[0x0],r8
80008b68:	40 8e       	lddsp	lr,sp[0x20]
80008b6a:	41 28       	lddsp	r8,sp[0x48]
80008b6c:	41 3a       	lddsp	r10,sp[0x4c]
80008b6e:	10 99       	mov	r9,r8
80008b70:	ee 19 80 00 	eorh	r9,0x8000
80008b74:	58 0e       	cp.w	lr,0
80008b76:	f0 0b 17 00 	moveq	r11,r8
80008b7a:	f2 0b 17 10 	movne	r11,r9
80008b7e:	2e 5d       	sub	sp,-108
80008b80:	d8 32       	popm	r0-r7,pc
80008b82:	d7 03       	nop

80008b84 <strtod>:
80008b84:	d4 01       	pushm	lr
80008b86:	e0 68 05 78 	mov	r8,1400
80008b8a:	16 9a       	mov	r10,r11
80008b8c:	18 9b       	mov	r11,r12
80008b8e:	70 0c       	ld.w	r12,r8[0x0]
80008b90:	fe b0 f9 c8 	rcall	80007f20 <_strtod_r>
80008b94:	d8 02       	popm	pc
80008b96:	d7 03       	nop

80008b98 <_init_argv>:
80008b98:	30 e8       	mov	r8,14
80008b9a:	d6 73       	breakpoint
80008b9c:	3f fc       	mov	r12,-1
80008b9e:	35 8b       	mov	r11,88
80008ba0:	5e fc       	retal	r12

80008ba2 <_exit>:
80008ba2:	30 d8       	mov	r8,13
80008ba4:	d6 73       	breakpoint
80008ba6:	3f fc       	mov	r12,-1
80008ba8:	35 8b       	mov	r11,88
80008baa:	c0 08       	rjmp	80008baa <_exit+0x8>

80008bac <_gettimeofday_host>:
80008bac:	30 a8       	mov	r8,10
80008bae:	d6 73       	breakpoint
80008bb0:	3f fc       	mov	r12,-1
80008bb2:	35 8b       	mov	r11,88
80008bb4:	58 0c       	cp.w	r12,0
80008bb6:	5e 4c       	retge	r12
80008bb8:	e0 6a 55 fc 	mov	r10,22012
80008bbc:	95 0b       	st.w	r10[0x0],r11
80008bbe:	5e fc       	retal	r12

80008bc0 <_gettimeofday>:
80008bc0:	d4 21       	pushm	r4-r7,lr
80008bc2:	20 3d       	sub	sp,12
80008bc4:	18 97       	mov	r7,r12
80008bc6:	1a 9c       	mov	r12,sp
80008bc8:	cf 2f       	rcall	80008bac <_gettimeofday_host>
80008bca:	c0 34       	brge	80008bd0 <_gettimeofday+0x10>
80008bcc:	3f fc       	mov	r12,-1
80008bce:	c0 68       	rjmp	80008bda <_gettimeofday+0x1a>
80008bd0:	40 08       	lddsp	r8,sp[0x0]
80008bd2:	30 0c       	mov	r12,0
80008bd4:	8f 08       	st.w	r7[0x0],r8
80008bd6:	40 28       	lddsp	r8,sp[0x8]
80008bd8:	8f 18       	st.w	r7[0x4],r8
80008bda:	2f dd       	sub	sp,-12
80008bdc:	d8 22       	popm	r4-r7,pc
80008bde:	d7 03       	nop

80008be0 <_sbrk>:
80008be0:	d4 01       	pushm	lr
80008be2:	e0 68 0d 70 	mov	r8,3440
80008be6:	70 09       	ld.w	r9,r8[0x0]
80008be8:	58 09       	cp.w	r9,0
80008bea:	c0 41       	brne	80008bf2 <_sbrk+0x12>
80008bec:	e0 69 56 00 	mov	r9,22016
80008bf0:	91 09       	st.w	r8[0x0],r9
80008bf2:	e0 69 0d 70 	mov	r9,3440
80008bf6:	e0 6a f0 00 	mov	r10,61440
80008bfa:	72 08       	ld.w	r8,r9[0x0]
80008bfc:	f0 0c 00 0c 	add	r12,r8,r12
80008c00:	14 3c       	cp.w	r12,r10
80008c02:	e0 8b 00 04 	brhi	80008c0a <_sbrk+0x2a>
80008c06:	93 0c       	st.w	r9[0x0],r12
80008c08:	c0 68       	rjmp	80008c14 <_sbrk+0x34>
80008c0a:	fe b0 f6 59 	rcall	800078bc <__errno>
80008c0e:	30 c8       	mov	r8,12
80008c10:	99 08       	st.w	r12[0x0],r8
80008c12:	3f f8       	mov	r8,-1
80008c14:	10 9c       	mov	r12,r8
80008c16:	d8 02       	popm	pc

80008c18 <gettimeofday>:
80008c18:	d4 01       	pushm	lr
80008c1a:	cd 3f       	rcall	80008bc0 <_gettimeofday>
80008c1c:	d8 02       	popm	pc
80008c1e:	d7 03       	nop

80008c20 <__register_exitproc>:
80008c20:	d4 31       	pushm	r0-r7,lr
80008c22:	fe c8 e6 06 	sub	r8,pc,-6650
80008c26:	70 03       	ld.w	r3,r8[0x0]
80008c28:	67 24       	ld.w	r4,r3[0x48]
80008c2a:	e6 c8 ff b4 	sub	r8,r3,-76
80008c2e:	58 04       	cp.w	r4,0
80008c30:	f0 04 17 00 	moveq	r4,r8
80008c34:	e7 f4 0a 12 	st.weq	r3[0x48],r4
80008c38:	18 97       	mov	r7,r12
80008c3a:	16 96       	mov	r6,r11
80008c3c:	14 95       	mov	r5,r10
80008c3e:	12 92       	mov	r2,r9
80008c40:	68 18       	ld.w	r8,r4[0x4]
80008c42:	59 f8       	cp.w	r8,31
80008c44:	e0 8a 00 0e 	brle	80008c60 <__register_exitproc+0x40>
80008c48:	e0 6c 00 8c 	mov	r12,140
80008c4c:	fe b0 f6 56 	rcall	800078f8 <malloc>
80008c50:	18 94       	mov	r4,r12
80008c52:	c3 80       	breq	80008cc2 <__register_exitproc+0xa2>
80008c54:	67 28       	ld.w	r8,r3[0x48]
80008c56:	99 08       	st.w	r12[0x0],r8
80008c58:	e7 4c 00 48 	st.w	r3[72],r12
80008c5c:	30 08       	mov	r8,0
80008c5e:	99 18       	st.w	r12[0x4],r8
80008c60:	58 07       	cp.w	r7,0
80008c62:	c2 70       	breq	80008cb0 <__register_exitproc+0x90>
80008c64:	e8 fc 00 88 	ld.w	r12,r4[136]
80008c68:	58 0c       	cp.w	r12,0
80008c6a:	c0 d1       	brne	80008c84 <__register_exitproc+0x64>
80008c6c:	e0 6c 01 08 	mov	r12,264
80008c70:	fe b0 f6 44 	rcall	800078f8 <malloc>
80008c74:	c2 70       	breq	80008cc2 <__register_exitproc+0xa2>
80008c76:	30 08       	mov	r8,0
80008c78:	e9 4c 00 88 	st.w	r4[136],r12
80008c7c:	f9 48 01 04 	st.w	r12[260],r8
80008c80:	f9 48 01 00 	st.w	r12[256],r8
80008c84:	68 18       	ld.w	r8,r4[0x4]
80008c86:	f0 c9 ff e0 	sub	r9,r8,-32
80008c8a:	f8 08 09 25 	st.w	r12[r8<<0x2],r5
80008c8e:	f8 09 09 22 	st.w	r12[r9<<0x2],r2
80008c92:	30 1a       	mov	r10,1
80008c94:	f8 f9 01 00 	ld.w	r9,r12[256]
80008c98:	f4 08 09 48 	lsl	r8,r10,r8
80008c9c:	10 49       	or	r9,r8
80008c9e:	f9 49 01 00 	st.w	r12[256],r9
80008ca2:	58 27       	cp.w	r7,2
80008ca4:	f9 f9 00 41 	ld.weq	r9,r12[0x104]
80008ca8:	f3 d8 e0 38 	oreq	r8,r9,r8
80008cac:	f9 f8 0a 41 	st.weq	r12[0x104],r8
80008cb0:	68 18       	ld.w	r8,r4[0x4]
80008cb2:	30 0c       	mov	r12,0
80008cb4:	f0 c9 ff ff 	sub	r9,r8,-1
80008cb8:	2f e8       	sub	r8,-2
80008cba:	89 19       	st.w	r4[0x4],r9
80008cbc:	e8 08 09 26 	st.w	r4[r8<<0x2],r6
80008cc0:	d8 32       	popm	r0-r7,pc
80008cc2:	dc 3a       	popm	r0-r7,pc,r12=-1

80008cc4 <__call_exitprocs>:
80008cc4:	d4 31       	pushm	r0-r7,lr
80008cc6:	20 3d       	sub	sp,12
80008cc8:	fe c8 e6 ac 	sub	r8,pc,-6484
80008ccc:	50 2c       	stdsp	sp[0x8],r12
80008cce:	70 08       	ld.w	r8,r8[0x0]
80008cd0:	16 91       	mov	r1,r11
80008cd2:	50 08       	stdsp	sp[0x0],r8
80008cd4:	2b 88       	sub	r8,-72
80008cd6:	50 18       	stdsp	sp[0x4],r8
80008cd8:	40 0a       	lddsp	r10,sp[0x0]
80008cda:	40 14       	lddsp	r4,sp[0x4]
80008cdc:	75 27       	ld.w	r7,r10[0x48]
80008cde:	c5 58       	rjmp	80008d88 <__call_exitprocs+0xc4>
80008ce0:	6e 15       	ld.w	r5,r7[0x4]
80008ce2:	ee f6 00 88 	ld.w	r6,r7[136]
80008ce6:	ea c2 ff ff 	sub	r2,r5,-1
80008cea:	20 15       	sub	r5,1
80008cec:	ee 02 00 22 	add	r2,r7,r2<<0x2
80008cf0:	ec 05 00 23 	add	r3,r6,r5<<0x2
80008cf4:	c3 58       	rjmp	80008d5e <__call_exitprocs+0x9a>
80008cf6:	58 01       	cp.w	r1,0
80008cf8:	c0 70       	breq	80008d06 <__call_exitprocs+0x42>
80008cfa:	58 06       	cp.w	r6,0
80008cfc:	c2 e0       	breq	80008d58 <__call_exitprocs+0x94>
80008cfe:	e6 f8 00 80 	ld.w	r8,r3[128]
80008d02:	02 38       	cp.w	r8,r1
80008d04:	c2 a1       	brne	80008d58 <__call_exitprocs+0x94>
80008d06:	6e 19       	ld.w	r9,r7[0x4]
80008d08:	64 08       	ld.w	r8,r2[0x0]
80008d0a:	20 19       	sub	r9,1
80008d0c:	12 35       	cp.w	r5,r9
80008d0e:	ef f5 0a 01 	st.weq	r7[0x4],r5
80008d12:	f9 b9 01 00 	movne	r9,0
80008d16:	e5 f9 1a 00 	st.wne	r2[0x0],r9
80008d1a:	58 08       	cp.w	r8,0
80008d1c:	c1 e0       	breq	80008d58 <__call_exitprocs+0x94>
80008d1e:	6e 10       	ld.w	r0,r7[0x4]
80008d20:	58 06       	cp.w	r6,0
80008d22:	c0 90       	breq	80008d34 <__call_exitprocs+0x70>
80008d24:	30 1a       	mov	r10,1
80008d26:	f4 05 09 49 	lsl	r9,r10,r5
80008d2a:	ec fa 01 00 	ld.w	r10,r6[256]
80008d2e:	f3 ea 00 0a 	and	r10,r9,r10
80008d32:	c0 31       	brne	80008d38 <__call_exitprocs+0x74>
80008d34:	5d 18       	icall	r8
80008d36:	c0 b8       	rjmp	80008d4c <__call_exitprocs+0x88>
80008d38:	ec fa 01 04 	ld.w	r10,r6[260]
80008d3c:	66 0b       	ld.w	r11,r3[0x0]
80008d3e:	14 69       	and	r9,r10
80008d40:	c0 41       	brne	80008d48 <__call_exitprocs+0x84>
80008d42:	40 2c       	lddsp	r12,sp[0x8]
80008d44:	5d 18       	icall	r8
80008d46:	c0 38       	rjmp	80008d4c <__call_exitprocs+0x88>
80008d48:	16 9c       	mov	r12,r11
80008d4a:	5d 18       	icall	r8
80008d4c:	6e 18       	ld.w	r8,r7[0x4]
80008d4e:	10 30       	cp.w	r0,r8
80008d50:	cc 41       	brne	80008cd8 <__call_exitprocs+0x14>
80008d52:	68 08       	ld.w	r8,r4[0x0]
80008d54:	0e 38       	cp.w	r8,r7
80008d56:	cc 11       	brne	80008cd8 <__call_exitprocs+0x14>
80008d58:	20 15       	sub	r5,1
80008d5a:	20 43       	sub	r3,4
80008d5c:	20 42       	sub	r2,4
80008d5e:	58 05       	cp.w	r5,0
80008d60:	cc b4       	brge	80008cf6 <__call_exitprocs+0x32>
80008d62:	6e 18       	ld.w	r8,r7[0x4]
80008d64:	58 08       	cp.w	r8,0
80008d66:	c0 f1       	brne	80008d84 <__call_exitprocs+0xc0>
80008d68:	6e 08       	ld.w	r8,r7[0x0]
80008d6a:	58 08       	cp.w	r8,0
80008d6c:	c0 c0       	breq	80008d84 <__call_exitprocs+0xc0>
80008d6e:	89 08       	st.w	r4[0x0],r8
80008d70:	58 06       	cp.w	r6,0
80008d72:	c0 40       	breq	80008d7a <__call_exitprocs+0xb6>
80008d74:	0c 9c       	mov	r12,r6
80008d76:	fe b0 f5 b9 	rcall	800078e8 <free>
80008d7a:	0e 9c       	mov	r12,r7
80008d7c:	fe b0 f5 b6 	rcall	800078e8 <free>
80008d80:	68 07       	ld.w	r7,r4[0x0]
80008d82:	c0 38       	rjmp	80008d88 <__call_exitprocs+0xc4>
80008d84:	0e 94       	mov	r4,r7
80008d86:	6e 07       	ld.w	r7,r7[0x0]
80008d88:	58 07       	cp.w	r7,0
80008d8a:	ca b1       	brne	80008ce0 <__call_exitprocs+0x1c>
80008d8c:	2f dd       	sub	sp,-12
80008d8e:	d8 32       	popm	r0-r7,pc

80008d90 <_malloc_trim_r>:
80008d90:	d4 21       	pushm	r4-r7,lr
80008d92:	16 95       	mov	r5,r11
80008d94:	18 97       	mov	r7,r12
80008d96:	fe b0 e3 01 	rcall	80005398 <__malloc_lock>
80008d9a:	e0 64 05 7c 	mov	r4,1404
80008d9e:	68 28       	ld.w	r8,r4[0x8]
80008da0:	70 16       	ld.w	r6,r8[0x4]
80008da2:	e0 16 ff fc 	andl	r6,0xfffc
80008da6:	ec c8 ff 91 	sub	r8,r6,-111
80008daa:	f0 05 01 05 	sub	r5,r8,r5
80008dae:	e0 15 ff 80 	andl	r5,0xff80
80008db2:	ea c5 00 80 	sub	r5,r5,128
80008db6:	e0 45 00 7f 	cp.w	r5,127
80008dba:	e0 8a 00 25 	brle	80008e04 <_malloc_trim_r+0x74>
80008dbe:	30 0b       	mov	r11,0
80008dc0:	0e 9c       	mov	r12,r7
80008dc2:	fe b0 f8 69 	rcall	80007e94 <_sbrk_r>
80008dc6:	68 28       	ld.w	r8,r4[0x8]
80008dc8:	0c 08       	add	r8,r6
80008dca:	10 3c       	cp.w	r12,r8
80008dcc:	c1 c1       	brne	80008e04 <_malloc_trim_r+0x74>
80008dce:	ea 0b 11 00 	rsub	r11,r5,0
80008dd2:	0e 9c       	mov	r12,r7
80008dd4:	fe b0 f8 60 	rcall	80007e94 <_sbrk_r>
80008dd8:	5b fc       	cp.w	r12,-1
80008dda:	c1 91       	brne	80008e0c <_malloc_trim_r+0x7c>
80008ddc:	30 0b       	mov	r11,0
80008dde:	0e 9c       	mov	r12,r7
80008de0:	fe b0 f8 5a 	rcall	80007e94 <_sbrk_r>
80008de4:	68 28       	ld.w	r8,r4[0x8]
80008de6:	f8 08 01 09 	sub	r9,r12,r8
80008dea:	58 f9       	cp.w	r9,15
80008dec:	e0 8a 00 0c 	brle	80008e04 <_malloc_trim_r+0x74>
80008df0:	a1 a9       	sbr	r9,0x0
80008df2:	91 19       	st.w	r8[0x4],r9
80008df4:	e0 68 09 88 	mov	r8,2440
80008df8:	70 09       	ld.w	r9,r8[0x0]
80008dfa:	e0 68 0d 48 	mov	r8,3400
80008dfe:	f8 09 01 09 	sub	r9,r12,r9
80008e02:	91 09       	st.w	r8[0x0],r9
80008e04:	0e 9c       	mov	r12,r7
80008e06:	fe b0 e2 cf 	rcall	800053a4 <__malloc_unlock>
80008e0a:	d8 2a       	popm	r4-r7,pc,r12=0
80008e0c:	68 28       	ld.w	r8,r4[0x8]
80008e0e:	0a 16       	sub	r6,r5
80008e10:	a1 a6       	sbr	r6,0x0
80008e12:	91 16       	st.w	r8[0x4],r6
80008e14:	e0 68 0d 48 	mov	r8,3400
80008e18:	70 09       	ld.w	r9,r8[0x0]
80008e1a:	0a 19       	sub	r9,r5
80008e1c:	0e 9c       	mov	r12,r7
80008e1e:	91 09       	st.w	r8[0x0],r9
80008e20:	fe b0 e2 c2 	rcall	800053a4 <__malloc_unlock>
80008e24:	da 2a       	popm	r4-r7,pc,r12=1
80008e26:	d7 03       	nop

80008e28 <_free_r>:
80008e28:	d4 21       	pushm	r4-r7,lr
80008e2a:	16 96       	mov	r6,r11
80008e2c:	18 97       	mov	r7,r12
80008e2e:	58 0b       	cp.w	r11,0
80008e30:	e0 80 00 c0 	breq	80008fb0 <_free_r+0x188>
80008e34:	fe b0 e2 b2 	rcall	80005398 <__malloc_lock>
80008e38:	20 86       	sub	r6,8
80008e3a:	e0 6a 05 7c 	mov	r10,1404
80008e3e:	6c 18       	ld.w	r8,r6[0x4]
80008e40:	74 2e       	ld.w	lr,r10[0x8]
80008e42:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
80008e46:	a1 c8       	cbr	r8,0x0
80008e48:	ec 08 00 09 	add	r9,r6,r8
80008e4c:	72 1b       	ld.w	r11,r9[0x4]
80008e4e:	e0 1b ff fc 	andl	r11,0xfffc
80008e52:	1c 39       	cp.w	r9,lr
80008e54:	c1 e1       	brne	80008e90 <_free_r+0x68>
80008e56:	f6 08 00 08 	add	r8,r11,r8
80008e5a:	58 0c       	cp.w	r12,0
80008e5c:	c0 81       	brne	80008e6c <_free_r+0x44>
80008e5e:	6c 09       	ld.w	r9,r6[0x0]
80008e60:	12 16       	sub	r6,r9
80008e62:	12 08       	add	r8,r9
80008e64:	6c 3b       	ld.w	r11,r6[0xc]
80008e66:	6c 29       	ld.w	r9,r6[0x8]
80008e68:	97 29       	st.w	r11[0x8],r9
80008e6a:	93 3b       	st.w	r9[0xc],r11
80008e6c:	10 99       	mov	r9,r8
80008e6e:	95 26       	st.w	r10[0x8],r6
80008e70:	a1 a9       	sbr	r9,0x0
80008e72:	8d 19       	st.w	r6[0x4],r9
80008e74:	e0 69 09 84 	mov	r9,2436
80008e78:	72 09       	ld.w	r9,r9[0x0]
80008e7a:	12 38       	cp.w	r8,r9
80008e7c:	c0 63       	brcs	80008e88 <_free_r+0x60>
80008e7e:	e0 68 0d 44 	mov	r8,3396
80008e82:	0e 9c       	mov	r12,r7
80008e84:	70 0b       	ld.w	r11,r8[0x0]
80008e86:	c8 5f       	rcall	80008d90 <_malloc_trim_r>
80008e88:	0e 9c       	mov	r12,r7
80008e8a:	fe b0 e2 8d 	rcall	800053a4 <__malloc_unlock>
80008e8e:	d8 22       	popm	r4-r7,pc
80008e90:	93 1b       	st.w	r9[0x4],r11
80008e92:	58 0c       	cp.w	r12,0
80008e94:	c0 30       	breq	80008e9a <_free_r+0x72>
80008e96:	30 0c       	mov	r12,0
80008e98:	c1 08       	rjmp	80008eb8 <_free_r+0x90>
80008e9a:	6c 0e       	ld.w	lr,r6[0x0]
80008e9c:	f4 c5 ff f8 	sub	r5,r10,-8
80008ea0:	1c 16       	sub	r6,lr
80008ea2:	1c 08       	add	r8,lr
80008ea4:	6c 2e       	ld.w	lr,r6[0x8]
80008ea6:	0a 3e       	cp.w	lr,r5
80008ea8:	f9 bc 00 01 	moveq	r12,1
80008eac:	ed f5 10 03 	ld.wne	r5,r6[0xc]
80008eb0:	eb fe 1a 02 	st.wne	r5[0x8],lr
80008eb4:	fd f5 1a 03 	st.wne	lr[0xc],r5
80008eb8:	f2 0b 00 0e 	add	lr,r9,r11
80008ebc:	7c 1e       	ld.w	lr,lr[0x4]
80008ebe:	ed be 00 00 	bld	lr,0x0
80008ec2:	c1 40       	breq	80008eea <_free_r+0xc2>
80008ec4:	16 08       	add	r8,r11
80008ec6:	58 0c       	cp.w	r12,0
80008ec8:	c0 d1       	brne	80008ee2 <_free_r+0xba>
80008eca:	e0 6e 05 7c 	mov	lr,1404
80008ece:	72 2b       	ld.w	r11,r9[0x8]
80008ed0:	2f 8e       	sub	lr,-8
80008ed2:	1c 3b       	cp.w	r11,lr
80008ed4:	c0 71       	brne	80008ee2 <_free_r+0xba>
80008ed6:	97 36       	st.w	r11[0xc],r6
80008ed8:	97 26       	st.w	r11[0x8],r6
80008eda:	8d 2b       	st.w	r6[0x8],r11
80008edc:	8d 3b       	st.w	r6[0xc],r11
80008ede:	30 1c       	mov	r12,1
80008ee0:	c0 58       	rjmp	80008eea <_free_r+0xc2>
80008ee2:	72 2b       	ld.w	r11,r9[0x8]
80008ee4:	72 39       	ld.w	r9,r9[0xc]
80008ee6:	93 2b       	st.w	r9[0x8],r11
80008ee8:	97 39       	st.w	r11[0xc],r9
80008eea:	10 99       	mov	r9,r8
80008eec:	ec 08 09 08 	st.w	r6[r8],r8
80008ef0:	a1 a9       	sbr	r9,0x0
80008ef2:	8d 19       	st.w	r6[0x4],r9
80008ef4:	58 0c       	cp.w	r12,0
80008ef6:	c5 a1       	brne	80008faa <_free_r+0x182>
80008ef8:	e0 48 01 ff 	cp.w	r8,511
80008efc:	e0 8b 00 13 	brhi	80008f22 <_free_r+0xfa>
80008f00:	a3 98       	lsr	r8,0x3
80008f02:	f4 08 00 39 	add	r9,r10,r8<<0x3
80008f06:	72 2b       	ld.w	r11,r9[0x8]
80008f08:	8d 39       	st.w	r6[0xc],r9
80008f0a:	8d 2b       	st.w	r6[0x8],r11
80008f0c:	97 36       	st.w	r11[0xc],r6
80008f0e:	93 26       	st.w	r9[0x8],r6
80008f10:	a3 48       	asr	r8,0x2
80008f12:	74 19       	ld.w	r9,r10[0x4]
80008f14:	30 1b       	mov	r11,1
80008f16:	f6 08 09 48 	lsl	r8,r11,r8
80008f1a:	f3 e8 10 08 	or	r8,r9,r8
80008f1e:	95 18       	st.w	r10[0x4],r8
80008f20:	c4 58       	rjmp	80008faa <_free_r+0x182>
80008f22:	f0 0b 16 09 	lsr	r11,r8,0x9
80008f26:	58 4b       	cp.w	r11,4
80008f28:	e0 8b 00 06 	brhi	80008f34 <_free_r+0x10c>
80008f2c:	f0 0b 16 06 	lsr	r11,r8,0x6
80008f30:	2c 8b       	sub	r11,-56
80008f32:	c2 08       	rjmp	80008f72 <_free_r+0x14a>
80008f34:	59 4b       	cp.w	r11,20
80008f36:	e0 8b 00 04 	brhi	80008f3e <_free_r+0x116>
80008f3a:	2a 5b       	sub	r11,-91
80008f3c:	c1 b8       	rjmp	80008f72 <_free_r+0x14a>
80008f3e:	e0 4b 00 54 	cp.w	r11,84
80008f42:	e0 8b 00 06 	brhi	80008f4e <_free_r+0x126>
80008f46:	f0 0b 16 0c 	lsr	r11,r8,0xc
80008f4a:	29 2b       	sub	r11,-110
80008f4c:	c1 38       	rjmp	80008f72 <_free_r+0x14a>
80008f4e:	e0 4b 01 54 	cp.w	r11,340
80008f52:	e0 8b 00 06 	brhi	80008f5e <_free_r+0x136>
80008f56:	f0 0b 16 0f 	lsr	r11,r8,0xf
80008f5a:	28 9b       	sub	r11,-119
80008f5c:	c0 b8       	rjmp	80008f72 <_free_r+0x14a>
80008f5e:	e0 4b 05 54 	cp.w	r11,1364
80008f62:	e0 88 00 05 	brls	80008f6c <_free_r+0x144>
80008f66:	37 eb       	mov	r11,126
80008f68:	c0 58       	rjmp	80008f72 <_free_r+0x14a>
80008f6a:	d7 03       	nop
80008f6c:	f0 0b 16 12 	lsr	r11,r8,0x12
80008f70:	28 4b       	sub	r11,-124
80008f72:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
80008f76:	78 29       	ld.w	r9,r12[0x8]
80008f78:	18 39       	cp.w	r9,r12
80008f7a:	c0 e1       	brne	80008f96 <_free_r+0x16e>
80008f7c:	74 18       	ld.w	r8,r10[0x4]
80008f7e:	a3 4b       	asr	r11,0x2
80008f80:	30 1c       	mov	r12,1
80008f82:	f8 0b 09 4b 	lsl	r11,r12,r11
80008f86:	f1 eb 10 0b 	or	r11,r8,r11
80008f8a:	12 98       	mov	r8,r9
80008f8c:	95 1b       	st.w	r10[0x4],r11
80008f8e:	c0 a8       	rjmp	80008fa2 <_free_r+0x17a>
80008f90:	72 29       	ld.w	r9,r9[0x8]
80008f92:	18 39       	cp.w	r9,r12
80008f94:	c0 60       	breq	80008fa0 <_free_r+0x178>
80008f96:	72 1a       	ld.w	r10,r9[0x4]
80008f98:	e0 1a ff fc 	andl	r10,0xfffc
80008f9c:	14 38       	cp.w	r8,r10
80008f9e:	cf 93       	brcs	80008f90 <_free_r+0x168>
80008fa0:	72 38       	ld.w	r8,r9[0xc]
80008fa2:	8d 38       	st.w	r6[0xc],r8
80008fa4:	8d 29       	st.w	r6[0x8],r9
80008fa6:	93 36       	st.w	r9[0xc],r6
80008fa8:	91 26       	st.w	r8[0x8],r6
80008faa:	0e 9c       	mov	r12,r7
80008fac:	fe b0 e1 fc 	rcall	800053a4 <__malloc_unlock>
80008fb0:	d8 22       	popm	r4-r7,pc
80008fb2:	d7 03       	nop

80008fb4 <__hexdig_init>:
80008fb4:	fe c9 e8 d0 	sub	r9,pc,-5936
80008fb8:	31 08       	mov	r8,16
80008fba:	e0 6b 54 fc 	mov	r11,21756
80008fbe:	c0 58       	rjmp	80008fc8 <__hexdig_init+0x14>
80008fc0:	f6 0a 0b 08 	st.b	r11[r10],r8
80008fc4:	f1 dc c0 08 	bfextu	r8,r12,0x0,0x8
80008fc8:	f0 cc ff ff 	sub	r12,r8,-1
80008fcc:	13 3a       	ld.ub	r10,r9++
80008fce:	58 0a       	cp.w	r10,0
80008fd0:	cf 81       	brne	80008fc0 <__hexdig_init+0xc>
80008fd2:	fe c9 e8 f6 	sub	r9,pc,-5898
80008fd6:	31 a8       	mov	r8,26
80008fd8:	e0 6b 54 fc 	mov	r11,21756
80008fdc:	c0 58       	rjmp	80008fe6 <__hexdig_init+0x32>
80008fde:	f6 0a 0b 08 	st.b	r11[r10],r8
80008fe2:	f1 dc c0 08 	bfextu	r8,r12,0x0,0x8
80008fe6:	f0 cc ff ff 	sub	r12,r8,-1
80008fea:	13 3a       	ld.ub	r10,r9++
80008fec:	58 0a       	cp.w	r10,0
80008fee:	cf 81       	brne	80008fde <__hexdig_init+0x2a>
80008ff0:	fe c9 e9 1c 	sub	r9,pc,-5860
80008ff4:	31 a8       	mov	r8,26
80008ff6:	e0 6b 54 fc 	mov	r11,21756
80008ffa:	c0 58       	rjmp	80009004 <__hexdig_init+0x50>
80008ffc:	f6 0a 0b 08 	st.b	r11[r10],r8
80009000:	f1 dc c0 08 	bfextu	r8,r12,0x0,0x8
80009004:	f0 cc ff ff 	sub	r12,r8,-1
80009008:	13 3a       	ld.ub	r10,r9++
8000900a:	58 0a       	cp.w	r10,0
8000900c:	cf 81       	brne	80008ffc <__hexdig_init+0x48>
8000900e:	5e fc       	retal	r12

80009010 <rshift>:
80009010:	d4 21       	pushm	r4-r7,lr
80009012:	f8 c8 ff ec 	sub	r8,r12,-20
80009016:	f6 09 14 05 	asr	r9,r11,0x5
8000901a:	78 4e       	ld.w	lr,r12[0x10]
8000901c:	1c 39       	cp.w	r9,lr
8000901e:	c2 64       	brge	8000906a <rshift+0x5a>
80009020:	2f be       	sub	lr,-5
80009022:	2f b9       	sub	r9,-5
80009024:	f8 0e 00 2e 	add	lr,r12,lr<<0x2
80009028:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
8000902c:	f8 09 00 2a 	add	r10,r12,r9<<0x2
80009030:	58 0b       	cp.w	r11,0
80009032:	c1 a0       	breq	80009066 <rshift+0x56>
80009034:	f8 09 03 29 	ld.w	r9,r12[r9<<0x2]
80009038:	2f ca       	sub	r10,-4
8000903a:	f2 0b 0a 49 	lsr	r9,r9,r11
8000903e:	f6 07 11 20 	rsub	r7,r11,32
80009042:	c0 98       	rjmp	80009054 <rshift+0x44>
80009044:	74 06       	ld.w	r6,r10[0x0]
80009046:	ec 07 09 46 	lsl	r6,r6,r7
8000904a:	0c 49       	or	r9,r6
8000904c:	10 a9       	st.w	r8++,r9
8000904e:	15 09       	ld.w	r9,r10++
80009050:	f2 0b 0a 49 	lsr	r9,r9,r11
80009054:	1c 3a       	cp.w	r10,lr
80009056:	cf 73       	brcs	80009044 <rshift+0x34>
80009058:	91 09       	st.w	r8[0x0],r9
8000905a:	58 09       	cp.w	r9,0
8000905c:	c0 70       	breq	8000906a <rshift+0x5a>
8000905e:	2f c8       	sub	r8,-4
80009060:	c0 58       	rjmp	8000906a <rshift+0x5a>
80009062:	15 09       	ld.w	r9,r10++
80009064:	10 a9       	st.w	r8++,r9
80009066:	1c 3a       	cp.w	r10,lr
80009068:	cf d3       	brcs	80009062 <rshift+0x52>
8000906a:	f8 c9 ff ec 	sub	r9,r12,-20
8000906e:	12 18       	sub	r8,r9
80009070:	a3 48       	asr	r8,0x2
80009072:	99 48       	st.w	r12[0x10],r8
80009074:	f9 f8 0a 05 	st.weq	r12[0x14],r8
80009078:	d8 22       	popm	r4-r7,pc
8000907a:	d7 03       	nop

8000907c <__gethex>:
8000907c:	d4 31       	pushm	r0-r7,lr
8000907e:	20 3d       	sub	sp,12
80009080:	50 29       	stdsp	sp[0x8],r9
80009082:	50 08       	stdsp	sp[0x0],r8
80009084:	40 c9       	lddsp	r9,sp[0x30]
80009086:	e0 68 54 fc 	mov	r8,21756
8000908a:	50 19       	stdsp	sp[0x4],r9
8000908c:	18 91       	mov	r1,r12
8000908e:	f1 39 00 30 	ld.ub	r9,r8[48]
80009092:	16 96       	mov	r6,r11
80009094:	14 97       	mov	r7,r10
80009096:	30 08       	mov	r8,0
80009098:	f0 09 18 00 	cp.b	r9,r8
8000909c:	c0 21       	brne	800090a0 <__gethex+0x24>
8000909e:	c8 bf       	rcall	80008fb4 <__hexdig_init>
800090a0:	6c 05       	ld.w	r5,r6[0x0]
800090a2:	30 03       	mov	r3,0
800090a4:	2f e5       	sub	r5,-2
800090a6:	33 09       	mov	r9,48
800090a8:	c0 28       	rjmp	800090ac <__gethex+0x30>
800090aa:	2f f3       	sub	r3,-1
800090ac:	0a 94       	mov	r4,r5
800090ae:	0b 88       	ld.ub	r8,r5[0x0]
800090b0:	2f f5       	sub	r5,-1
800090b2:	f2 08 18 00 	cp.b	r8,r9
800090b6:	cf a0       	breq	800090aa <__gethex+0x2e>
800090b8:	e0 6a 54 fc 	mov	r10,21756
800090bc:	30 0b       	mov	r11,0
800090be:	f4 08 07 09 	ld.ub	r9,r10[r8]
800090c2:	f6 09 18 00 	cp.b	r9,r11
800090c6:	c0 50       	breq	800090d0 <__gethex+0x54>
800090c8:	30 0b       	mov	r11,0
800090ca:	08 92       	mov	r2,r4
800090cc:	16 95       	mov	r5,r11
800090ce:	c2 c8       	rjmp	80009126 <__gethex+0xaa>
800090d0:	32 eb       	mov	r11,46
800090d2:	f6 08 18 00 	cp.b	r8,r11
800090d6:	c0 30       	breq	800090dc <__gethex+0x60>
800090d8:	08 92       	mov	r2,r4
800090da:	c0 88       	rjmp	800090ea <__gethex+0x6e>
800090dc:	0b 88       	ld.ub	r8,r5[0x0]
800090de:	0a 92       	mov	r2,r5
800090e0:	f4 08 07 08 	ld.ub	r8,r10[r8]
800090e4:	f2 08 18 00 	cp.b	r8,r9
800090e8:	c0 41       	brne	800090f0 <__gethex+0x74>
800090ea:	30 05       	mov	r5,0
800090ec:	30 1b       	mov	r11,1
800090ee:	c4 38       	rjmp	80009174 <__gethex+0xf8>
800090f0:	0a 92       	mov	r2,r5
800090f2:	33 09       	mov	r9,48
800090f4:	c0 28       	rjmp	800090f8 <__gethex+0x7c>
800090f6:	2f f2       	sub	r2,-1
800090f8:	05 88       	ld.ub	r8,r2[0x0]
800090fa:	f2 08 18 00 	cp.b	r8,r9
800090fe:	cf c0       	breq	800090f6 <__gethex+0x7a>
80009100:	e0 69 54 fc 	mov	r9,21756
80009104:	f2 08 07 09 	ld.ub	r9,r9[r8]
80009108:	30 08       	mov	r8,0
8000910a:	f0 09 18 00 	cp.b	r9,r8
8000910e:	e4 04 17 10 	movne	r4,r2
80009112:	f9 bb 01 00 	movne	r11,0
80009116:	f9 b3 01 01 	movne	r3,1
8000911a:	f9 bb 00 01 	moveq	r11,1
8000911e:	e4 04 17 00 	moveq	r4,r2
80009122:	f6 03 17 00 	moveq	r3,r11
80009126:	e0 6a 54 fc 	mov	r10,21756
8000912a:	30 08       	mov	r8,0
8000912c:	c0 28       	rjmp	80009130 <__gethex+0xb4>
8000912e:	2f f2       	sub	r2,-1
80009130:	05 89       	ld.ub	r9,r2[0x0]
80009132:	f4 09 07 0c 	ld.ub	r12,r10[r9]
80009136:	f0 0c 18 00 	cp.b	r12,r8
8000913a:	cf a1       	brne	8000912e <__gethex+0xb2>
8000913c:	58 05       	cp.w	r5,0
8000913e:	5f 0a       	sreq	r10
80009140:	32 ec       	mov	r12,46
80009142:	f8 09 18 00 	cp.b	r9,r12
80009146:	5f 09       	sreq	r9
80009148:	f3 ea 00 0a 	and	r10,r9,r10
8000914c:	f0 0a 18 00 	cp.b	r10,r8
80009150:	c0 e0       	breq	8000916c <__gethex+0xf0>
80009152:	2f f2       	sub	r2,-1
80009154:	e0 69 54 fc 	mov	r9,21756
80009158:	04 95       	mov	r5,r2
8000915a:	30 08       	mov	r8,0
8000915c:	c0 28       	rjmp	80009160 <__gethex+0xe4>
8000915e:	2f f2       	sub	r2,-1
80009160:	05 8a       	ld.ub	r10,r2[0x0]
80009162:	f2 0a 07 0a 	ld.ub	r10,r9[r10]
80009166:	f0 0a 18 00 	cp.b	r10,r8
8000916a:	cf a1       	brne	8000915e <__gethex+0xe2>
8000916c:	58 05       	cp.w	r5,0
8000916e:	c0 30       	breq	80009174 <__gethex+0xf8>
80009170:	04 15       	sub	r5,r2
80009172:	a3 65       	lsl	r5,0x2
80009174:	05 88       	ld.ub	r8,r2[0x0]
80009176:	35 09       	mov	r9,80
80009178:	f2 08 18 00 	cp.b	r8,r9
8000917c:	c0 50       	breq	80009186 <__gethex+0x10a>
8000917e:	37 09       	mov	r9,112
80009180:	f2 08 18 00 	cp.b	r8,r9
80009184:	c3 21       	brne	800091e8 <__gethex+0x16c>
80009186:	e4 c8 ff ff 	sub	r8,r2,-1
8000918a:	32 ba       	mov	r10,43
8000918c:	11 89       	ld.ub	r9,r8[0x0]
8000918e:	f4 09 18 00 	cp.b	r9,r10
80009192:	c0 90       	breq	800091a4 <__gethex+0x128>
80009194:	32 da       	mov	r10,45
80009196:	f4 09 18 00 	cp.b	r9,r10
8000919a:	c0 30       	breq	800091a0 <__gethex+0x124>
8000919c:	30 0a       	mov	r10,0
8000919e:	c0 58       	rjmp	800091a8 <__gethex+0x12c>
800091a0:	30 1a       	mov	r10,1
800091a2:	c0 28       	rjmp	800091a6 <__gethex+0x12a>
800091a4:	30 0a       	mov	r10,0
800091a6:	2f f8       	sub	r8,-1
800091a8:	e0 6e 54 fc 	mov	lr,21756
800091ac:	11 89       	ld.ub	r9,r8[0x0]
800091ae:	fc 09 07 09 	ld.ub	r9,lr[r9]
800091b2:	58 09       	cp.w	r9,0
800091b4:	c1 a0       	breq	800091e8 <__gethex+0x16c>
800091b6:	59 99       	cp.w	r9,25
800091b8:	e0 89 00 18 	brgt	800091e8 <__gethex+0x16c>
800091bc:	21 09       	sub	r9,16
800091be:	c0 48       	rjmp	800091c6 <__gethex+0x14a>
800091c0:	21 0c       	sub	r12,16
800091c2:	f8 00 00 19 	add	r9,r12,r0<<0x1
800091c6:	2f f8       	sub	r8,-1
800091c8:	f2 09 00 20 	add	r0,r9,r9<<0x2
800091cc:	11 8c       	ld.ub	r12,r8[0x0]
800091ce:	fc 0c 07 0c 	ld.ub	r12,lr[r12]
800091d2:	58 0c       	cp.w	r12,0
800091d4:	c0 40       	breq	800091dc <__gethex+0x160>
800091d6:	59 9c       	cp.w	r12,25
800091d8:	fe 9a ff f4 	brle	800091c0 <__gethex+0x144>
800091dc:	58 0a       	cp.w	r10,0
800091de:	fb b9 01 00 	rsubne	r9,0
800091e2:	12 05       	add	r5,r9
800091e4:	c0 38       	rjmp	800091ea <__gethex+0x16e>
800091e6:	d7 03       	nop
800091e8:	04 98       	mov	r8,r2
800091ea:	8d 08       	st.w	r6[0x0],r8
800091ec:	58 0b       	cp.w	r11,0
800091ee:	c0 70       	breq	800091fc <__gethex+0x180>
800091f0:	58 03       	cp.w	r3,0
800091f2:	f9 b3 01 00 	movne	r3,0
800091f6:	f9 b3 00 06 	moveq	r3,6
800091fa:	c5 09       	rjmp	8000949a <__gethex+0x41e>
800091fc:	e4 c8 00 01 	sub	r8,r2,1
80009200:	08 18       	sub	r8,r4
80009202:	c0 38       	rjmp	80009208 <__gethex+0x18c>
80009204:	2f fb       	sub	r11,-1
80009206:	a1 58       	asr	r8,0x1
80009208:	58 78       	cp.w	r8,7
8000920a:	fe 99 ff fd 	brgt	80009204 <__gethex+0x188>
8000920e:	02 9c       	mov	r12,r1
80009210:	e0 a0 03 86 	rcall	8000991c <_Balloc>
80009214:	30 08       	mov	r8,0
80009216:	f8 c0 ff ec 	sub	r0,r12,-20
8000921a:	18 96       	mov	r6,r12
8000921c:	00 9a       	mov	r10,r0
8000921e:	10 99       	mov	r9,r8
80009220:	32 eb       	mov	r11,46
80009222:	e0 6e 54 fc 	mov	lr,21756
80009226:	c1 48       	rjmp	8000924e <__gethex+0x1d2>
80009228:	05 7c       	ld.ub	r12,--r2
8000922a:	f6 0c 18 00 	cp.b	r12,r11
8000922e:	c1 00       	breq	8000924e <__gethex+0x1d2>
80009230:	e0 49 00 20 	cp.w	r9,32
80009234:	c0 41       	brne	8000923c <__gethex+0x1c0>
80009236:	14 a8       	st.w	r10++,r8
80009238:	30 08       	mov	r8,0
8000923a:	10 99       	mov	r9,r8
8000923c:	05 8c       	ld.ub	r12,r2[0x0]
8000923e:	fc 0c 07 0c 	ld.ub	r12,lr[r12]
80009242:	f9 dc c0 04 	bfextu	r12,r12,0x0,0x4
80009246:	f8 09 09 4c 	lsl	r12,r12,r9
8000924a:	2f c9       	sub	r9,-4
8000924c:	18 48       	or	r8,r12
8000924e:	08 32       	cp.w	r2,r4
80009250:	fe 9b ff ec 	brhi	80009228 <__gethex+0x1ac>
80009254:	14 a8       	st.w	r10++,r8
80009256:	10 9c       	mov	r12,r8
80009258:	ec c8 ff ec 	sub	r8,r6,-20
8000925c:	10 1a       	sub	r10,r8
8000925e:	a3 4a       	asr	r10,0x2
80009260:	f4 03 15 05 	lsl	r3,r10,0x5
80009264:	8d 4a       	st.w	r6[0x10],r10
80009266:	cd bd       	rcall	8000961c <__hi0bits>
80009268:	6e 04       	ld.w	r4,r7[0x0]
8000926a:	18 13       	sub	r3,r12
8000926c:	08 33       	cp.w	r3,r4
8000926e:	e0 8a 00 27 	brle	800092bc <__gethex+0x240>
80009272:	08 13       	sub	r3,r4
80009274:	0c 9c       	mov	r12,r6
80009276:	06 9b       	mov	r11,r3
80009278:	e0 a0 03 11 	rcall	8000989a <__any_on>
8000927c:	c0 31       	brne	80009282 <__gethex+0x206>
8000927e:	18 92       	mov	r2,r12
80009280:	c1 98       	rjmp	800092b2 <__gethex+0x236>
80009282:	e6 cb 00 01 	sub	r11,r3,1
80009286:	30 12       	mov	r2,1
80009288:	f6 08 14 05 	asr	r8,r11,0x5
8000928c:	e4 0b 09 49 	lsl	r9,r2,r11
80009290:	2f b8       	sub	r8,-5
80009292:	ec 08 03 28 	ld.w	r8,r6[r8<<0x2]
80009296:	f3 e8 00 08 	and	r8,r9,r8
8000929a:	c0 c0       	breq	800092b2 <__gethex+0x236>
8000929c:	04 3b       	cp.w	r11,r2
8000929e:	e0 8a 00 09 	brle	800092b0 <__gethex+0x234>
800092a2:	20 1b       	sub	r11,1
800092a4:	0c 9c       	mov	r12,r6
800092a6:	e0 a0 02 fa 	rcall	8000989a <__any_on>
800092aa:	c0 30       	breq	800092b0 <__gethex+0x234>
800092ac:	30 32       	mov	r2,3
800092ae:	c0 28       	rjmp	800092b2 <__gethex+0x236>
800092b0:	30 22       	mov	r2,2
800092b2:	06 05       	add	r5,r3
800092b4:	06 9b       	mov	r11,r3
800092b6:	0c 9c       	mov	r12,r6
800092b8:	ca ce       	rcall	80009010 <rshift>
800092ba:	c1 08       	rjmp	800092da <__gethex+0x25e>
800092bc:	08 33       	cp.w	r3,r4
800092be:	c0 35       	brlt	800092c4 <__gethex+0x248>
800092c0:	30 02       	mov	r2,0
800092c2:	c0 c8       	rjmp	800092da <__gethex+0x25e>
800092c4:	e8 03 01 0a 	sub	r10,r4,r3
800092c8:	0c 9b       	mov	r11,r6
800092ca:	14 15       	sub	r5,r10
800092cc:	02 9c       	mov	r12,r1
800092ce:	30 02       	mov	r2,0
800092d0:	e0 a0 04 18 	rcall	80009b00 <__lshift>
800092d4:	18 96       	mov	r6,r12
800092d6:	f8 c0 ff ec 	sub	r0,r12,-20
800092da:	6e 28       	ld.w	r8,r7[0x8]
800092dc:	10 35       	cp.w	r5,r8
800092de:	e0 8a 00 09 	brle	800092f0 <__gethex+0x274>
800092e2:	0c 9b       	mov	r11,r6
800092e4:	02 9c       	mov	r12,r1
800092e6:	e0 63 00 a3 	mov	r3,163
800092ea:	e0 a0 02 ff 	rcall	800098e8 <_Bfree>
800092ee:	c3 48       	rjmp	80009356 <__gethex+0x2da>
800092f0:	6e 18       	ld.w	r8,r7[0x4]
800092f2:	10 35       	cp.w	r5,r8
800092f4:	c0 35       	brlt	800092fa <__gethex+0x27e>
800092f6:	30 13       	mov	r3,1
800092f8:	c5 48       	rjmp	800093a0 <__gethex+0x324>
800092fa:	f0 05 01 05 	sub	r5,r8,r5
800092fe:	08 35       	cp.w	r5,r4
80009300:	c2 f5       	brlt	8000935e <__gethex+0x2e2>
80009302:	6e 38       	ld.w	r8,r7[0xc]
80009304:	58 28       	cp.w	r8,2
80009306:	c1 10       	breq	80009328 <__gethex+0x2ac>
80009308:	58 38       	cp.w	r8,3
8000930a:	c1 30       	breq	80009330 <__gethex+0x2b4>
8000930c:	58 18       	cp.w	r8,1
8000930e:	c1 f1       	brne	8000934c <__gethex+0x2d0>
80009310:	08 35       	cp.w	r5,r4
80009312:	c1 d1       	brne	8000934c <__gethex+0x2d0>
80009314:	58 14       	cp.w	r4,1
80009316:	e0 8a 00 10 	brle	80009336 <__gethex+0x2ba>
8000931a:	e8 cb 00 01 	sub	r11,r4,1
8000931e:	0c 9c       	mov	r12,r6
80009320:	e0 a0 02 bd 	rcall	8000989a <__any_on>
80009324:	c0 91       	brne	80009336 <__gethex+0x2ba>
80009326:	c1 38       	rjmp	8000934c <__gethex+0x2d0>
80009328:	40 18       	lddsp	r8,sp[0x4]
8000932a:	58 08       	cp.w	r8,0
8000932c:	c0 50       	breq	80009336 <__gethex+0x2ba>
8000932e:	c0 f8       	rjmp	8000934c <__gethex+0x2d0>
80009330:	40 19       	lddsp	r9,sp[0x4]
80009332:	58 09       	cp.w	r9,0
80009334:	c0 c0       	breq	8000934c <__gethex+0x2d0>
80009336:	6e 18       	ld.w	r8,r7[0x4]
80009338:	40 29       	lddsp	r9,sp[0x8]
8000933a:	93 08       	st.w	r9[0x0],r8
8000933c:	40 08       	lddsp	r8,sp[0x0]
8000933e:	36 23       	mov	r3,98
80009340:	91 06       	st.w	r8[0x0],r6
80009342:	30 18       	mov	r8,1
80009344:	81 08       	st.w	r0[0x0],r8
80009346:	8d 48       	st.w	r6[0x10],r8
80009348:	ca 98       	rjmp	8000949a <__gethex+0x41e>
8000934a:	d7 03       	nop
8000934c:	0c 9b       	mov	r11,r6
8000934e:	02 9c       	mov	r12,r1
80009350:	35 03       	mov	r3,80
80009352:	e0 a0 02 cb 	rcall	800098e8 <_Bfree>
80009356:	30 08       	mov	r8,0
80009358:	40 09       	lddsp	r9,sp[0x0]
8000935a:	93 08       	st.w	r9[0x0],r8
8000935c:	c9 f8       	rjmp	8000949a <__gethex+0x41e>
8000935e:	ea c3 00 01 	sub	r3,r5,1
80009362:	58 02       	cp.w	r2,0
80009364:	c0 30       	breq	8000936a <__gethex+0x2ee>
80009366:	30 12       	mov	r2,1
80009368:	c0 98       	rjmp	8000937a <__gethex+0x2fe>
8000936a:	58 03       	cp.w	r3,0
8000936c:	e0 8a 00 07 	brle	8000937a <__gethex+0x2fe>
80009370:	06 9b       	mov	r11,r3
80009372:	0c 9c       	mov	r12,r6
80009374:	e0 a0 02 93 	rcall	8000989a <__any_on>
80009378:	18 92       	mov	r2,r12
8000937a:	e6 08 14 05 	asr	r8,r3,0x5
8000937e:	e0 08 03 28 	ld.w	r8,r0[r8<<0x2]
80009382:	30 19       	mov	r9,1
80009384:	f2 03 09 43 	lsl	r3,r9,r3
80009388:	10 63       	and	r3,r8
8000938a:	04 98       	mov	r8,r2
8000938c:	a1 b8       	sbr	r8,0x1
8000938e:	0a 9b       	mov	r11,r5
80009390:	58 03       	cp.w	r3,0
80009392:	f0 02 17 10 	movne	r2,r8
80009396:	0a 14       	sub	r4,r5
80009398:	0c 9c       	mov	r12,r6
8000939a:	30 23       	mov	r3,2
8000939c:	c3 ae       	rcall	80009010 <rshift>
8000939e:	6e 15       	ld.w	r5,r7[0x4]
800093a0:	58 02       	cp.w	r2,0
800093a2:	c7 80       	breq	80009492 <__gethex+0x416>
800093a4:	6e 38       	ld.w	r8,r7[0xc]
800093a6:	58 28       	cp.w	r8,2
800093a8:	c1 10       	breq	800093ca <__gethex+0x34e>
800093aa:	58 38       	cp.w	r8,3
800093ac:	c0 40       	breq	800093b4 <__gethex+0x338>
800093ae:	58 18       	cp.w	r8,1
800093b0:	c7 01       	brne	80009490 <__gethex+0x414>
800093b2:	c0 38       	rjmp	800093b8 <__gethex+0x33c>
800093b4:	40 18       	lddsp	r8,sp[0x4]
800093b6:	c0 d8       	rjmp	800093d0 <__gethex+0x354>
800093b8:	ed b2 00 01 	bld	r2,0x1
800093bc:	c6 a1       	brne	80009490 <__gethex+0x414>
800093be:	60 08       	ld.w	r8,r0[0x0]
800093c0:	10 42       	or	r2,r8
800093c2:	e5 d2 c0 01 	bfextu	r2,r2,0x0,0x1
800093c6:	c0 71       	brne	800093d4 <__gethex+0x358>
800093c8:	c6 48       	rjmp	80009490 <__gethex+0x414>
800093ca:	40 19       	lddsp	r9,sp[0x4]
800093cc:	f2 08 11 01 	rsub	r8,r9,1
800093d0:	58 08       	cp.w	r8,0
800093d2:	c5 f0       	breq	80009490 <__gethex+0x414>
800093d4:	6c 40       	ld.w	r0,r6[0x10]
800093d6:	ec c8 ff ec 	sub	r8,r6,-20
800093da:	e0 cb ff fb 	sub	r11,r0,-5
800093de:	30 0a       	mov	r10,0
800093e0:	ec 0b 00 2b 	add	r11,r6,r11<<0x2
800093e4:	70 09       	ld.w	r9,r8[0x0]
800093e6:	5b f9       	cp.w	r9,-1
800093e8:	c0 40       	breq	800093f0 <__gethex+0x374>
800093ea:	2f f9       	sub	r9,-1
800093ec:	91 09       	st.w	r8[0x0],r9
800093ee:	c2 58       	rjmp	80009438 <__gethex+0x3bc>
800093f0:	10 aa       	st.w	r8++,r10
800093f2:	16 38       	cp.w	r8,r11
800093f4:	cf 83       	brcs	800093e4 <__gethex+0x368>
800093f6:	6c 49       	ld.w	r9,r6[0x10]
800093f8:	6c 28       	ld.w	r8,r6[0x8]
800093fa:	10 39       	cp.w	r9,r8
800093fc:	c0 34       	brge	80009402 <__gethex+0x386>
800093fe:	0c 92       	mov	r2,r6
80009400:	c1 38       	rjmp	80009426 <__gethex+0x3aa>
80009402:	6c 1b       	ld.w	r11,r6[0x4]
80009404:	02 9c       	mov	r12,r1
80009406:	2f fb       	sub	r11,-1
80009408:	e0 a0 02 8a 	rcall	8000991c <_Balloc>
8000940c:	6c 4a       	ld.w	r10,r6[0x10]
8000940e:	ec cb ff f4 	sub	r11,r6,-12
80009412:	18 92       	mov	r2,r12
80009414:	2f ea       	sub	r10,-2
80009416:	2f 4c       	sub	r12,-12
80009418:	a3 6a       	lsl	r10,0x2
8000941a:	fe b0 f4 91 	rcall	80007d3c <memcpy>
8000941e:	0c 9b       	mov	r11,r6
80009420:	02 9c       	mov	r12,r1
80009422:	e0 a0 02 63 	rcall	800098e8 <_Bfree>
80009426:	64 48       	ld.w	r8,r2[0x10]
80009428:	f0 c9 ff ff 	sub	r9,r8,-1
8000942c:	04 96       	mov	r6,r2
8000942e:	85 49       	st.w	r2[0x10],r9
80009430:	2f b8       	sub	r8,-5
80009432:	30 19       	mov	r9,1
80009434:	e4 08 09 29 	st.w	r2[r8<<0x2],r9
80009438:	58 23       	cp.w	r3,2
8000943a:	c1 01       	brne	8000945a <__gethex+0x3de>
8000943c:	6e 08       	ld.w	r8,r7[0x0]
8000943e:	20 18       	sub	r8,1
80009440:	10 34       	cp.w	r4,r8
80009442:	c2 51       	brne	8000948c <__gethex+0x410>
80009444:	e8 08 14 05 	asr	r8,r4,0x5
80009448:	30 19       	mov	r9,1
8000944a:	2f b8       	sub	r8,-5
8000944c:	f2 04 09 44 	lsl	r4,r9,r4
80009450:	ec 08 03 28 	ld.w	r8,r6[r8<<0x2]
80009454:	10 64       	and	r4,r8
80009456:	c1 a1       	brne	8000948a <__gethex+0x40e>
80009458:	c1 a8       	rjmp	8000948c <__gethex+0x410>
8000945a:	6c 48       	ld.w	r8,r6[0x10]
8000945c:	00 38       	cp.w	r8,r0
8000945e:	e0 89 00 0d 	brgt	80009478 <__gethex+0x3fc>
80009462:	e9 d4 c0 05 	bfextu	r4,r4,0x0,0x5
80009466:	c1 20       	breq	8000948a <__gethex+0x40e>
80009468:	2f c0       	sub	r0,-4
8000946a:	e8 04 11 20 	rsub	r4,r4,32
8000946e:	ec 00 03 2c 	ld.w	r12,r6[r0<<0x2]
80009472:	cd 5c       	rcall	8000961c <__hi0bits>
80009474:	08 3c       	cp.w	r12,r4
80009476:	c0 a4       	brge	8000948a <__gethex+0x40e>
80009478:	30 1b       	mov	r11,1
8000947a:	0c 9c       	mov	r12,r6
8000947c:	fe b0 fd ca 	rcall	80009010 <rshift>
80009480:	2f f5       	sub	r5,-1
80009482:	6e 28       	ld.w	r8,r7[0x8]
80009484:	10 35       	cp.w	r5,r8
80009486:	fe 99 ff 2e 	brgt	800092e2 <__gethex+0x266>
8000948a:	30 13       	mov	r3,1
8000948c:	a5 b3       	sbr	r3,0x5
8000948e:	c0 28       	rjmp	80009492 <__gethex+0x416>
80009490:	a5 a3       	sbr	r3,0x4
80009492:	40 08       	lddsp	r8,sp[0x0]
80009494:	40 29       	lddsp	r9,sp[0x8]
80009496:	91 06       	st.w	r8[0x0],r6
80009498:	93 05       	st.w	r9[0x0],r5
8000949a:	06 9c       	mov	r12,r3
8000949c:	2f dd       	sub	sp,-12
8000949e:	d8 32       	popm	r0-r7,pc

800094a0 <__hexnan>:
800094a0:	d4 31       	pushm	r0-r7,lr
800094a2:	20 2d       	sub	sp,8
800094a4:	e0 68 54 fc 	mov	r8,21756
800094a8:	18 97       	mov	r7,r12
800094aa:	f1 39 00 30 	ld.ub	r9,r8[48]
800094ae:	16 95       	mov	r5,r11
800094b0:	14 96       	mov	r6,r10
800094b2:	30 08       	mov	r8,0
800094b4:	f0 09 18 00 	cp.b	r9,r8
800094b8:	c0 31       	brne	800094be <__hexnan+0x1e>
800094ba:	fe b0 fd 7d 	rcall	80008fb4 <__hexdig_init>
800094be:	30 08       	mov	r8,0
800094c0:	6a 09       	ld.w	r9,r5[0x0]
800094c2:	10 9b       	mov	r11,r8
800094c4:	e9 d9 c0 05 	bfextu	r4,r9,0x0,0x5
800094c8:	6e 05       	ld.w	r5,r7[0x0]
800094ca:	a5 59       	asr	r9,0x5
800094cc:	16 9a       	mov	r10,r11
800094ce:	ec 09 00 29 	add	r9,r6,r9<<0x2
800094d2:	16 92       	mov	r2,r11
800094d4:	58 04       	cp.w	r4,0
800094d6:	f7 b9 01 fc 	subne	r9,-4
800094da:	16 93       	mov	r3,r11
800094dc:	12 d8       	st.w	--r9,r8
800094de:	12 9e       	mov	lr,r9
800094e0:	12 98       	mov	r8,r9
800094e2:	c5 48       	rjmp	8000958a <__hexnan+0xea>
800094e4:	e0 60 54 fc 	mov	r0,21756
800094e8:	e0 0c 07 01 	ld.ub	r1,r0[r12]
800094ec:	58 01       	cp.w	r1,0
800094ee:	c3 e1       	brne	8000956a <__hexnan+0xca>
800094f0:	e0 4c 00 20 	cp.w	r12,32
800094f4:	e0 8b 00 2e 	brhi	80009550 <__hexnan+0xb0>
800094f8:	14 3b       	cp.w	r11,r10
800094fa:	c4 84       	brge	8000958a <__hexnan+0xea>
800094fc:	58 72       	cp.w	r2,7
800094fe:	5f a1       	srle	r1
80009500:	1c 38       	cp.w	r8,lr
80009502:	5f 3c       	srlo	r12
80009504:	e3 ec 00 0c 	and	r12,r1,r12
80009508:	30 01       	mov	r1,0
8000950a:	e2 0c 18 00 	cp.b	r12,r1
8000950e:	c1 70       	breq	8000953c <__hexnan+0x9c>
80009510:	e4 02 11 08 	rsub	r2,r2,8
80009514:	10 9c       	mov	r12,r8
80009516:	a3 62       	lsl	r2,0x2
80009518:	e4 00 11 20 	rsub	r0,r2,32
8000951c:	50 10       	stdsp	sp[0x4],r0
8000951e:	19 01       	ld.w	r1,r12++
80009520:	50 01       	stdsp	sp[0x0],r1
80009522:	78 01       	ld.w	r1,r12[0x0]
80009524:	e2 02 0a 40 	lsr	r0,r1,r2
80009528:	99 00       	st.w	r12[0x0],r0
8000952a:	40 10       	lddsp	r0,sp[0x4]
8000952c:	e2 00 09 41 	lsl	r1,r1,r0
80009530:	40 00       	lddsp	r0,sp[0x0]
80009532:	00 41       	or	r1,r0
80009534:	f9 41 ff fc 	st.w	r12[-4],r1
80009538:	1c 3c       	cp.w	r12,lr
8000953a:	cf 23       	brcs	8000951e <__hexnan+0x7e>
8000953c:	0c 38       	cp.w	r8,r6
8000953e:	e0 8b 00 04 	brhi	80009546 <__hexnan+0xa6>
80009542:	30 82       	mov	r2,8
80009544:	c2 38       	rjmp	8000958a <__hexnan+0xea>
80009546:	10 d3       	st.w	--r8,r3
80009548:	14 9b       	mov	r11,r10
8000954a:	10 9e       	mov	lr,r8
8000954c:	06 92       	mov	r2,r3
8000954e:	c1 e8       	rjmp	8000958a <__hexnan+0xea>
80009550:	58 0a       	cp.w	r10,0
80009552:	5f 1b       	srne	r11
80009554:	e0 4c 00 29 	cp.w	r12,41
80009558:	5f 0a       	sreq	r10
8000955a:	f7 ea 00 0a 	and	r10,r11,r10
8000955e:	e2 0a 18 00 	cp.b	r10,r1
80009562:	c5 90       	breq	80009614 <__hexnan+0x174>
80009564:	2f f5       	sub	r5,-1
80009566:	8f 05       	st.w	r7[0x0],r5
80009568:	c1 78       	rjmp	80009596 <__hexnan+0xf6>
8000956a:	2f fa       	sub	r10,-1
8000956c:	2f f2       	sub	r2,-1
8000956e:	58 82       	cp.w	r2,8
80009570:	e0 8a 00 07 	brle	8000957e <__hexnan+0xde>
80009574:	0c 38       	cp.w	r8,r6
80009576:	e0 88 00 0a 	brls	8000958a <__hexnan+0xea>
8000957a:	10 d3       	st.w	--r8,r3
8000957c:	30 12       	mov	r2,1
8000957e:	70 0c       	ld.w	r12,r8[0x0]
80009580:	e3 d1 c0 04 	bfextu	r1,r1,0x0,0x4
80009584:	e3 ec 10 41 	or	r1,r1,r12<<0x4
80009588:	91 01       	st.w	r8[0x0],r1
8000958a:	2f f5       	sub	r5,-1
8000958c:	0b 8c       	ld.ub	r12,r5[0x0]
8000958e:	58 0c       	cp.w	r12,0
80009590:	ca a1       	brne	800094e4 <__hexnan+0x44>
80009592:	58 0a       	cp.w	r10,0
80009594:	c4 00       	breq	80009614 <__hexnan+0x174>
80009596:	58 72       	cp.w	r2,7
80009598:	5f ab       	srle	r11
8000959a:	1c 38       	cp.w	r8,lr
8000959c:	5f 3a       	srlo	r10
8000959e:	f7 ea 00 0a 	and	r10,r11,r10
800095a2:	c1 30       	breq	800095c8 <__hexnan+0x128>
800095a4:	e4 02 11 08 	rsub	r2,r2,8
800095a8:	10 9a       	mov	r10,r8
800095aa:	a3 62       	lsl	r2,0x2
800095ac:	e4 0c 11 20 	rsub	r12,r2,32
800095b0:	15 07       	ld.w	r7,r10++
800095b2:	74 0b       	ld.w	r11,r10[0x0]
800095b4:	f6 02 0a 45 	lsr	r5,r11,r2
800095b8:	f6 0c 09 4b 	lsl	r11,r11,r12
800095bc:	95 05       	st.w	r10[0x0],r5
800095be:	0e 4b       	or	r11,r7
800095c0:	f5 4b ff fc 	st.w	r10[-4],r11
800095c4:	1c 3a       	cp.w	r10,lr
800095c6:	cf 53       	brcs	800095b0 <__hexnan+0x110>
800095c8:	0c 38       	cp.w	r8,r6
800095ca:	e0 88 00 0f 	brls	800095e8 <__hexnan+0x148>
800095ce:	0c 9a       	mov	r10,r6
800095d0:	11 0b       	ld.w	r11,r8++
800095d2:	14 ab       	st.w	r10++,r11
800095d4:	12 38       	cp.w	r8,r9
800095d6:	fe 98 ff fd 	brls	800095d0 <__hexnan+0x130>
800095da:	30 08       	mov	r8,0
800095dc:	14 a8       	st.w	r10++,r8
800095de:	12 3a       	cp.w	r10,r9
800095e0:	fe 98 ff fe 	brls	800095dc <__hexnan+0x13c>
800095e4:	c0 d8       	rjmp	800095fe <__hexnan+0x15e>
800095e6:	d7 03       	nop
800095e8:	58 04       	cp.w	r4,0
800095ea:	c0 a0       	breq	800095fe <__hexnan+0x15e>
800095ec:	72 08       	ld.w	r8,r9[0x0]
800095ee:	e8 04 11 20 	rsub	r4,r4,32
800095f2:	3f fa       	mov	r10,-1
800095f4:	f4 04 0a 44 	lsr	r4,r10,r4
800095f8:	f1 e4 00 04 	and	r4,r8,r4
800095fc:	93 04       	st.w	r9[0x0],r4
800095fe:	72 08       	ld.w	r8,r9[0x0]
80009600:	58 08       	cp.w	r8,0
80009602:	c0 51       	brne	8000960c <__hexnan+0x16c>
80009604:	0c 39       	cp.w	r9,r6
80009606:	c0 51       	brne	80009610 <__hexnan+0x170>
80009608:	30 18       	mov	r8,1
8000960a:	93 08       	st.w	r9[0x0],r8
8000960c:	30 5c       	mov	r12,5
8000960e:	c0 48       	rjmp	80009616 <__hexnan+0x176>
80009610:	20 49       	sub	r9,4
80009612:	cf 6b       	rjmp	800095fe <__hexnan+0x15e>
80009614:	30 4c       	mov	r12,4
80009616:	2f ed       	sub	sp,-8
80009618:	d8 32       	popm	r0-r7,pc
8000961a:	d7 03       	nop

8000961c <__hi0bits>:
8000961c:	18 98       	mov	r8,r12
8000961e:	e0 1c 00 00 	andl	r12,0x0
80009622:	f0 09 15 10 	lsl	r9,r8,0x10
80009626:	58 0c       	cp.w	r12,0
80009628:	f2 08 17 00 	moveq	r8,r9
8000962c:	f9 bc 00 10 	moveq	r12,16
80009630:	f9 bc 01 00 	movne	r12,0
80009634:	10 9a       	mov	r10,r8
80009636:	f0 09 15 08 	lsl	r9,r8,0x8
8000963a:	e6 1a ff 00 	andh	r10,0xff00,COH
8000963e:	f7 bc 00 f8 	subeq	r12,-8
80009642:	f2 08 17 00 	moveq	r8,r9
80009646:	10 9a       	mov	r10,r8
80009648:	f0 09 15 04 	lsl	r9,r8,0x4
8000964c:	e6 1a f0 00 	andh	r10,0xf000,COH
80009650:	f7 bc 00 fc 	subeq	r12,-4
80009654:	f2 08 17 00 	moveq	r8,r9
80009658:	10 9a       	mov	r10,r8
8000965a:	f0 09 15 02 	lsl	r9,r8,0x2
8000965e:	e6 1a c0 00 	andh	r10,0xc000,COH
80009662:	f7 bc 00 fe 	subeq	r12,-2
80009666:	f2 08 17 00 	moveq	r8,r9
8000966a:	58 08       	cp.w	r8,0
8000966c:	5e 5c       	retlt	r12
8000966e:	ed b8 00 1e 	bld	r8,0x1e
80009672:	f9 bc 01 20 	movne	r12,32
80009676:	f7 bc 00 ff 	subeq	r12,-1
8000967a:	5e fc       	retal	r12

8000967c <__lo0bits>:
8000967c:	18 99       	mov	r9,r12
8000967e:	78 08       	ld.w	r8,r12[0x0]
80009680:	f9 d8 c0 03 	bfextu	r12,r8,0x0,0x3
80009684:	c1 50       	breq	800096ae <__lo0bits+0x32>
80009686:	ed b8 00 00 	bld	r8,0x0
8000968a:	c0 21       	brne	8000968e <__lo0bits+0x12>
8000968c:	5e fd       	retal	0
8000968e:	10 9b       	mov	r11,r8
80009690:	f0 0a 16 01 	lsr	r10,r8,0x1
80009694:	e2 1b 00 02 	andl	r11,0x2,COH
80009698:	a3 88       	lsr	r8,0x2
8000969a:	58 0b       	cp.w	r11,0
8000969c:	f3 fa 1a 00 	st.wne	r9[0x0],r10
800096a0:	f9 bc 01 01 	movne	r12,1
800096a4:	f3 f8 0a 00 	st.weq	r9[0x0],r8
800096a8:	f9 bc 00 02 	moveq	r12,2
800096ac:	5e fc       	retal	r12
800096ae:	f5 d8 c0 10 	bfextu	r10,r8,0x0,0x10
800096b2:	f0 0b 16 10 	lsr	r11,r8,0x10
800096b6:	58 0a       	cp.w	r10,0
800096b8:	f6 08 17 00 	moveq	r8,r11
800096bc:	f9 bc 00 10 	moveq	r12,16
800096c0:	f7 d8 c0 08 	bfextu	r11,r8,0x0,0x8
800096c4:	f0 0a 16 08 	lsr	r10,r8,0x8
800096c8:	58 0b       	cp.w	r11,0
800096ca:	f7 bc 00 f8 	subeq	r12,-8
800096ce:	f4 08 17 00 	moveq	r8,r10
800096d2:	f7 d8 c0 04 	bfextu	r11,r8,0x0,0x4
800096d6:	f0 0a 16 04 	lsr	r10,r8,0x4
800096da:	58 0b       	cp.w	r11,0
800096dc:	f7 bc 00 fc 	subeq	r12,-4
800096e0:	f4 08 17 00 	moveq	r8,r10
800096e4:	f7 d8 c0 02 	bfextu	r11,r8,0x0,0x2
800096e8:	f0 0a 16 02 	lsr	r10,r8,0x2
800096ec:	58 0b       	cp.w	r11,0
800096ee:	f7 bc 00 fe 	subeq	r12,-2
800096f2:	f4 08 17 00 	moveq	r8,r10
800096f6:	ed b8 00 00 	bld	r8,0x0
800096fa:	c0 60       	breq	80009706 <__lo0bits+0x8a>
800096fc:	a1 98       	lsr	r8,0x1
800096fe:	c0 31       	brne	80009704 <__lo0bits+0x88>
80009700:	32 0c       	mov	r12,32
80009702:	5e fc       	retal	r12
80009704:	2f fc       	sub	r12,-1
80009706:	93 08       	st.w	r9[0x0],r8
80009708:	5e fc       	retal	r12

8000970a <__mcmp>:
8000970a:	d4 01       	pushm	lr
8000970c:	18 98       	mov	r8,r12
8000970e:	76 49       	ld.w	r9,r11[0x10]
80009710:	78 4c       	ld.w	r12,r12[0x10]
80009712:	12 1c       	sub	r12,r9
80009714:	c1 31       	brne	8000973a <__mcmp+0x30>
80009716:	2f b9       	sub	r9,-5
80009718:	a3 69       	lsl	r9,0x2
8000971a:	12 0b       	add	r11,r9
8000971c:	f0 09 00 09 	add	r9,r8,r9
80009720:	2e c8       	sub	r8,-20
80009722:	13 4e       	ld.w	lr,--r9
80009724:	17 4a       	ld.w	r10,--r11
80009726:	14 3e       	cp.w	lr,r10
80009728:	c0 60       	breq	80009734 <__mcmp+0x2a>
8000972a:	f9 bc 03 ff 	movlo	r12,-1
8000972e:	f9 bc 02 01 	movhs	r12,1
80009732:	d8 02       	popm	pc
80009734:	10 39       	cp.w	r9,r8
80009736:	fe 9b ff f6 	brhi	80009722 <__mcmp+0x18>
8000973a:	d8 02       	popm	pc

8000973c <__ulp>:
8000973c:	e6 1b 7f f0 	andh	r11,0x7ff0,COH
80009740:	fc 18 fc c0 	movh	r8,0xfcc0
80009744:	f6 08 00 08 	add	r8,r11,r8
80009748:	58 08       	cp.w	r8,0
8000974a:	e0 8a 00 04 	brle	80009752 <__ulp+0x16>
8000974e:	10 9b       	mov	r11,r8
80009750:	c0 a8       	rjmp	80009764 <__ulp+0x28>
80009752:	5c 38       	neg	r8
80009754:	b5 48       	asr	r8,0x14
80009756:	59 38       	cp.w	r8,19
80009758:	e0 89 00 08 	brgt	80009768 <__ulp+0x2c>
8000975c:	e8 69 00 00 	mov	r9,524288
80009760:	f2 08 08 4b 	asr	r11,r9,r8
80009764:	30 0a       	mov	r10,0
80009766:	5e fc       	retal	r12
80009768:	21 48       	sub	r8,20
8000976a:	59 e8       	cp.w	r8,30
8000976c:	e0 8a 00 04 	brle	80009774 <__ulp+0x38>
80009770:	30 18       	mov	r8,1
80009772:	c0 68       	rjmp	8000977e <__ulp+0x42>
80009774:	f0 08 11 1f 	rsub	r8,r8,31
80009778:	30 19       	mov	r9,1
8000977a:	f2 08 09 48 	lsl	r8,r9,r8
8000977e:	30 0b       	mov	r11,0
80009780:	10 9a       	mov	r10,r8
80009782:	5e fc       	retal	r12

80009784 <__b2d>:
80009784:	d4 21       	pushm	r4-r7,lr
80009786:	78 47       	ld.w	r7,r12[0x10]
80009788:	16 94       	mov	r4,r11
8000978a:	2f b7       	sub	r7,-5
8000978c:	f8 c5 ff ec 	sub	r5,r12,-20
80009790:	f8 07 00 27 	add	r7,r12,r7<<0x2
80009794:	0f 46       	ld.w	r6,--r7
80009796:	0c 9c       	mov	r12,r6
80009798:	c4 2f       	rcall	8000961c <__hi0bits>
8000979a:	f8 08 11 20 	rsub	r8,r12,32
8000979e:	89 08       	st.w	r4[0x0],r8
800097a0:	58 ac       	cp.w	r12,10
800097a2:	e0 89 00 18 	brgt	800097d2 <__b2d+0x4e>
800097a6:	f8 08 11 0b 	rsub	r8,r12,11
800097aa:	0a 37       	cp.w	r7,r5
800097ac:	e0 8b 00 04 	brhi	800097b4 <__b2d+0x30>
800097b0:	30 09       	mov	r9,0
800097b2:	c0 38       	rjmp	800097b8 <__b2d+0x34>
800097b4:	ee f9 ff fc 	ld.w	r9,r7[-4]
800097b8:	f2 08 0a 49 	lsr	r9,r9,r8
800097bc:	2e bc       	sub	r12,-21
800097be:	ec 0c 09 4c 	lsl	r12,r6,r12
800097c2:	ec 08 0a 46 	lsr	r6,r6,r8
800097c6:	f3 ec 10 0a 	or	r10,r9,r12
800097ca:	0c 9b       	mov	r11,r6
800097cc:	ea 1b 3f f0 	orh	r11,0x3ff0
800097d0:	d8 22       	popm	r4-r7,pc
800097d2:	0a 37       	cp.w	r7,r5
800097d4:	e0 8b 00 04 	brhi	800097dc <__b2d+0x58>
800097d8:	30 08       	mov	r8,0
800097da:	c0 28       	rjmp	800097de <__b2d+0x5a>
800097dc:	0f 48       	ld.w	r8,--r7
800097de:	20 bc       	sub	r12,11
800097e0:	c1 90       	breq	80009812 <__b2d+0x8e>
800097e2:	f8 09 11 20 	rsub	r9,r12,32
800097e6:	0a 37       	cp.w	r7,r5
800097e8:	e0 8b 00 04 	brhi	800097f0 <__b2d+0x6c>
800097ec:	30 0a       	mov	r10,0
800097ee:	c0 38       	rjmp	800097f4 <__b2d+0x70>
800097f0:	ee fa ff fc 	ld.w	r10,r7[-4]
800097f4:	f0 0c 09 47 	lsl	r7,r8,r12
800097f8:	f4 09 0a 45 	lsr	r5,r10,r9
800097fc:	ec 0c 09 4c 	lsl	r12,r6,r12
80009800:	f0 09 0a 48 	lsr	r8,r8,r9
80009804:	ea 1c 3f f0 	orh	r12,0x3ff0
80009808:	eb e7 10 0a 	or	r10,r5,r7
8000980c:	f9 e8 10 0b 	or	r11,r12,r8
80009810:	d8 22       	popm	r4-r7,pc
80009812:	0c 9b       	mov	r11,r6
80009814:	10 9a       	mov	r10,r8
80009816:	ea 1b 3f f0 	orh	r11,0x3ff0
8000981a:	d8 22       	popm	r4-r7,pc

8000981c <__ratio>:
8000981c:	d4 21       	pushm	r4-r7,lr
8000981e:	20 2d       	sub	sp,8
80009820:	16 95       	mov	r5,r11
80009822:	18 94       	mov	r4,r12
80009824:	fa cb ff fc 	sub	r11,sp,-4
80009828:	ca ef       	rcall	80009784 <__b2d>
8000982a:	16 99       	mov	r9,r11
8000982c:	0a 9c       	mov	r12,r5
8000982e:	12 97       	mov	r7,r9
80009830:	14 96       	mov	r6,r10
80009832:	1a 9b       	mov	r11,sp
80009834:	ca 8f       	rcall	80009784 <__b2d>
80009836:	14 98       	mov	r8,r10
80009838:	6a 4a       	ld.w	r10,r5[0x10]
8000983a:	16 99       	mov	r9,r11
8000983c:	40 1c       	lddsp	r12,sp[0x4]
8000983e:	68 4b       	ld.w	r11,r4[0x10]
80009840:	14 1b       	sub	r11,r10
80009842:	40 0a       	lddsp	r10,sp[0x0]
80009844:	a5 7b       	lsl	r11,0x5
80009846:	f8 0a 01 0a 	sub	r10,r12,r10
8000984a:	16 0a       	add	r10,r11
8000984c:	58 0a       	cp.w	r10,0
8000984e:	e0 8a 00 06 	brle	8000985a <__ratio+0x3e>
80009852:	b5 6a       	lsl	r10,0x14
80009854:	0e 0a       	add	r10,r7
80009856:	14 97       	mov	r7,r10
80009858:	c0 38       	rjmp	8000985e <__ratio+0x42>
8000985a:	b5 6a       	lsl	r10,0x14
8000985c:	14 19       	sub	r9,r10
8000985e:	0c 9a       	mov	r10,r6
80009860:	0e 9b       	mov	r11,r7
80009862:	fe b0 ec ad 	rcall	800071bc <__avr32_f64_div>
80009866:	2f ed       	sub	sp,-8
80009868:	d8 22       	popm	r4-r7,pc
8000986a:	d7 03       	nop

8000986c <__copybits>:
8000986c:	74 48       	ld.w	r8,r10[0x10]
8000986e:	f6 c9 00 01 	sub	r9,r11,1
80009872:	2f b8       	sub	r8,-5
80009874:	a5 59       	asr	r9,0x5
80009876:	f4 08 00 28 	add	r8,r10,r8<<0x2
8000987a:	2f f9       	sub	r9,-1
8000987c:	2e ca       	sub	r10,-20
8000987e:	f8 09 00 29 	add	r9,r12,r9<<0x2
80009882:	c0 38       	rjmp	80009888 <__copybits+0x1c>
80009884:	15 0b       	ld.w	r11,r10++
80009886:	18 ab       	st.w	r12++,r11
80009888:	10 3a       	cp.w	r10,r8
8000988a:	cf d3       	brcs	80009884 <__copybits+0x18>
8000988c:	c0 38       	rjmp	80009892 <__copybits+0x26>
8000988e:	18 a8       	st.w	r12++,r8
80009890:	c0 28       	rjmp	80009894 <__copybits+0x28>
80009892:	30 08       	mov	r8,0
80009894:	12 3c       	cp.w	r12,r9
80009896:	cf c3       	brcs	8000988e <__copybits+0x22>
80009898:	5e fc       	retal	r12

8000989a <__any_on>:
8000989a:	d4 01       	pushm	lr
8000989c:	f8 ca ff ec 	sub	r10,r12,-20
800098a0:	78 49       	ld.w	r9,r12[0x10]
800098a2:	f6 08 14 05 	asr	r8,r11,0x5
800098a6:	12 38       	cp.w	r8,r9
800098a8:	e0 8a 00 04 	brle	800098b0 <__any_on+0x16>
800098ac:	12 98       	mov	r8,r9
800098ae:	c1 08       	rjmp	800098ce <__any_on+0x34>
800098b0:	12 38       	cp.w	r8,r9
800098b2:	c0 e4       	brge	800098ce <__any_on+0x34>
800098b4:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
800098b8:	c0 b0       	breq	800098ce <__any_on+0x34>
800098ba:	f0 c9 ff fb 	sub	r9,r8,-5
800098be:	f8 09 03 29 	ld.w	r9,r12[r9<<0x2]
800098c2:	f2 0b 0a 4e 	lsr	lr,r9,r11
800098c6:	fc 0b 09 4b 	lsl	r11,lr,r11
800098ca:	12 3b       	cp.w	r11,r9
800098cc:	c0 c1       	brne	800098e4 <__any_on+0x4a>
800098ce:	2f b8       	sub	r8,-5
800098d0:	f8 08 00 2c 	add	r12,r12,r8<<0x2
800098d4:	c0 48       	rjmp	800098dc <__any_on+0x42>
800098d6:	19 48       	ld.w	r8,--r12
800098d8:	58 08       	cp.w	r8,0
800098da:	c0 51       	brne	800098e4 <__any_on+0x4a>
800098dc:	14 3c       	cp.w	r12,r10
800098de:	fe 9b ff fc 	brhi	800098d6 <__any_on+0x3c>
800098e2:	d8 0a       	popm	pc,r12=0
800098e4:	da 0a       	popm	pc,r12=1
800098e6:	d7 03       	nop

800098e8 <_Bfree>:
800098e8:	d4 21       	pushm	r4-r7,lr
800098ea:	18 97       	mov	r7,r12
800098ec:	16 95       	mov	r5,r11
800098ee:	78 96       	ld.w	r6,r12[0x24]
800098f0:	58 06       	cp.w	r6,0
800098f2:	c0 91       	brne	80009904 <_Bfree+0x1c>
800098f4:	31 0c       	mov	r12,16
800098f6:	fe b0 f0 01 	rcall	800078f8 <malloc>
800098fa:	99 36       	st.w	r12[0xc],r6
800098fc:	8f 9c       	st.w	r7[0x24],r12
800098fe:	99 16       	st.w	r12[0x4],r6
80009900:	99 26       	st.w	r12[0x8],r6
80009902:	99 06       	st.w	r12[0x0],r6
80009904:	58 05       	cp.w	r5,0
80009906:	c0 90       	breq	80009918 <_Bfree+0x30>
80009908:	6a 19       	ld.w	r9,r5[0x4]
8000990a:	6e 98       	ld.w	r8,r7[0x24]
8000990c:	70 38       	ld.w	r8,r8[0xc]
8000990e:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
80009912:	8b 0a       	st.w	r5[0x0],r10
80009914:	f0 09 09 25 	st.w	r8[r9<<0x2],r5
80009918:	d8 22       	popm	r4-r7,pc
8000991a:	d7 03       	nop

8000991c <_Balloc>:
8000991c:	d4 21       	pushm	r4-r7,lr
8000991e:	18 97       	mov	r7,r12
80009920:	16 96       	mov	r6,r11
80009922:	78 95       	ld.w	r5,r12[0x24]
80009924:	58 05       	cp.w	r5,0
80009926:	c0 91       	brne	80009938 <_Balloc+0x1c>
80009928:	31 0c       	mov	r12,16
8000992a:	fe b0 ef e7 	rcall	800078f8 <malloc>
8000992e:	99 35       	st.w	r12[0xc],r5
80009930:	8f 9c       	st.w	r7[0x24],r12
80009932:	99 15       	st.w	r12[0x4],r5
80009934:	99 25       	st.w	r12[0x8],r5
80009936:	99 05       	st.w	r12[0x0],r5
80009938:	6e 95       	ld.w	r5,r7[0x24]
8000993a:	6a 38       	ld.w	r8,r5[0xc]
8000993c:	58 08       	cp.w	r8,0
8000993e:	c0 b1       	brne	80009954 <_Balloc+0x38>
80009940:	31 0a       	mov	r10,16
80009942:	30 4b       	mov	r11,4
80009944:	0e 9c       	mov	r12,r7
80009946:	e0 a0 02 69 	rcall	80009e18 <_calloc_r>
8000994a:	8b 3c       	st.w	r5[0xc],r12
8000994c:	6e 98       	ld.w	r8,r7[0x24]
8000994e:	70 3c       	ld.w	r12,r8[0xc]
80009950:	58 0c       	cp.w	r12,0
80009952:	c1 b0       	breq	80009988 <_Balloc+0x6c>
80009954:	6e 98       	ld.w	r8,r7[0x24]
80009956:	70 38       	ld.w	r8,r8[0xc]
80009958:	f0 06 00 28 	add	r8,r8,r6<<0x2
8000995c:	70 0c       	ld.w	r12,r8[0x0]
8000995e:	58 0c       	cp.w	r12,0
80009960:	c0 40       	breq	80009968 <_Balloc+0x4c>
80009962:	78 09       	ld.w	r9,r12[0x0]
80009964:	91 09       	st.w	r8[0x0],r9
80009966:	c0 e8       	rjmp	80009982 <_Balloc+0x66>
80009968:	0e 9c       	mov	r12,r7
8000996a:	30 17       	mov	r7,1
8000996c:	0e 9b       	mov	r11,r7
8000996e:	ee 06 09 47 	lsl	r7,r7,r6
80009972:	ee ca ff fb 	sub	r10,r7,-5
80009976:	a3 6a       	lsl	r10,0x2
80009978:	e0 a0 02 50 	rcall	80009e18 <_calloc_r>
8000997c:	c0 60       	breq	80009988 <_Balloc+0x6c>
8000997e:	99 16       	st.w	r12[0x4],r6
80009980:	99 27       	st.w	r12[0x8],r7
80009982:	30 08       	mov	r8,0
80009984:	99 38       	st.w	r12[0xc],r8
80009986:	99 48       	st.w	r12[0x10],r8
80009988:	d8 22       	popm	r4-r7,pc
8000998a:	d7 03       	nop

8000998c <__d2b>:
8000998c:	d4 31       	pushm	r0-r7,lr
8000998e:	20 2d       	sub	sp,8
80009990:	16 93       	mov	r3,r11
80009992:	12 96       	mov	r6,r9
80009994:	10 95       	mov	r5,r8
80009996:	14 92       	mov	r2,r10
80009998:	30 1b       	mov	r11,1
8000999a:	cc 1f       	rcall	8000991c <_Balloc>
8000999c:	f3 d3 c0 14 	bfextu	r9,r3,0x0,0x14
800099a0:	50 09       	stdsp	sp[0x0],r9
800099a2:	f1 d3 c0 1f 	bfextu	r8,r3,0x0,0x1f
800099a6:	b5 a9       	sbr	r9,0x14
800099a8:	f0 01 16 14 	lsr	r1,r8,0x14
800099ac:	fb f9 1a 00 	st.wne	sp[0x0],r9
800099b0:	18 94       	mov	r4,r12
800099b2:	58 02       	cp.w	r2,0
800099b4:	c1 d0       	breq	800099ee <__d2b+0x62>
800099b6:	fa cc ff f8 	sub	r12,sp,-8
800099ba:	18 d2       	st.w	--r12,r2
800099bc:	c6 0e       	rcall	8000967c <__lo0bits>
800099be:	40 18       	lddsp	r8,sp[0x4]
800099c0:	c0 d0       	breq	800099da <__d2b+0x4e>
800099c2:	40 09       	lddsp	r9,sp[0x0]
800099c4:	f8 0a 11 20 	rsub	r10,r12,32
800099c8:	f2 0a 09 4a 	lsl	r10,r9,r10
800099cc:	f5 e8 10 08 	or	r8,r10,r8
800099d0:	89 58       	st.w	r4[0x14],r8
800099d2:	f2 0c 0a 49 	lsr	r9,r9,r12
800099d6:	50 09       	stdsp	sp[0x0],r9
800099d8:	c0 28       	rjmp	800099dc <__d2b+0x50>
800099da:	89 58       	st.w	r4[0x14],r8
800099dc:	40 08       	lddsp	r8,sp[0x0]
800099de:	58 08       	cp.w	r8,0
800099e0:	f9 b3 01 02 	movne	r3,2
800099e4:	f9 b3 00 01 	moveq	r3,1
800099e8:	89 68       	st.w	r4[0x18],r8
800099ea:	89 43       	st.w	r4[0x10],r3
800099ec:	c0 88       	rjmp	800099fc <__d2b+0x70>
800099ee:	1a 9c       	mov	r12,sp
800099f0:	c4 6e       	rcall	8000967c <__lo0bits>
800099f2:	30 13       	mov	r3,1
800099f4:	40 08       	lddsp	r8,sp[0x0]
800099f6:	2e 0c       	sub	r12,-32
800099f8:	89 43       	st.w	r4[0x10],r3
800099fa:	89 58       	st.w	r4[0x14],r8
800099fc:	58 01       	cp.w	r1,0
800099fe:	c0 90       	breq	80009a10 <__d2b+0x84>
80009a00:	e2 c1 04 33 	sub	r1,r1,1075
80009a04:	18 01       	add	r1,r12
80009a06:	8d 01       	st.w	r6[0x0],r1
80009a08:	f8 0c 11 35 	rsub	r12,r12,53
80009a0c:	8b 0c       	st.w	r5[0x0],r12
80009a0e:	c0 d8       	rjmp	80009a28 <__d2b+0x9c>
80009a10:	e6 c8 ff fc 	sub	r8,r3,-4
80009a14:	f8 cc 04 32 	sub	r12,r12,1074
80009a18:	a5 73       	lsl	r3,0x5
80009a1a:	8d 0c       	st.w	r6[0x0],r12
80009a1c:	e8 08 03 2c 	ld.w	r12,r4[r8<<0x2]
80009a20:	fe b0 fd fe 	rcall	8000961c <__hi0bits>
80009a24:	18 13       	sub	r3,r12
80009a26:	8b 03       	st.w	r5[0x0],r3
80009a28:	08 9c       	mov	r12,r4
80009a2a:	2f ed       	sub	sp,-8
80009a2c:	d8 32       	popm	r0-r7,pc
80009a2e:	d7 03       	nop

80009a30 <__mdiff>:
80009a30:	d4 31       	pushm	r0-r7,lr
80009a32:	74 48       	ld.w	r8,r10[0x10]
80009a34:	76 45       	ld.w	r5,r11[0x10]
80009a36:	16 97       	mov	r7,r11
80009a38:	14 96       	mov	r6,r10
80009a3a:	10 15       	sub	r5,r8
80009a3c:	c1 31       	brne	80009a62 <__mdiff+0x32>
80009a3e:	2f b8       	sub	r8,-5
80009a40:	ee ce ff ec 	sub	lr,r7,-20
80009a44:	a3 68       	lsl	r8,0x2
80009a46:	f4 08 00 0b 	add	r11,r10,r8
80009a4a:	ee 08 00 08 	add	r8,r7,r8
80009a4e:	11 4a       	ld.w	r10,--r8
80009a50:	17 49       	ld.w	r9,--r11
80009a52:	12 3a       	cp.w	r10,r9
80009a54:	c0 30       	breq	80009a5a <__mdiff+0x2a>
80009a56:	c0 e2       	brcc	80009a72 <__mdiff+0x42>
80009a58:	c0 78       	rjmp	80009a66 <__mdiff+0x36>
80009a5a:	1c 38       	cp.w	r8,lr
80009a5c:	fe 9b ff f9 	brhi	80009a4e <__mdiff+0x1e>
80009a60:	c4 98       	rjmp	80009af2 <__mdiff+0xc2>
80009a62:	58 05       	cp.w	r5,0
80009a64:	c0 64       	brge	80009a70 <__mdiff+0x40>
80009a66:	0e 98       	mov	r8,r7
80009a68:	30 15       	mov	r5,1
80009a6a:	0c 97       	mov	r7,r6
80009a6c:	10 96       	mov	r6,r8
80009a6e:	c0 28       	rjmp	80009a72 <__mdiff+0x42>
80009a70:	30 05       	mov	r5,0
80009a72:	6e 1b       	ld.w	r11,r7[0x4]
80009a74:	c5 4f       	rcall	8000991c <_Balloc>
80009a76:	6e 49       	ld.w	r9,r7[0x10]
80009a78:	6c 44       	ld.w	r4,r6[0x10]
80009a7a:	99 35       	st.w	r12[0xc],r5
80009a7c:	2f b4       	sub	r4,-5
80009a7e:	f2 c5 ff fb 	sub	r5,r9,-5
80009a82:	ec 04 00 24 	add	r4,r6,r4<<0x2
80009a86:	ee 05 00 25 	add	r5,r7,r5<<0x2
80009a8a:	2e c6       	sub	r6,-20
80009a8c:	2e c7       	sub	r7,-20
80009a8e:	f8 c8 ff ec 	sub	r8,r12,-20
80009a92:	30 0a       	mov	r10,0
80009a94:	0f 0e       	ld.w	lr,r7++
80009a96:	0d 0b       	ld.w	r11,r6++
80009a98:	fc 02 16 10 	lsr	r2,lr,0x10
80009a9c:	f6 03 16 10 	lsr	r3,r11,0x10
80009aa0:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80009aa4:	e4 03 01 03 	sub	r3,r2,r3
80009aa8:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80009aac:	fc 0b 01 0b 	sub	r11,lr,r11
80009ab0:	f6 0a 00 0a 	add	r10,r11,r10
80009ab4:	b0 1a       	st.h	r8[0x2],r10
80009ab6:	b1 4a       	asr	r10,0x10
80009ab8:	e6 0a 00 0a 	add	r10,r3,r10
80009abc:	b0 0a       	st.h	r8[0x0],r10
80009abe:	2f c8       	sub	r8,-4
80009ac0:	b1 4a       	asr	r10,0x10
80009ac2:	08 36       	cp.w	r6,r4
80009ac4:	ce 83       	brcs	80009a94 <__mdiff+0x64>
80009ac6:	c0 d8       	rjmp	80009ae0 <__mdiff+0xb0>
80009ac8:	0f 0b       	ld.w	r11,r7++
80009aca:	f6 0e 16 10 	lsr	lr,r11,0x10
80009ace:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80009ad2:	16 0a       	add	r10,r11
80009ad4:	b0 1a       	st.h	r8[0x2],r10
80009ad6:	b1 4a       	asr	r10,0x10
80009ad8:	1c 0a       	add	r10,lr
80009ada:	b0 0a       	st.h	r8[0x0],r10
80009adc:	2f c8       	sub	r8,-4
80009ade:	b1 4a       	asr	r10,0x10
80009ae0:	0a 37       	cp.w	r7,r5
80009ae2:	cf 33       	brcs	80009ac8 <__mdiff+0x98>
80009ae4:	c0 28       	rjmp	80009ae8 <__mdiff+0xb8>
80009ae6:	20 19       	sub	r9,1
80009ae8:	11 4a       	ld.w	r10,--r8
80009aea:	58 0a       	cp.w	r10,0
80009aec:	cf d0       	breq	80009ae6 <__mdiff+0xb6>
80009aee:	99 49       	st.w	r12[0x10],r9
80009af0:	d8 32       	popm	r0-r7,pc
80009af2:	30 0b       	mov	r11,0
80009af4:	c1 4f       	rcall	8000991c <_Balloc>
80009af6:	30 18       	mov	r8,1
80009af8:	99 48       	st.w	r12[0x10],r8
80009afa:	30 08       	mov	r8,0
80009afc:	99 58       	st.w	r12[0x14],r8
80009afe:	d8 32       	popm	r0-r7,pc

80009b00 <__lshift>:
80009b00:	d4 31       	pushm	r0-r7,lr
80009b02:	16 97       	mov	r7,r11
80009b04:	76 46       	ld.w	r6,r11[0x10]
80009b06:	f4 02 14 05 	asr	r2,r10,0x5
80009b0a:	2f f6       	sub	r6,-1
80009b0c:	14 93       	mov	r3,r10
80009b0e:	18 94       	mov	r4,r12
80009b10:	04 06       	add	r6,r2
80009b12:	76 1b       	ld.w	r11,r11[0x4]
80009b14:	6e 28       	ld.w	r8,r7[0x8]
80009b16:	c0 38       	rjmp	80009b1c <__lshift+0x1c>
80009b18:	2f fb       	sub	r11,-1
80009b1a:	a1 78       	lsl	r8,0x1
80009b1c:	10 36       	cp.w	r6,r8
80009b1e:	fe 99 ff fd 	brgt	80009b18 <__lshift+0x18>
80009b22:	08 9c       	mov	r12,r4
80009b24:	cf ce       	rcall	8000991c <_Balloc>
80009b26:	30 09       	mov	r9,0
80009b28:	18 95       	mov	r5,r12
80009b2a:	f8 c8 ff ec 	sub	r8,r12,-20
80009b2e:	12 9a       	mov	r10,r9
80009b30:	c0 38       	rjmp	80009b36 <__lshift+0x36>
80009b32:	10 aa       	st.w	r8++,r10
80009b34:	2f f9       	sub	r9,-1
80009b36:	04 39       	cp.w	r9,r2
80009b38:	cf d5       	brlt	80009b32 <__lshift+0x32>
80009b3a:	6e 4b       	ld.w	r11,r7[0x10]
80009b3c:	e7 d3 c0 05 	bfextu	r3,r3,0x0,0x5
80009b40:	2f bb       	sub	r11,-5
80009b42:	ee c9 ff ec 	sub	r9,r7,-20
80009b46:	ee 0b 00 2b 	add	r11,r7,r11<<0x2
80009b4a:	58 03       	cp.w	r3,0
80009b4c:	c1 30       	breq	80009b72 <__lshift+0x72>
80009b4e:	e6 0c 11 20 	rsub	r12,r3,32
80009b52:	30 0a       	mov	r10,0
80009b54:	72 02       	ld.w	r2,r9[0x0]
80009b56:	e4 03 09 42 	lsl	r2,r2,r3
80009b5a:	04 4a       	or	r10,r2
80009b5c:	10 aa       	st.w	r8++,r10
80009b5e:	13 0a       	ld.w	r10,r9++
80009b60:	f4 0c 0a 4a 	lsr	r10,r10,r12
80009b64:	16 39       	cp.w	r9,r11
80009b66:	cf 73       	brcs	80009b54 <__lshift+0x54>
80009b68:	91 0a       	st.w	r8[0x0],r10
80009b6a:	58 0a       	cp.w	r10,0
80009b6c:	c0 70       	breq	80009b7a <__lshift+0x7a>
80009b6e:	2f f6       	sub	r6,-1
80009b70:	c0 58       	rjmp	80009b7a <__lshift+0x7a>
80009b72:	13 0a       	ld.w	r10,r9++
80009b74:	10 aa       	st.w	r8++,r10
80009b76:	16 39       	cp.w	r9,r11
80009b78:	cf d3       	brcs	80009b72 <__lshift+0x72>
80009b7a:	08 9c       	mov	r12,r4
80009b7c:	20 16       	sub	r6,1
80009b7e:	0e 9b       	mov	r11,r7
80009b80:	8b 46       	st.w	r5[0x10],r6
80009b82:	cb 3e       	rcall	800098e8 <_Bfree>
80009b84:	0a 9c       	mov	r12,r5
80009b86:	d8 32       	popm	r0-r7,pc

80009b88 <__multiply>:
80009b88:	d4 31       	pushm	r0-r7,lr
80009b8a:	20 2d       	sub	sp,8
80009b8c:	76 49       	ld.w	r9,r11[0x10]
80009b8e:	74 48       	ld.w	r8,r10[0x10]
80009b90:	16 96       	mov	r6,r11
80009b92:	14 95       	mov	r5,r10
80009b94:	10 39       	cp.w	r9,r8
80009b96:	ec 08 17 50 	movlt	r8,r6
80009b9a:	ea 06 17 50 	movlt	r6,r5
80009b9e:	f0 05 17 50 	movlt	r5,r8
80009ba2:	6c 28       	ld.w	r8,r6[0x8]
80009ba4:	76 43       	ld.w	r3,r11[0x10]
80009ba6:	74 42       	ld.w	r2,r10[0x10]
80009ba8:	76 1b       	ld.w	r11,r11[0x4]
80009baa:	e4 03 00 07 	add	r7,r2,r3
80009bae:	10 37       	cp.w	r7,r8
80009bb0:	f7 bb 09 ff 	subgt	r11,-1
80009bb4:	cb 4e       	rcall	8000991c <_Balloc>
80009bb6:	ee c4 ff fb 	sub	r4,r7,-5
80009bba:	f8 c9 ff ec 	sub	r9,r12,-20
80009bbe:	f8 04 00 24 	add	r4,r12,r4<<0x2
80009bc2:	30 0a       	mov	r10,0
80009bc4:	12 98       	mov	r8,r9
80009bc6:	c0 28       	rjmp	80009bca <__multiply+0x42>
80009bc8:	10 aa       	st.w	r8++,r10
80009bca:	08 38       	cp.w	r8,r4
80009bcc:	cf e3       	brcs	80009bc8 <__multiply+0x40>
80009bce:	2f b3       	sub	r3,-5
80009bd0:	2f b2       	sub	r2,-5
80009bd2:	ec 03 00 23 	add	r3,r6,r3<<0x2
80009bd6:	ea 02 00 22 	add	r2,r5,r2<<0x2
80009bda:	ec cb ff ec 	sub	r11,r6,-20
80009bde:	50 12       	stdsp	sp[0x4],r2
80009be0:	ea ca ff ec 	sub	r10,r5,-20
80009be4:	c4 48       	rjmp	80009c6c <__multiply+0xe4>
80009be6:	94 95       	ld.uh	r5,r10[0x2]
80009be8:	58 05       	cp.w	r5,0
80009bea:	c2 00       	breq	80009c2a <__multiply+0xa2>
80009bec:	12 98       	mov	r8,r9
80009bee:	16 96       	mov	r6,r11
80009bf0:	30 0e       	mov	lr,0
80009bf2:	50 09       	stdsp	sp[0x0],r9
80009bf4:	0d 02       	ld.w	r2,r6++
80009bf6:	e4 00 16 10 	lsr	r0,r2,0x10
80009bfa:	70 01       	ld.w	r1,r8[0x0]
80009bfc:	70 09       	ld.w	r9,r8[0x0]
80009bfe:	b1 81       	lsr	r1,0x10
80009c00:	e5 d2 c0 10 	bfextu	r2,r2,0x0,0x10
80009c04:	e0 05 03 41 	mac	r1,r0,r5
80009c08:	ab 32       	mul	r2,r5
80009c0a:	e1 d9 c0 10 	bfextu	r0,r9,0x0,0x10
80009c0e:	00 02       	add	r2,r0
80009c10:	e4 0e 00 0e 	add	lr,r2,lr
80009c14:	b0 1e       	st.h	r8[0x2],lr
80009c16:	b1 8e       	lsr	lr,0x10
80009c18:	1c 01       	add	r1,lr
80009c1a:	b0 01       	st.h	r8[0x0],r1
80009c1c:	e2 0e 16 10 	lsr	lr,r1,0x10
80009c20:	2f c8       	sub	r8,-4
80009c22:	06 36       	cp.w	r6,r3
80009c24:	ce 83       	brcs	80009bf4 <__multiply+0x6c>
80009c26:	40 09       	lddsp	r9,sp[0x0]
80009c28:	91 0e       	st.w	r8[0x0],lr
80009c2a:	94 86       	ld.uh	r6,r10[0x0]
80009c2c:	58 06       	cp.w	r6,0
80009c2e:	c1 d0       	breq	80009c68 <__multiply+0xe0>
80009c30:	72 02       	ld.w	r2,r9[0x0]
80009c32:	12 98       	mov	r8,r9
80009c34:	16 9e       	mov	lr,r11
80009c36:	30 05       	mov	r5,0
80009c38:	b0 12       	st.h	r8[0x2],r2
80009c3a:	1d 01       	ld.w	r1,lr++
80009c3c:	90 82       	ld.uh	r2,r8[0x0]
80009c3e:	e1 d1 c0 10 	bfextu	r0,r1,0x0,0x10
80009c42:	ad 30       	mul	r0,r6
80009c44:	e0 02 00 02 	add	r2,r0,r2
80009c48:	e4 05 00 05 	add	r5,r2,r5
80009c4c:	b0 05       	st.h	r8[0x0],r5
80009c4e:	b1 85       	lsr	r5,0x10
80009c50:	b1 81       	lsr	r1,0x10
80009c52:	2f c8       	sub	r8,-4
80009c54:	ad 31       	mul	r1,r6
80009c56:	90 92       	ld.uh	r2,r8[0x2]
80009c58:	e2 02 00 02 	add	r2,r1,r2
80009c5c:	0a 02       	add	r2,r5
80009c5e:	e4 05 16 10 	lsr	r5,r2,0x10
80009c62:	06 3e       	cp.w	lr,r3
80009c64:	ce a3       	brcs	80009c38 <__multiply+0xb0>
80009c66:	91 02       	st.w	r8[0x0],r2
80009c68:	2f ca       	sub	r10,-4
80009c6a:	2f c9       	sub	r9,-4
80009c6c:	40 18       	lddsp	r8,sp[0x4]
80009c6e:	10 3a       	cp.w	r10,r8
80009c70:	cb b3       	brcs	80009be6 <__multiply+0x5e>
80009c72:	c0 28       	rjmp	80009c76 <__multiply+0xee>
80009c74:	20 17       	sub	r7,1
80009c76:	58 07       	cp.w	r7,0
80009c78:	e0 8a 00 05 	brle	80009c82 <__multiply+0xfa>
80009c7c:	09 48       	ld.w	r8,--r4
80009c7e:	58 08       	cp.w	r8,0
80009c80:	cf a0       	breq	80009c74 <__multiply+0xec>
80009c82:	99 47       	st.w	r12[0x10],r7
80009c84:	2f ed       	sub	sp,-8
80009c86:	d8 32       	popm	r0-r7,pc

80009c88 <__i2b>:
80009c88:	d4 21       	pushm	r4-r7,lr
80009c8a:	16 97       	mov	r7,r11
80009c8c:	30 1b       	mov	r11,1
80009c8e:	c4 7e       	rcall	8000991c <_Balloc>
80009c90:	30 19       	mov	r9,1
80009c92:	99 57       	st.w	r12[0x14],r7
80009c94:	99 49       	st.w	r12[0x10],r9
80009c96:	d8 22       	popm	r4-r7,pc

80009c98 <__multadd>:
80009c98:	d4 31       	pushm	r0-r7,lr
80009c9a:	30 08       	mov	r8,0
80009c9c:	12 95       	mov	r5,r9
80009c9e:	16 97       	mov	r7,r11
80009ca0:	18 96       	mov	r6,r12
80009ca2:	76 44       	ld.w	r4,r11[0x10]
80009ca4:	f6 c9 ff ec 	sub	r9,r11,-20
80009ca8:	72 0b       	ld.w	r11,r9[0x0]
80009caa:	f6 0c 16 10 	lsr	r12,r11,0x10
80009cae:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80009cb2:	f4 0c 02 4c 	mul	r12,r10,r12
80009cb6:	f4 0b 03 45 	mac	r5,r10,r11
80009cba:	f7 d5 c0 10 	bfextu	r11,r5,0x0,0x10
80009cbe:	b1 85       	lsr	r5,0x10
80009cc0:	18 05       	add	r5,r12
80009cc2:	ea 0c 15 10 	lsl	r12,r5,0x10
80009cc6:	f8 0b 00 0b 	add	r11,r12,r11
80009cca:	12 ab       	st.w	r9++,r11
80009ccc:	2f f8       	sub	r8,-1
80009cce:	b1 85       	lsr	r5,0x10
80009cd0:	08 38       	cp.w	r8,r4
80009cd2:	ce b5       	brlt	80009ca8 <__multadd+0x10>
80009cd4:	58 05       	cp.w	r5,0
80009cd6:	c1 c0       	breq	80009d0e <__multadd+0x76>
80009cd8:	6e 28       	ld.w	r8,r7[0x8]
80009cda:	10 34       	cp.w	r4,r8
80009cdc:	c1 35       	brlt	80009d02 <__multadd+0x6a>
80009cde:	6e 1b       	ld.w	r11,r7[0x4]
80009ce0:	0c 9c       	mov	r12,r6
80009ce2:	2f fb       	sub	r11,-1
80009ce4:	c1 ce       	rcall	8000991c <_Balloc>
80009ce6:	6e 4a       	ld.w	r10,r7[0x10]
80009ce8:	ee cb ff f4 	sub	r11,r7,-12
80009cec:	18 93       	mov	r3,r12
80009cee:	2f ea       	sub	r10,-2
80009cf0:	2f 4c       	sub	r12,-12
80009cf2:	a3 6a       	lsl	r10,0x2
80009cf4:	fe b0 f0 24 	rcall	80007d3c <memcpy>
80009cf8:	0e 9b       	mov	r11,r7
80009cfa:	0c 9c       	mov	r12,r6
80009cfc:	fe b0 fd f6 	rcall	800098e8 <_Bfree>
80009d00:	06 97       	mov	r7,r3
80009d02:	e8 c8 ff ff 	sub	r8,r4,-1
80009d06:	2f b4       	sub	r4,-5
80009d08:	8f 48       	st.w	r7[0x10],r8
80009d0a:	ee 04 09 25 	st.w	r7[r4<<0x2],r5
80009d0e:	0e 9c       	mov	r12,r7
80009d10:	d8 32       	popm	r0-r7,pc
80009d12:	d7 03       	nop

80009d14 <__pow5mult>:
80009d14:	d4 31       	pushm	r0-r7,lr
80009d16:	14 96       	mov	r6,r10
80009d18:	18 97       	mov	r7,r12
80009d1a:	16 94       	mov	r4,r11
80009d1c:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
80009d20:	c0 90       	breq	80009d32 <__pow5mult+0x1e>
80009d22:	20 18       	sub	r8,1
80009d24:	fe c9 f6 34 	sub	r9,pc,-2508
80009d28:	f2 08 03 2a 	ld.w	r10,r9[r8<<0x2]
80009d2c:	30 09       	mov	r9,0
80009d2e:	cb 5f       	rcall	80009c98 <__multadd>
80009d30:	18 94       	mov	r4,r12
80009d32:	a3 46       	asr	r6,0x2
80009d34:	c3 40       	breq	80009d9c <__pow5mult+0x88>
80009d36:	6e 95       	ld.w	r5,r7[0x24]
80009d38:	58 05       	cp.w	r5,0
80009d3a:	c0 91       	brne	80009d4c <__pow5mult+0x38>
80009d3c:	31 0c       	mov	r12,16
80009d3e:	fe b0 ed dd 	rcall	800078f8 <malloc>
80009d42:	99 35       	st.w	r12[0xc],r5
80009d44:	8f 9c       	st.w	r7[0x24],r12
80009d46:	99 15       	st.w	r12[0x4],r5
80009d48:	99 25       	st.w	r12[0x8],r5
80009d4a:	99 05       	st.w	r12[0x0],r5
80009d4c:	6e 93       	ld.w	r3,r7[0x24]
80009d4e:	66 25       	ld.w	r5,r3[0x8]
80009d50:	58 05       	cp.w	r5,0
80009d52:	c0 c1       	brne	80009d6a <__pow5mult+0x56>
80009d54:	e0 6b 02 71 	mov	r11,625
80009d58:	0e 9c       	mov	r12,r7
80009d5a:	c9 7f       	rcall	80009c88 <__i2b>
80009d5c:	87 2c       	st.w	r3[0x8],r12
80009d5e:	30 08       	mov	r8,0
80009d60:	18 95       	mov	r5,r12
80009d62:	99 08       	st.w	r12[0x0],r8
80009d64:	c0 38       	rjmp	80009d6a <__pow5mult+0x56>
80009d66:	06 9c       	mov	r12,r3
80009d68:	18 95       	mov	r5,r12
80009d6a:	ed b6 00 00 	bld	r6,0x0
80009d6e:	c0 b1       	brne	80009d84 <__pow5mult+0x70>
80009d70:	08 9b       	mov	r11,r4
80009d72:	0a 9a       	mov	r10,r5
80009d74:	0e 9c       	mov	r12,r7
80009d76:	c0 9f       	rcall	80009b88 <__multiply>
80009d78:	08 9b       	mov	r11,r4
80009d7a:	18 93       	mov	r3,r12
80009d7c:	0e 9c       	mov	r12,r7
80009d7e:	06 94       	mov	r4,r3
80009d80:	fe b0 fd b4 	rcall	800098e8 <_Bfree>
80009d84:	a1 56       	asr	r6,0x1
80009d86:	c0 b0       	breq	80009d9c <__pow5mult+0x88>
80009d88:	6a 03       	ld.w	r3,r5[0x0]
80009d8a:	58 03       	cp.w	r3,0
80009d8c:	ce d1       	brne	80009d66 <__pow5mult+0x52>
80009d8e:	0a 9a       	mov	r10,r5
80009d90:	0a 9b       	mov	r11,r5
80009d92:	0e 9c       	mov	r12,r7
80009d94:	cf ae       	rcall	80009b88 <__multiply>
80009d96:	8b 0c       	st.w	r5[0x0],r12
80009d98:	99 03       	st.w	r12[0x0],r3
80009d9a:	ce 7b       	rjmp	80009d68 <__pow5mult+0x54>
80009d9c:	08 9c       	mov	r12,r4
80009d9e:	d8 32       	popm	r0-r7,pc

80009da0 <__s2b>:
80009da0:	d4 31       	pushm	r0-r7,lr
80009da2:	12 93       	mov	r3,r9
80009da4:	10 94       	mov	r4,r8
80009da6:	f2 c8 ff f8 	sub	r8,r9,-8
80009daa:	30 99       	mov	r9,9
80009dac:	f0 09 0c 08 	divs	r8,r8,r9
80009db0:	16 95       	mov	r5,r11
80009db2:	10 99       	mov	r9,r8
80009db4:	18 96       	mov	r6,r12
80009db6:	14 97       	mov	r7,r10
80009db8:	30 18       	mov	r8,1
80009dba:	30 0b       	mov	r11,0
80009dbc:	c0 38       	rjmp	80009dc2 <__s2b+0x22>
80009dbe:	a1 78       	lsl	r8,0x1
80009dc0:	2f fb       	sub	r11,-1
80009dc2:	10 39       	cp.w	r9,r8
80009dc4:	fe 99 ff fd 	brgt	80009dbe <__s2b+0x1e>
80009dc8:	0c 9c       	mov	r12,r6
80009dca:	fe b0 fd a9 	rcall	8000991c <_Balloc>
80009dce:	30 18       	mov	r8,1
80009dd0:	99 54       	st.w	r12[0x14],r4
80009dd2:	99 48       	st.w	r12[0x10],r8
80009dd4:	58 97       	cp.w	r7,9
80009dd6:	e0 8a 00 13 	brle	80009dfc <__s2b+0x5c>
80009dda:	ea c2 ff f7 	sub	r2,r5,-9
80009dde:	30 94       	mov	r4,9
80009de0:	ea 04 07 09 	ld.ub	r9,r5[r4]
80009de4:	18 9b       	mov	r11,r12
80009de6:	2f f4       	sub	r4,-1
80009de8:	23 09       	sub	r9,48
80009dea:	30 aa       	mov	r10,10
80009dec:	0c 9c       	mov	r12,r6
80009dee:	c5 5f       	rcall	80009c98 <__multadd>
80009df0:	0e 34       	cp.w	r4,r7
80009df2:	cf 75       	brlt	80009de0 <__s2b+0x40>
80009df4:	e4 07 00 05 	add	r5,r2,r7
80009df8:	20 85       	sub	r5,8
80009dfa:	c0 b8       	rjmp	80009e10 <__s2b+0x70>
80009dfc:	2f 65       	sub	r5,-10
80009dfe:	30 97       	mov	r7,9
80009e00:	c0 88       	rjmp	80009e10 <__s2b+0x70>
80009e02:	18 9b       	mov	r11,r12
80009e04:	0b 39       	ld.ub	r9,r5++
80009e06:	2f f7       	sub	r7,-1
80009e08:	23 09       	sub	r9,48
80009e0a:	30 aa       	mov	r10,10
80009e0c:	0c 9c       	mov	r12,r6
80009e0e:	c4 5f       	rcall	80009c98 <__multadd>
80009e10:	06 37       	cp.w	r7,r3
80009e12:	cf 85       	brlt	80009e02 <__s2b+0x62>
80009e14:	d8 32       	popm	r0-r7,pc
80009e16:	d7 03       	nop

80009e18 <_calloc_r>:
80009e18:	d4 21       	pushm	r4-r7,lr
80009e1a:	f4 0b 02 4b 	mul	r11,r10,r11
80009e1e:	fe b0 ed 75 	rcall	80007908 <_malloc_r>
80009e22:	18 97       	mov	r7,r12
80009e24:	c2 30       	breq	80009e6a <_calloc_r+0x52>
80009e26:	f8 fa ff fc 	ld.w	r10,r12[-4]
80009e2a:	e0 1a ff fc 	andl	r10,0xfffc
80009e2e:	20 4a       	sub	r10,4
80009e30:	e0 4a 00 24 	cp.w	r10,36
80009e34:	e0 8b 00 18 	brhi	80009e64 <_calloc_r+0x4c>
80009e38:	18 98       	mov	r8,r12
80009e3a:	59 3a       	cp.w	r10,19
80009e3c:	e0 88 00 0f 	brls	80009e5a <_calloc_r+0x42>
80009e40:	30 09       	mov	r9,0
80009e42:	10 a9       	st.w	r8++,r9
80009e44:	10 a9       	st.w	r8++,r9
80009e46:	59 ba       	cp.w	r10,27
80009e48:	e0 88 00 09 	brls	80009e5a <_calloc_r+0x42>
80009e4c:	10 a9       	st.w	r8++,r9
80009e4e:	10 a9       	st.w	r8++,r9
80009e50:	e0 4a 00 24 	cp.w	r10,36
80009e54:	c0 31       	brne	80009e5a <_calloc_r+0x42>
80009e56:	10 a9       	st.w	r8++,r9
80009e58:	10 a9       	st.w	r8++,r9
80009e5a:	30 09       	mov	r9,0
80009e5c:	10 a9       	st.w	r8++,r9
80009e5e:	91 19       	st.w	r8[0x4],r9
80009e60:	91 09       	st.w	r8[0x0],r9
80009e62:	c0 48       	rjmp	80009e6a <_calloc_r+0x52>
80009e64:	30 0b       	mov	r11,0
80009e66:	fe b0 f0 0f 	rcall	80007e84 <memset>
80009e6a:	0e 9c       	mov	r12,r7
80009e6c:	d8 22       	popm	r4-r7,pc
80009e6e:	d7 03       	nop

80009e70 <__avr32_f64_to_u32>:
80009e70:	58 0b       	cp.w	r11,0
80009e72:	5e 6d       	retmi	0

80009e74 <__avr32_f64_to_s32>:
80009e74:	f6 0c 15 01 	lsl	r12,r11,0x1
80009e78:	b5 9c       	lsr	r12,0x15
80009e7a:	e0 2c 03 ff 	sub	r12,1023
80009e7e:	5e 3d       	retlo	0
80009e80:	f8 0c 11 1f 	rsub	r12,r12,31
80009e84:	16 99       	mov	r9,r11
80009e86:	ab 7b       	lsl	r11,0xb
80009e88:	bf bb       	sbr	r11,0x1f
80009e8a:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80009e8e:	f6 0c 0a 4b 	lsr	r11,r11,r12
80009e92:	a1 79       	lsl	r9,0x1
80009e94:	5e 2b       	reths	r11
80009e96:	5c 3b       	neg	r11
80009e98:	5e fb       	retal	r11
80009e9a:	d7 03       	nop

80009e9c <__do_global_ctors_aux>:
80009e9c:	d4 21       	pushm	r4-r7,lr
80009e9e:	30 c7       	mov	r7,12
80009ea0:	c0 28       	rjmp	80009ea4 <__do_global_ctors_aux+0x8>
80009ea2:	5d 18       	icall	r8
80009ea4:	20 47       	sub	r7,4
80009ea6:	6e 08       	ld.w	r8,r7[0x0]
80009ea8:	5b f8       	cp.w	r8,-1
80009eaa:	cf c1       	brne	80009ea2 <__do_global_ctors_aux+0x6>
80009eac:	d8 22       	popm	r4-r7,pc
80009eae:	d7 03       	nop

Disassembly of section .exception:

8000a000 <_evba>:
8000a000:	c0 08       	rjmp	8000a000 <_evba>
	...

8000a004 <_handle_TLB_Multiple_Hit>:
8000a004:	c0 08       	rjmp	8000a004 <_handle_TLB_Multiple_Hit>
	...

8000a008 <_handle_Bus_Error_Data_Fetch>:
8000a008:	c0 08       	rjmp	8000a008 <_handle_Bus_Error_Data_Fetch>
	...

8000a00c <_handle_Bus_Error_Instruction_Fetch>:
8000a00c:	c0 08       	rjmp	8000a00c <_handle_Bus_Error_Instruction_Fetch>
	...

8000a010 <_handle_NMI>:
8000a010:	c0 08       	rjmp	8000a010 <_handle_NMI>
	...

8000a014 <_handle_Instruction_Address>:
8000a014:	c0 08       	rjmp	8000a014 <_handle_Instruction_Address>
	...

8000a018 <_handle_ITLB_Protection>:
8000a018:	c0 08       	rjmp	8000a018 <_handle_ITLB_Protection>
	...

8000a01c <_handle_Breakpoint>:
8000a01c:	c0 08       	rjmp	8000a01c <_handle_Breakpoint>
	...

8000a020 <_handle_Illegal_Opcode>:
8000a020:	c0 08       	rjmp	8000a020 <_handle_Illegal_Opcode>
	...

8000a024 <_handle_Unimplemented_Instruction>:
8000a024:	c0 08       	rjmp	8000a024 <_handle_Unimplemented_Instruction>
	...

8000a028 <_handle_Privilege_Violation>:
8000a028:	c0 08       	rjmp	8000a028 <_handle_Privilege_Violation>
	...

8000a02c <_handle_Floating_Point>:
8000a02c:	c0 08       	rjmp	8000a02c <_handle_Floating_Point>
	...

8000a030 <_handle_Coprocessor_Absent>:
8000a030:	c0 08       	rjmp	8000a030 <_handle_Coprocessor_Absent>
	...

8000a034 <_handle_Data_Address_Read>:
8000a034:	c0 08       	rjmp	8000a034 <_handle_Data_Address_Read>
	...

8000a038 <_handle_Data_Address_Write>:
8000a038:	c0 08       	rjmp	8000a038 <_handle_Data_Address_Write>
	...

8000a03c <_handle_DTLB_Protection_Read>:
8000a03c:	c0 08       	rjmp	8000a03c <_handle_DTLB_Protection_Read>
	...

8000a040 <_handle_DTLB_Protection_Write>:
8000a040:	c0 08       	rjmp	8000a040 <_handle_DTLB_Protection_Write>
	...

8000a044 <_handle_DTLB_Modified>:
8000a044:	c0 08       	rjmp	8000a044 <_handle_DTLB_Modified>
	...

8000a050 <_handle_ITLB_Miss>:
8000a050:	c0 08       	rjmp	8000a050 <_handle_ITLB_Miss>
	...

8000a060 <_handle_DTLB_Miss_Read>:
8000a060:	c0 08       	rjmp	8000a060 <_handle_DTLB_Miss_Read>
	...

8000a070 <_handle_DTLB_Miss_Write>:
8000a070:	c0 08       	rjmp	8000a070 <_handle_DTLB_Miss_Write>
	...

8000a100 <_handle_Supervisor_Call>:
8000a100:	fe cf 4e b0 	sub	pc,pc,20144

8000a104 <_int0>:
8000a104:	30 0c       	mov	r12,0
8000a106:	fe b0 d4 b5 	rcall	80004a70 <_get_interrupt_handler>
8000a10a:	58 0c       	cp.w	r12,0
8000a10c:	f8 0f 17 10 	movne	pc,r12
8000a110:	d6 03       	rete

8000a112 <_int1>:
8000a112:	30 1c       	mov	r12,1
8000a114:	fe b0 d4 ae 	rcall	80004a70 <_get_interrupt_handler>
8000a118:	58 0c       	cp.w	r12,0
8000a11a:	f8 0f 17 10 	movne	pc,r12
8000a11e:	d6 03       	rete

8000a120 <_int2>:
8000a120:	30 2c       	mov	r12,2
8000a122:	fe b0 d4 a7 	rcall	80004a70 <_get_interrupt_handler>
8000a126:	58 0c       	cp.w	r12,0
8000a128:	f8 0f 17 10 	movne	pc,r12
8000a12c:	d6 03       	rete

8000a12e <_int3>:
8000a12e:	30 3c       	mov	r12,3
8000a130:	fe b0 d4 a0 	rcall	80004a70 <_get_interrupt_handler>
8000a134:	58 0c       	cp.w	r12,0
8000a136:	f8 0f 17 10 	movne	pc,r12
8000a13a:	d6 03       	rete
8000a13c:	d7 03       	nop
8000a13e:	d7 03       	nop
8000a140:	d7 03       	nop
8000a142:	d7 03       	nop
8000a144:	d7 03       	nop
8000a146:	d7 03       	nop
8000a148:	d7 03       	nop
8000a14a:	d7 03       	nop
8000a14c:	d7 03       	nop
8000a14e:	d7 03       	nop
8000a150:	d7 03       	nop
8000a152:	d7 03       	nop
8000a154:	d7 03       	nop
8000a156:	d7 03       	nop
8000a158:	d7 03       	nop
8000a15a:	d7 03       	nop
8000a15c:	d7 03       	nop
8000a15e:	d7 03       	nop
8000a160:	d7 03       	nop
8000a162:	d7 03       	nop
8000a164:	d7 03       	nop
8000a166:	d7 03       	nop
8000a168:	d7 03       	nop
8000a16a:	d7 03       	nop
8000a16c:	d7 03       	nop
8000a16e:	d7 03       	nop
8000a170:	d7 03       	nop
8000a172:	d7 03       	nop
8000a174:	d7 03       	nop
8000a176:	d7 03       	nop
8000a178:	d7 03       	nop
8000a17a:	d7 03       	nop
8000a17c:	d7 03       	nop
8000a17e:	d7 03       	nop
8000a180:	d7 03       	nop
8000a182:	d7 03       	nop
8000a184:	d7 03       	nop
8000a186:	d7 03       	nop
8000a188:	d7 03       	nop
8000a18a:	d7 03       	nop
8000a18c:	d7 03       	nop
8000a18e:	d7 03       	nop
8000a190:	d7 03       	nop
8000a192:	d7 03       	nop
8000a194:	d7 03       	nop
8000a196:	d7 03       	nop
8000a198:	d7 03       	nop
8000a19a:	d7 03       	nop
8000a19c:	d7 03       	nop
8000a19e:	d7 03       	nop
8000a1a0:	d7 03       	nop
8000a1a2:	d7 03       	nop
8000a1a4:	d7 03       	nop
8000a1a6:	d7 03       	nop
8000a1a8:	d7 03       	nop
8000a1aa:	d7 03       	nop
8000a1ac:	d7 03       	nop
8000a1ae:	d7 03       	nop
8000a1b0:	d7 03       	nop
8000a1b2:	d7 03       	nop
8000a1b4:	d7 03       	nop
8000a1b6:	d7 03       	nop
8000a1b8:	d7 03       	nop
8000a1ba:	d7 03       	nop
8000a1bc:	d7 03       	nop
8000a1be:	d7 03       	nop
8000a1c0:	d7 03       	nop
8000a1c2:	d7 03       	nop
8000a1c4:	d7 03       	nop
8000a1c6:	d7 03       	nop
8000a1c8:	d7 03       	nop
8000a1ca:	d7 03       	nop
8000a1cc:	d7 03       	nop
8000a1ce:	d7 03       	nop
8000a1d0:	d7 03       	nop
8000a1d2:	d7 03       	nop
8000a1d4:	d7 03       	nop
8000a1d6:	d7 03       	nop
8000a1d8:	d7 03       	nop
8000a1da:	d7 03       	nop
8000a1dc:	d7 03       	nop
8000a1de:	d7 03       	nop
8000a1e0:	d7 03       	nop
8000a1e2:	d7 03       	nop
8000a1e4:	d7 03       	nop
8000a1e6:	d7 03       	nop
8000a1e8:	d7 03       	nop
8000a1ea:	d7 03       	nop
8000a1ec:	d7 03       	nop
8000a1ee:	d7 03       	nop
8000a1f0:	d7 03       	nop
8000a1f2:	d7 03       	nop
8000a1f4:	d7 03       	nop
8000a1f6:	d7 03       	nop
8000a1f8:	d7 03       	nop
8000a1fa:	d7 03       	nop
8000a1fc:	d7 03       	nop
8000a1fe:	d7 03       	nop

Disassembly of section .fini:

8000a200 <_fini>:
8000a200:	eb cd 40 40 	pushm	r6,lr
8000a204:	48 26       	lddpc	r6,8000a20c <_fini+0xc>
8000a206:	1e 26       	rsub	r6,pc
8000a208:	c0 48       	rjmp	8000a210 <_fini+0x10>
8000a20a:	d7 03       	nop
8000a20c:	80 00       	ld.sh	r0,r0[0x0]
8000a20e:	a1 ea       	*unknown*
8000a210:	fe b0 bf 3e 	rcall	8000208c <__do_global_dtors_aux>
8000a214:	e3 cd 80 40 	ldm	sp++,r6,pc
